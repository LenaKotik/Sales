%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 324 405 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: 7556-Air Pods 2g Vector Split...
%%CreationDate: Sat May 18 12:40:33 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 324 405
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
8.73156 105.99506 78.57241 226.72913 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
44.31628 181.96809 m
43.46646 181.96809 42.77537 182.65805 42.77537 183.50787 C
42.77537 184.35798 43.46646 185.04907 44.31628 185.04907 C
45.16639 185.04907 45.85861 184.35798 45.85861 183.50787 C
45.85861 182.65805 45.16639 181.96809 44.31628 181.96809 C
@c
44.34208 207.46998 m
42.98825 207.46998 41.88756 208.57209 41.88756 209.92706 C
41.88756 216.22309 L
41.88756 217.57691 42.98825 218.67902 44.34208 218.67902 C
45.69761 218.67902 46.79830 217.57691 46.79830 216.22309 C
46.79830 209.92706 L
46.79830 208.57209 45.69761 207.46998 44.34208 207.46998 C
@c
43.16910 226.72913 m
32.09131 226.72913 20.43950 222.23395 14.04850 214.25102 C
13.77609 213.91087 13.93427 213.14296 14.69055 213.14296 C
16.39531 213.14296 17.77606 211.76107 17.77606 210.05603 C
17.77606 208.35213 16.39531 206.96995 14.69055 206.96995 C
13.72734 206.96995 12.86646 207.41187 12.30038 208.10409 C
12.04328 208.41902 11.59654 208.69512 11.20309 208.69512 C
10.93351 208.69512 10.68945 208.56387 10.54828 208.22712 C
7.49849 200.85506 7.44831 190.87200 17.06712 189.86598 C
17.32535 189.83906 17.58359 189.82602 17.84013 189.82602 C
20.02139 189.82602 22.18054 190.72687 24.28951 191.34595 C
26.06258 191.86696 27.58620 192.35792 29.25638 192.35792 C
29.80658 192.35792 30.37153 192.30491 30.96709 192.18189 C
39.06652 190.51398 36.85436 175.28287 28.96441 175.28287 C
15.55625 175.28287 L
15.55625 106.84602 L
15.55625 106.37603 15.93751 105.99506 16.40750 105.99506 C
71.89455 105.99506 L
72.36340 105.99506 72.74409 106.37603 72.74409 106.84602 C
72.74409 175.28287 L
60.09335 175.28287 L
52.35109 175.28287 50.15934 190.80794 57.91635 192.44693 C
58.47420 192.56513 59.02243 192.61502 59.56243 192.61502 C
61.43754 192.61502 63.23159 192.00189 65.12854 191.44006 C
66.58157 191.00806 68.10548 190.70504 69.60813 190.70504 C
70.63512 190.70504 71.65134 190.84706 72.62929 191.18608 C
76.47420 192.51213 78.18236 195.04913 78.50551 199.10494 C
79.75049 214.72498 63.31209 223.79811 49.76050 226.17099 C
47.61950 226.54602 45.40507 226.72913 43.16910 226.72913 C
@c
44.31628 181.71808 m
45.30444 181.71808 46.10806 182.52113 46.10806 183.50787 C
46.10806 184.49490 45.30444 185.29909 44.31628 185.29909 C
43.32926 185.29909 42.52535 184.49490 42.52535 183.50787 C
42.52535 182.52113 43.32926 181.71808 44.31628 181.71808 C
@c
44.34208 207.21997 m
45.83509 207.21997 47.04831 208.43405 47.04831 209.92706 C
47.04831 216.22309 L
47.04831 217.71496 45.83509 218.92904 44.34208 218.92904 C
42.85134 218.92904 41.63754 217.71496 41.63754 216.22309 C
41.63754 209.92706 L
41.63754 208.43405 42.85134 207.21997 44.34208 207.21997 C
@c
43.16910 226.47912 m
45.41244 226.47912 47.61553 226.29203 49.71713 225.92409 C
64.28750 223.37291 79.43357 213.89896 78.25635 199.12507 C
77.93121 195.04800 76.17061 192.67200 72.54737 191.41994 C
71.65417 191.11294 70.66517 190.95506 69.60813 190.95506 C
68.28236 190.95506 66.84009 191.19288 65.20054 191.67902 C
64.55537 191.87206 L
62.86054 192.38287 61.26009 192.86504 59.56243 192.86504 C
58.97537 192.86504 58.42035 192.80891 57.86447 192.69213 C
53.86649 191.84712 52.49055 187.51493 52.89959 183.59688 C
53.34406 179.34094 55.95817 175.03313 60.09335 175.03313 C
72.49408 175.03313 L
72.49408 106.84602 L
72.49408 106.51493 72.22535 106.24507 71.89455 106.24507 C
16.40750 106.24507 L
16.07613 106.24507 15.80655 106.51493 15.80655 106.84602 C
15.80655 175.03313 L
28.96441 175.03313 L
33.18633 175.03313 35.82539 179.25789 36.25115 183.43191 C
36.64460 187.29099 35.17852 191.56989 31.01839 192.42709 C
30.42652 192.54898 29.85052 192.60794 29.25638 192.60794 C
27.67550 192.60794 26.25732 192.18898 24.61521 191.70312 C
24.21836 191.58605 L
23.74129 191.44602 23.26054 191.29096 22.77723 191.13591 C
21.16120 190.61490 19.49017 190.07603 17.84013 190.07603 C
17.58756 190.07603 17.33556 190.08992 17.09348 190.11487 C
13.96517 190.44198 11.69915 191.74989 10.35808 194.00202 C
7.99852 197.96513 9.02806 203.89890 10.78044 208.13102 C
10.86831 208.34391 11.00353 208.44510 11.20309 208.44510 C
11.49052 208.44510 11.87036 208.23506 12.10734 207.94507 C
12.74457 207.16696 13.68510 206.71994 14.69055 206.71994 C
16.53052 206.71994 18.02608 208.21691 18.02608 210.05603 C
18.02608 211.89600 16.53052 213.39298 14.69055 213.39298 C
14.40539 213.39298 14.27811 213.53102 14.22283 213.64809 C
14.14006 213.81902 14.17238 214.00611 14.24353 214.09512 C
20.26630 221.61798 31.62019 226.47912 43.16910 226.47912 C
@c
F

@rax %Note: Object
75.08636 47.94576 248.77474 79.12772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
248.24494 79.12772 m
225.44589 78.62031 L
161.50507 78.27647 L
96.50381 78.63761 L
75.61474 79.12772 L
75.12973 65.91458 L
75.07191 64.32973 75.07191 62.74375 75.12973 61.15861 C
75.61474 47.94576 L
96.50381 48.43672 L
161.93112 48.79644 L
226.17014 48.73124 L
248.24494 47.94576 L
248.73789 61.49027 L
248.78693 62.85430 248.78693 64.21946 248.73789 65.58236 C
248.24494 79.12772 L
@c
248.00400 78.87146 m
248.48787 65.57329 L
248.53691 64.22230 248.53691 62.85146 248.48787 61.49962 C
248.00400 48.20428 L
226.17099 48.98126 L
161.92913 49.04646 L
96.49757 48.68561 L
75.85540 48.20173 L
75.37975 61.16769 L
75.32164 62.73950 75.32164 64.33370 75.37975 65.90551 C
75.85540 78.87146 L
96.50268 78.38759 L
161.50507 78.02674 L
225.45298 78.37030 L
248.00400 78.87146 L
@c
F

@rax %Note: Object
0.63865 252.69109 323.22189 283.30413 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
153.49493 264.10904 m
151.34797 264.10904 149.60693 265.85008 149.60693 267.99789 C
149.60693 270.14513 151.34797 271.88589 153.49493 271.88589 C
170.36589 271.88589 L
172.51398 271.88589 174.25389 270.14513 174.25389 267.99789 C
174.25389 265.85008 172.51398 264.10904 170.36589 264.10904 C
153.49493 264.10904 L
@c
323.22189 283.30413 m
286.78706 282.76498 L
161.64595 282.45402 L
32.50091 282.79587 L
0.63865 283.30413 L
0.63865 252.69109 L
34.02850 253.15087 L
161.39395 253.25688 L
289.35014 253.15200 L
323.22189 252.69109 L
323.22189 283.30413 L
@c
153.49493 263.85902 m
170.36589 263.85902 L
172.64806 263.85902 174.50391 265.71487 174.50391 267.99789 C
174.50391 270.27893 172.64806 272.13591 170.36589 272.13591 C
153.49493 272.13591 L
151.21304 272.13591 149.35691 270.27893 149.35691 267.99789 C
149.35691 265.71487 151.21304 263.85902 153.49493 263.85902 C
@c
322.97187 283.05213 m
322.97187 252.94394 L
289.35014 253.40202 L
161.39310 253.50690 L
34.02539 253.40088 L
0.88866 252.94394 L
0.88866 283.05014 L
32.49950 282.54614 L
161.64709 282.20400 L
286.78989 282.51496 L
322.97187 283.05213 L
@c
F

@rax %Note: Object
97.75814 131.28803 226.10211 246.27713 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
161.92998 149.83795 m
160.87890 149.83795 160.02709 150.69090 160.02709 151.74000 C
160.02709 152.79109 160.87890 153.64290 161.92998 153.64290 C
162.98107 153.64290 163.83288 152.79109 163.83288 151.74000 C
163.83288 150.69090 162.98107 149.83795 161.92998 149.83795 C
@c
162.18000 246.27713 m
161.92998 246.27288 L
161.67997 246.27713 L
144.49011 246.01890 L
135.96888 245.70992 L
135.92494 245.70992 135.87987 245.70992 135.83509 245.70992 C
132.31899 245.70992 126.85691 244.98198 123.84312 244.11402 C
109.48592 239.97713 97.75814 225.19389 97.75814 206.93197 C
97.75814 131.57887 L
131.31298 131.28803 L
131.54910 132.99789 L
132.63194 135.02296 134.74091 135.72000 137.03613 135.72000 C
186.82413 135.72000 L
189.11906 135.72000 191.22803 135.02296 192.31087 132.99789 C
192.54699 131.28803 L
226.10211 131.57887 L
226.10211 206.93197 L
224.97109 226.19509 214.37405 239.97713 200.01713 244.11402 C
197.00306 244.98198 191.54098 245.70992 188.02488 245.70992 C
187.98009 245.70992 187.93502 245.70992 187.89109 245.70992 C
179.37014 246.01890 L
162.18000 246.27713 L
@c
161.92998 149.58794 m
163.11713 149.58794 164.08290 150.55313 164.08290 151.74000 C
164.08290 152.92687 163.11713 153.89291 161.92998 153.89291 C
160.74312 153.89291 159.77707 152.92687 159.77707 151.74000 C
159.77707 150.55313 160.74312 149.58794 161.92998 149.58794 C
@c
161.67600 246.02712 m
161.93395 246.02287 L
162.18000 246.02712 L
179.36107 245.76888 L
187.89194 245.45991 L
188.02488 245.45991 L
191.50299 245.45991 196.96309 244.73395 199.94797 243.87392 C
214.84006 239.58198 224.76614 225.42094 225.85209 206.93197 C
225.85209 131.82491 L
192.76413 131.54003 L
192.55890 133.03191 L
192.55294 133.07613 L
192.53197 133.11609 L
191.53304 134.98299 189.55899 135.97002 186.82413 135.97002 C
137.03613 135.97002 L
134.30098 135.97002 132.32693 134.98299 131.32800 133.11609 C
131.30702 133.07613 L
131.30107 133.03191 L
131.09613 131.54003 L
98.00816 131.82491 L
98.00816 206.93197 L
98.00816 224.01213 108.90312 239.54797 123.91200 243.87392 C
126.89688 244.73395 132.35698 245.45991 135.83509 245.45991 C
135.97795 245.45991 L
144.49294 245.76888 L
161.67600 246.02712 L
@c
F

@rax %Note: Object
97.75757 289.47090 226.10268 404.47701 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
161.92998 345.50391 m
157.15389 345.50391 153.26787 349.38907 153.26787 354.16602 C
153.26787 358.94296 157.15389 362.82699 161.92998 362.82699 C
166.70608 362.82699 170.59209 358.94296 170.59209 354.16602 C
170.59209 349.38907 166.70608 345.50391 161.92998 345.50391 C
@c
226.09502 404.47701 m
195.68693 404.17994 L
195.63109 404.17994 194.68091 404.17909 194.04709 404.17909 C
193.73102 404.17710 193.47789 403.92113 193.47789 403.60706 C
193.47789 402.64894 L
193.47591 402.60387 193.46513 402.55994 193.46513 402.51402 C
193.46513 401.03206 L
193.46513 399.08806 191.61014 396.94507 189.67096 396.94507 C
134.18901 396.94507 L
132.25011 396.94507 130.39512 399.08806 130.39512 401.03206 C
130.39512 402.51402 L
130.39512 402.55994 130.38491 402.60387 130.38208 402.64894 C
130.38208 403.60706 L
130.38208 403.92113 130.12894 404.17710 129.81402 404.17909 C
129.17906 404.17909 128.23002 404.17994 128.17304 404.17994 C
97.76523 404.47701 L
97.76523 325.42101 L
97.64787 320.95389 98.91524 316.14094 101.25014 311.56696 C
105.95792 302.34501 110.32299 298.54403 117.03912 294.53102 C
121.71912 291.73606 126.91106 290.03811 132.21694 290.03811 C
143.17994 289.64494 L
161.01099 289.47090 L
161.92998 289.48394 L
162.84898 289.47090 L
180.68003 289.64494 L
191.64302 290.03811 L
196.48488 290.03811 201.20513 291.50306 205.58098 293.82406 C
214.50104 298.55509 218.97014 304.38595 222.59509 311.53890 C
224.92205 316.12904 226.21294 320.94312 226.09502 325.42101 C
226.09502 404.47701 L
@c
161.92998 345.25389 m
166.84413 345.25389 170.84211 349.25187 170.84211 354.16602 C
170.84211 359.07987 166.84413 363.07701 161.92998 363.07701 C
157.01613 363.07701 153.01814 359.07987 153.01814 354.16602 C
153.01814 349.25187 157.01613 345.25389 161.92998 345.25389 C
@c
98.01524 404.22501 m
128.17304 403.92992 L
129.81288 403.92794 L
129.98891 403.92794 130.13206 403.78394 130.13206 403.60706 C
130.13206 402.63392 L
130.13405 402.60898 130.13688 402.58403 130.14510 402.51402 C
130.14510 401.03206 L
130.14510 398.88397 132.18605 396.69506 134.18901 396.69506 C
189.67096 396.69506 L
191.67392 396.69506 193.71487 398.88397 193.71487 401.03206 C
193.71997 402.55710 L
193.72309 402.58205 193.72592 402.60898 193.72791 402.64894 C
193.72791 403.60706 L
193.72791 403.78394 193.87106 403.92794 194.04709 403.92794 C
195.69005 403.92992 L
225.84501 404.22501 L
225.84501 325.41591 L
225.95811 321.11603 224.75707 316.35694 222.37200 311.65200 C
219.26296 305.51499 215.06088 299.13591 205.46391 294.04488 C
200.76605 291.55096 196.11609 290.28813 191.63395 290.28813 C
180.67691 289.89496 L
162.85294 289.72091 L
161.92687 289.73395 L
161.01298 289.72091 L
143.18901 289.89496 L
132.21694 290.28813 L
127.25405 290.28813 122.04992 291.82904 117.16809 294.74589 C
110.44091 298.76400 106.16598 302.48702 101.47209 311.68205 C
99.09723 316.33597 97.90129 321.08400 98.01524 325.42101 C
98.01524 404.22501 L
@c
F

@rax %Note: Object
98.13005 0.46602 225.73077 41.53266 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
175.74208 41.53266 m
148.11902 41.53266 L
134.35200 40.68283 L
127.08312 40.24687 120.14306 38.08800 114.04687 34.54101 C
104.99301 29.27197 99.92183 18.29169 98.18079 3.61871 C
98.09291 2.87065 98.14564 2.38167 98.14677 1.59874 C
108.48189 0.91757 L
119.66910 0.46602 L
204.19200 0.46602 L
215.37893 0.91757 L
225.71405 1.59874 L
225.71490 2.38167 225.76791 2.87065 225.68003 3.61871 C
223.93899 18.29169 218.86809 29.27197 209.81395 34.54101 C
203.71805 38.08800 196.77798 40.24687 189.50910 40.68283 C
175.74208 41.53266 L
@c
175.73499 41.28293 m
189.49294 40.43282 L
196.56595 40.00904 203.54910 37.89581 209.68809 34.32501 C
218.30995 29.30769 223.60706 18.96803 225.43087 3.58980 C
225.49209 3.07304 225.48387 2.67704 225.47310 2.21754 C
225.46998 2.09452 225.46687 1.96866 225.46602 1.83402 C
215.36901 1.16759 L
204.19200 0.71603 L
119.67902 0.71603 L
108.49805 1.16759 L
98.39452 1.83402 L
98.39367 1.96866 98.39055 2.09452 98.38743 2.21754 C
98.37666 2.67704 98.36787 3.07304 98.42882 3.58980 C
100.25405 18.96803 105.55087 29.30769 114.17301 34.32501 C
120.31087 37.89581 127.29487 40.00904 134.36787 40.43282 C
148.11902 41.28293 L
175.73499 41.28293 L
@c
F

@rax %Note: Object
97.76608 85.54025 226.09786 124.87606 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
192.57109 124.87606 m
192.56088 124.58211 192.55209 124.32104 192.55209 124.09512 C
192.55209 121.95694 191.46189 121.07594 189.32598 121.07594 C
134.53200 121.07594 L
132.39609 121.07594 131.30391 121.95694 131.30391 124.09512 C
131.30391 124.32104 131.30192 124.58211 131.29313 124.87606 C
125.97109 124.77288 L
122.56101 124.69805 119.16113 124.39502 115.79301 123.85899 C
97.78195 121.47506 L
97.78195 120.95405 97.75191 120.19096 97.77458 119.25694 C
97.78394 118.87087 97.76183 118.43405 97.81880 118.00913 C
98.22898 114.92107 98.93594 111.02287 99.35660 109.75408 C
104.69792 93.65669 118.82409 86.66957 134.20205 86.10633 C
140.73789 85.62472 L
161.92800 85.54025 L
183.11896 85.62472 L
189.65594 86.10633 L
205.03389 86.66957 219.16205 93.65669 224.50309 109.75408 C
224.88491 110.90494 225.50202 114.21099 225.91899 117.11906 C
226.17893 118.93408 226.07887 120.59405 226.07887 121.47506 C
208.06498 123.85899 L
204.69713 124.39502 201.29613 124.69805 197.88605 124.77288 C
192.57109 124.87606 L
@c
192.81288 124.62009 m
197.88094 124.52287 L
201.26806 124.45002 204.68211 124.14302 208.03209 123.61096 C
225.83112 121.25509 L
225.83197 121.14000 225.83509 121.01613 225.83707 120.88403 C
225.85408 119.97496 225.87987 118.60413 225.67209 117.15506 C
225.22592 114.05197 224.62101 110.90494 224.26498 109.83203 C
219.52488 95.54457 206.90589 86.98762 189.63694 86.35550 C
183.11811 85.87474 L
161.92913 85.79027 L
140.75688 85.87332 L
134.21112 86.35663 L
116.95294 86.98762 104.33594 95.54457 99.59386 109.83203 C
99.19757 111.02513 98.49883 114.78586 98.06683 118.04088 C
98.02885 118.32888 98.02772 118.62595 98.02772 118.91395 C
98.02772 119.03414 98.02772 119.15008 98.02460 119.26403 C
98.00901 119.89502 98.01751 120.44806 98.02460 120.89991 C
98.02687 121.02690 98.02885 121.14510 98.02998 121.25509 C
115.83213 123.61294 L
119.17587 124.14302 122.58992 124.45002 125.97591 124.52287 C
131.04992 124.62009 L
131.05304 124.42904 131.05389 124.25414 131.05389 124.09512 C
131.05389 121.89600 132.19200 120.82706 134.53200 120.82706 C
189.32598 120.82706 L
191.66513 120.82706 192.80211 121.89600 192.80211 124.09512 C
192.80211 124.25414 192.80693 124.42904 192.81288 124.62009 C
@c
F

@rax %Note: Object
243.15704 105.99506 312.99789 226.72913 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
277.41317 181.96809 m
278.26299 181.96809 278.95408 182.65805 278.95408 183.50787 C
278.95408 184.35798 278.26299 185.04907 277.41317 185.04907 C
276.56306 185.04907 275.87083 184.35798 275.87083 183.50787 C
275.87083 182.65805 276.56306 181.96809 277.41317 181.96809 C
@c
277.38737 207.46998 m
278.74120 207.46998 279.84189 208.57209 279.84189 209.92706 C
279.84189 216.22309 L
279.84189 217.57691 278.74120 218.67902 277.38737 218.67902 C
276.03184 218.67902 274.93115 217.57691 274.93115 216.22309 C
274.93115 209.92706 L
274.93115 208.57209 276.03184 207.46998 277.38737 207.46998 C
@c
278.56035 226.72913 m
289.63814 226.72913 301.28995 222.23395 307.68094 214.25102 C
307.95335 213.91087 307.79518 213.14296 307.03890 213.14296 C
305.33414 213.14296 303.95339 211.76107 303.95339 210.05603 C
303.95339 208.35213 305.33414 206.96995 307.03890 206.96995 C
308.00211 206.96995 308.86299 207.41187 309.42907 208.10409 C
309.68617 208.41902 310.13291 208.69512 310.52636 208.69512 C
310.79594 208.69512 311.04000 208.56387 311.18117 208.22712 C
314.23096 200.85506 314.28113 190.87200 304.66233 189.86598 C
304.40409 189.83906 304.14586 189.82602 303.88932 189.82602 C
301.70806 189.82602 299.54891 190.72687 297.43994 191.34595 C
295.66687 191.86696 294.14324 192.35792 292.47307 192.35792 C
291.92287 192.35792 291.35792 192.30491 290.76236 192.18189 C
282.66293 190.51398 284.87509 175.28287 292.76504 175.28287 C
306.17320 175.28287 L
306.17320 106.84602 L
306.17320 106.37603 305.79194 105.99506 305.32195 105.99506 C
249.83490 105.99506 L
249.36605 105.99506 248.98535 106.37603 248.98535 106.84602 C
248.98535 175.28287 L
261.63609 175.28287 L
269.37836 175.28287 271.57011 190.80794 263.81310 192.44693 C
263.25524 192.56513 262.70702 192.61502 262.16702 192.61502 C
260.29191 192.61502 258.49786 192.00189 256.60091 191.44006 C
255.14787 191.00806 253.62397 190.70504 252.12132 190.70504 C
251.09433 190.70504 250.07811 190.84706 249.10016 191.18608 C
245.25524 192.51213 243.54709 195.04913 243.22394 199.10494 C
241.97896 214.72498 258.41735 223.79811 271.96894 226.17099 C
274.10995 226.54602 276.32438 226.72913 278.56035 226.72913 C
@c
277.41317 181.71808 m
276.42501 181.71808 275.62139 182.52113 275.62139 183.50787 C
275.62139 184.49490 276.42501 185.29909 277.41317 185.29909 C
278.40019 185.29909 279.20409 184.49490 279.20409 183.50787 C
279.20409 182.52113 278.40019 181.71808 277.41317 181.71808 C
@c
277.38737 207.21997 m
275.89436 207.21997 274.68113 208.43405 274.68113 209.92706 C
274.68113 216.22309 L
274.68113 217.71496 275.89436 218.92904 277.38737 218.92904 C
278.87811 218.92904 280.09191 217.71496 280.09191 216.22309 C
280.09191 209.92706 L
280.09191 208.43405 278.87811 207.21997 277.38737 207.21997 C
@c
278.56035 226.47912 m
276.31701 226.47912 274.11392 226.29203 272.01231 225.92409 C
257.44195 223.37291 242.29587 213.89896 243.47310 199.12507 C
243.79824 195.04800 245.55883 192.67200 249.18208 191.41994 C
250.07528 191.11294 251.06428 190.95506 252.12132 190.95506 C
253.44709 190.95506 254.88935 191.19288 256.52891 191.67902 C
257.17408 191.87206 L
258.86891 192.38287 260.46935 192.86504 262.16702 192.86504 C
262.75408 192.86504 263.30910 192.80891 263.86498 192.69213 C
267.86296 191.84712 269.23890 187.51493 268.82986 183.59688 C
268.38539 179.34094 265.77128 175.03313 261.63609 175.03313 C
249.23537 175.03313 L
249.23537 106.84602 L
249.23537 106.51493 249.50409 106.24507 249.83490 106.24507 C
305.32195 106.24507 L
305.65332 106.24507 305.92290 106.51493 305.92290 106.84602 C
305.92290 175.03313 L
292.76504 175.03313 L
288.54312 175.03313 285.90406 179.25789 285.47830 183.43191 C
285.08485 187.29099 286.55093 191.56989 290.71106 192.42709 C
291.30293 192.54898 291.87893 192.60794 292.47307 192.60794 C
294.05395 192.60794 295.47213 192.18898 297.11424 191.70312 C
297.51109 191.58605 L
297.98816 191.44602 298.46891 191.29096 298.95222 191.13591 C
300.56825 190.61490 302.23928 190.07603 303.88932 190.07603 C
304.14189 190.07603 304.39389 190.08992 304.63597 190.11487 C
307.76428 190.44198 310.03030 191.74989 311.37137 194.00202 C
313.73093 197.96513 312.70139 203.89890 310.94901 208.13102 C
310.86113 208.34391 310.72592 208.44510 310.52636 208.44510 C
310.23893 208.44510 309.85909 208.23506 309.62211 207.94507 C
308.98488 207.16696 308.04435 206.71994 307.03890 206.71994 C
305.19893 206.71994 303.70337 208.21691 303.70337 210.05603 C
303.70337 211.89600 305.19893 213.39298 307.03890 213.39298 C
307.32406 213.39298 307.45134 213.53102 307.50661 213.64809 C
307.58939 213.81902 307.55707 214.00611 307.48592 214.09512 C
301.46315 221.61798 290.10926 226.47912 278.56035 226.47912 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
