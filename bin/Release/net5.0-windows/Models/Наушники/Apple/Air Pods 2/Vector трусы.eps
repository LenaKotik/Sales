%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 76 269 399 642 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: Air Pods 2g Vector трусы.eps
%%CreationDate: Sat May 18 12:30:40 2019
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
202.99720 531.25965 268.22920 641.03868 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
264.99628 641.03868 m
206.23039 641.03868 L
204.44542 641.03868 202.99720 639.59074 202.99720 637.80576 C
202.99720 531.25965 L
204.38617 531.25965 L
205.75219 533.31874 L
206.83814 534.67370 208.76315 535.17855 210.49824 535.17855 C
260.72731 535.17855 L
262.46324 535.17855 264.38939 534.67370 265.47420 533.31874 C
266.84135 531.25965 L
268.22920 531.25965 L
268.22920 637.80576 L
268.22920 639.59074 266.78239 641.03868 264.99628 641.03868 C
@c
264.99628 640.78866 m
266.64123 640.78866 267.97918 639.45071 267.97918 637.80576 C
267.97918 531.50967 L
266.97515 531.50967 L
265.66923 533.47578 L
264.67427 534.71679 262.87342 535.42857 260.72731 535.42857 C
210.49824 535.42857 L
208.35326 535.42857 206.55241 534.71679 205.54441 533.45679 C
204.25124 531.50967 L
203.24721 531.50967 L
203.24721 637.80576 L
203.24721 639.45071 204.58517 640.78866 206.23039 640.78866 C
264.99628 640.78866 L
@c
F

@rax %Note: Object
154.90517 269.07477 318.91096 528.50778 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
236.75811 310.53487 m
232.01121 310.53487 228.14901 314.39679 228.14901 319.14369 C
228.14901 323.89087 232.01121 327.75364 236.75811 327.75364 C
241.50501 327.75364 245.36721 323.89087 245.36721 319.14369 C
245.36721 314.39679 241.50501 310.53487 236.75811 310.53487 C
@c
228.32220 394.91263 m
226.17496 394.91263 224.43420 396.65367 224.43420 398.80176 C
224.43420 400.94872 226.17496 402.68976 228.32220 402.68976 C
245.19402 402.68976 L
247.34098 402.68976 249.08202 400.94872 249.08202 398.80176 C
249.08202 396.65367 247.34098 394.91263 245.19402 394.91263 C
228.32220 394.91263 L
@c
236.75811 506.29890 m
235.70702 506.29890 234.85521 507.15071 234.85521 508.20180 C
234.85521 509.25288 235.70702 510.10469 236.75811 510.10469 C
237.80920 510.10469 238.66101 509.25288 238.66101 508.20180 C
238.66101 507.15071 237.80920 506.29890 236.75811 506.29890 C
@c
318.62806 528.50778 m
267.44797 528.50778 L
266.76510 526.94872 L
265.68312 524.92479 263.57301 523.94485 261.27921 523.94485 C
236.64302 523.94485 L
211.14113 523.94485 L
208.75209 523.94485 206.55694 525.25984 205.43017 527.36683 C
204.97096 528.22488 L
155.18920 528.22488 L
155.03216 528.22488 154.90517 528.09789 154.90517 527.94085 C
156.03902 446.87480 L
156.03902 446.71890 156.16602 446.59162 156.32220 446.59162 C
200.50101 446.57688 L
202.02009 446.57688 203.25118 445.34580 203.25118 443.82671 C
203.25118 353.35984 L
203.25118 351.95471 202.11222 350.81575 200.70595 350.81575 C
159.70904 350.85572 L
159.55200 350.85572 159.42501 350.72872 159.42501 350.57282 C
159.42501 341.99773 L
159.25209 269.35880 L
159.25209 269.20261 159.37909 269.07477 159.53499 269.07477 C
163.40400 269.07477 L
167.63499 269.07477 L
203.65512 269.35767 L
204.89613 269.35767 205.90214 270.36482 205.90214 271.60583 C
205.90214 272.82671 L
205.90214 274.91471 207.87902 276.60671 209.96617 276.60671 C
263.73515 276.60671 L
265.82315 276.60671 267.80003 274.91471 267.80003 272.82671 C
267.80003 271.60583 L
267.80003 270.36482 268.80520 269.35767 270.04706 269.35767 C
304.98009 269.07477 L
309.28706 269.07477 L
312.86494 269.07477 L
313.02198 269.07477 313.14898 269.20261 313.14898 269.35880 C
313.26406 350.53172 L
313.26406 350.68876 313.13707 350.81575 312.98003 350.81575 C
273.21222 350.81575 L
271.80709 350.81575 270.66813 351.95471 270.66813 353.35984 C
270.66813 444.11074 L
270.66813 445.62869 271.89921 446.85978 273.41717 446.85978 C
317.41710 446.87480 L
317.57301 446.87480 317.70000 447.00180 317.70000 447.15883 C
317.70000 449.97987 L
317.70113 450.00482 317.70822 450.02778 317.70907 450.05272 C
318.91096 528.22488 L
318.91096 528.38079 318.78397 528.50778 318.62806 528.50778 C
@c
236.75811 310.28485 m
241.64306 310.28485 245.61694 314.25987 245.61694 319.14369 C
245.61694 324.02863 241.64306 328.00365 236.75811 328.00365 C
231.87317 328.00365 227.89899 324.02863 227.89899 319.14369 C
227.89899 314.25987 231.87317 310.28485 236.75811 310.28485 C
@c
228.32220 394.66290 m
245.19402 394.66290 L
247.47506 394.66290 249.33203 396.51874 249.33203 398.80176 C
249.33203 401.08280 247.47506 402.93978 245.19402 402.93978 C
228.32220 402.93978 L
226.04003 402.93978 224.18419 401.08280 224.18419 398.80176 C
224.18419 396.51874 226.04003 394.66290 228.32220 394.66290 C
@c
236.75811 506.04888 m
237.94498 506.04888 238.91102 507.01465 238.91102 508.20180 C
238.91102 509.38866 237.94498 510.35471 236.75811 510.35471 C
235.57096 510.35471 234.60520 509.38866 234.60520 508.20180 C
234.60520 507.01465 235.57096 506.04888 236.75811 506.04888 C
@c
318.62806 528.25776 m
318.66094 528.22885 L
317.45820 450.05471 L
317.44998 449.99887 L
317.44998 449.97987 L
317.41710 447.12482 L
273.41717 447.10980 L
271.76315 447.10980 270.41811 445.76362 270.41811 444.11074 C
270.41811 353.35984 L
270.41811 351.81865 271.67102 350.56573 273.21222 350.56573 C
313.01405 350.53285 L
312.86494 269.32479 L
309.28706 269.32479 L
304.98208 269.32479 L
270.04706 269.60769 L
268.94608 269.60769 268.05005 270.50485 268.05005 271.60583 C
268.05005 272.82671 L
268.05005 274.97367 266.03320 276.85672 263.73515 276.85672 C
209.96617 276.85672 L
207.66813 276.85672 205.65213 274.97367 205.65213 272.82671 C
205.65213 271.60583 L
205.65213 270.50485 204.75609 269.60769 203.65313 269.60769 C
167.63499 269.32479 L
163.40400 269.32479 L
159.50211 269.35767 L
159.67502 341.99773 L
159.70904 350.60570 L
200.70595 350.56573 L
202.24715 350.56573 203.50120 351.81865 203.50120 353.35984 C
203.50120 443.82671 L
203.50120 445.48072 202.15502 446.82690 200.50101 446.82690 C
156.28904 446.87764 L
155.18920 527.97487 L
204.82101 527.97487 L
205.21020 527.24863 L
206.38318 525.05688 208.65515 523.69483 211.14113 523.69483 C
236.64302 523.69483 L
261.27921 523.69483 L
263.84003 523.69483 265.92009 524.83776 266.99414 526.84866 C
267.61096 528.25776 L
318.62806 528.25776 L
@c
F

@rax %Note: Object
331.13594 440.24485 398.24135 480.92202 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
392.72683 457.64986 m
391.23383 457.64986 390.02372 458.85997 390.02372 460.35298 C
390.02372 461.84598 391.23383 463.05609 392.72683 463.05609 C
394.21984 463.05609 395.42967 461.84598 395.42967 460.35298 C
395.42967 458.85997 394.21984 457.64986 392.72683 457.64986 C
@c
363.11783 455.68290 m
361.59364 455.68290 360.35376 456.92192 360.35376 458.44583 C
360.35376 465.47887 L
360.35376 467.00192 361.59364 468.24293 363.11783 468.24293 C
364.64173 468.24293 365.88076 467.00192 365.88076 465.47887 C
365.88076 458.44583 L
365.88076 456.92192 364.64173 455.68290 363.11783 455.68290 C
@c
366.14580 480.92202 m
360.75487 480.92202 355.36280 479.96306 350.66183 478.32888 C
345.58186 476.56205 340.74085 472.99606 337.37868 468.75288 C
334.36687 464.95191 332.37666 460.92104 331.63285 456.13106 C
331.25386 453.69609 331.04891 451.78696 331.17165 449.32195 C
331.25981 447.55002 331.34173 445.32595 332.27972 443.75301 C
333.11367 442.35383 335.06079 440.70803 338.04369 440.70803 C
339.20674 440.70803 340.52683 440.95805 341.99972 441.57005 C
346.53175 443.45282 351.99184 443.98403 356.84476 444.56287 C
359.67685 444.89991 362.43184 445.08302 365.15991 445.08302 C
369.59187 445.08302 373.95383 444.60198 378.46772 443.52397 C
381.09090 442.89808 383.43969 441.86485 385.97584 441.04309 C
387.25767 440.62696 388.67471 440.24485 390.05490 440.24485 C
391.08387 440.24485 392.09187 440.45802 393.00775 441.02693 C
398.10784 444.19691 398.84173 451.65203 397.87682 456.85389 C
397.21266 460.43008 396.42576 463.52608 394.57077 466.63002 C
392.37279 470.30882 388.97972 473.11398 385.44066 475.56709 C
379.99871 479.33688 373.07367 480.92202 366.14580 480.92202 C
@c
392.72683 457.39984 m
394.35477 457.39984 395.67969 458.72504 395.67969 460.35298 C
395.67969 461.98091 394.35477 463.30583 392.72683 463.30583 C
391.09890 463.30583 389.77370 461.98091 389.77370 460.35298 C
389.77370 458.72504 391.09890 457.39984 392.72683 457.39984 C
@c
363.11783 455.43288 m
364.77865 455.43288 366.13077 456.78387 366.13077 458.44583 C
366.13077 465.47887 L
366.13077 467.14082 364.77865 468.49294 363.11783 468.49294 C
361.45587 468.49294 360.10375 467.14082 360.10375 465.47887 C
360.10375 458.44583 L
360.10375 456.78387 361.45587 455.43288 363.11783 455.43288 C
@c
366.14580 480.67200 m
373.66072 480.67200 380.28387 478.83600 385.29780 475.36101 C
388.28976 473.28803 392.02186 470.40803 394.35591 466.50189 C
396.13890 463.51899 396.93090 460.58088 397.63077 456.80797 C
398.67477 451.17893 397.60980 444.18189 392.87565 441.23896 C
392.07090 440.73808 391.14765 440.49487 390.05490 440.49487 C
388.66280 440.49487 387.24973 440.89285 386.05266 441.28091 C
385.15691 441.57090 384.26967 441.89405 383.41191 442.20501 C
381.84888 442.77307 380.23172 443.35899 378.52583 443.76690 C
374.11370 444.81997 369.74069 445.33304 365.15991 445.33304 C
362.48967 445.33304 359.75991 445.16183 356.81471 444.81090 C
355.71373 444.68107 L
351.22082 444.15383 346.12781 443.55600 341.90391 441.80107 C
340.55773 441.24208 339.25975 440.95805 338.04369 440.95805 C
335.23767 440.95805 333.33676 442.46806 332.49487 443.88085 C
331.61783 445.35090 331.51380 447.46583 331.42989 449.16605 C
331.42167 449.33499 L
331.30176 451.74898 331.49877 453.64082 331.87975 456.09307 C
332.58076 460.60583 334.39068 464.58000 337.57483 468.59783 C
340.99172 472.90989 345.79077 476.36986 350.74375 478.09191 C
355.59666 479.77994 360.92268 480.67200 366.14580 480.67200 C
@c
F

@rax %Note: Object
337.06176 356.73562 392.88189 440.83474 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
364.97197 432.76365 m
364.15389 432.76365 363.48775 433.42980 363.48775 434.24787 C
363.48775 435.06680 364.15389 435.73266 364.97197 435.73266 C
365.79090 435.73266 366.45676 435.06680 366.45676 434.24787 C
366.45676 433.42980 365.79090 432.76365 364.97197 432.76365 C
@c
364.97197 440.83474 m
359.71682 440.83474 355.45578 435.24567 355.45578 432.05386 C
355.45578 431.02488 355.90082 429.20674 356.67780 427.21370 C
357.28384 425.65890 357.60501 424.00375 357.60501 422.33471 C
357.60501 422.07987 357.39780 421.87266 357.14296 421.87266 C
338.67383 421.87266 L
337.78375 421.87266 337.06176 421.15068 337.06176 420.26173 C
337.06176 358.12375 L
337.06176 357.35669 337.68397 356.73562 338.45074 356.73562 C
391.49291 356.73562 L
392.25997 356.73562 392.88189 357.35669 392.88189 358.12375 C
392.88189 420.26173 L
392.88189 421.15068 392.15991 421.87266 391.26983 421.87266 C
372.80183 421.87266 L
372.55096 421.87266 372.33893 422.07562 372.33893 422.32677 C
372.33780 423.99865 372.65981 425.65663 373.26699 427.21370 C
374.04283 429.20674 374.48787 431.02488 374.48787 432.05386 C
374.48787 435.24567 370.22683 440.83474 364.97197 440.83474 C
@c
364.97197 432.51364 m
365.92894 432.51364 366.70677 433.29175 366.70677 434.24787 C
366.70677 435.20485 365.92894 435.98268 364.97197 435.98268 C
364.01499 435.98268 363.23802 435.20485 363.23802 434.24787 C
363.23802 433.29175 364.01499 432.51364 364.97197 432.51364 C
@c
364.97197 440.58472 m
369.90680 440.58472 374.23786 435.26778 374.23786 432.05386 C
374.23786 431.02970 373.77694 429.20986 373.03398 427.30469 C
372.40583 425.69263 372.08778 424.01764 372.08891 422.32677 C
372.08891 421.93871 372.40894 421.62265 372.80183 421.62265 C
391.26983 421.62265 L
392.02101 421.62265 392.63187 421.01263 392.63187 420.26173 C
392.63187 358.12375 L
392.63187 357.49587 392.12079 356.98564 391.49291 356.98564 C
338.45074 356.98564 L
337.82287 356.98564 337.31178 357.49587 337.31178 358.12375 C
337.31178 420.26173 L
337.31178 421.01263 337.92293 421.62265 338.67383 421.62265 C
357.14296 421.62265 L
357.53499 421.62265 357.85474 421.94183 357.85474 422.33471 C
357.85474 424.02387 357.53698 425.69575 356.90995 427.30469 C
356.16784 429.20986 355.70580 431.02970 355.70580 432.05386 C
355.70580 435.26778 360.03685 440.58472 364.97197 440.58472 C
@c
F

@rax %Note: Object
76.56888 440.24485 143.67345 480.92202 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
82.08283 457.64986 m
80.58983 457.64986 79.37972 458.85997 79.37972 460.35298 C
79.37972 461.84598 80.58983 463.05609 82.08283 463.05609 C
83.57584 463.05609 84.78567 461.84598 84.78567 460.35298 C
84.78567 458.85997 83.57584 457.64986 82.08283 457.64986 C
@c
111.69184 455.68290 m
110.16765 455.68290 108.92891 456.92192 108.92891 458.44583 C
108.92891 465.47887 L
108.92891 467.00192 110.16765 468.24293 111.69184 468.24293 C
113.21575 468.24293 114.45591 467.00192 114.45591 465.47887 C
114.45591 458.44583 L
114.45591 456.92192 113.21575 455.68290 111.69184 455.68290 C
@c
108.66472 480.92202 m
101.73487 480.92202 94.81181 479.33802 89.36986 475.56709 C
85.82967 473.11398 82.43688 470.30882 80.23890 466.63002 C
78.38476 463.52608 77.59672 460.43008 76.93285 456.85389 C
75.96879 451.65203 76.70268 444.19691 81.80164 441.02693 C
82.71780 440.45802 83.72580 440.24485 84.75477 440.24485 C
86.13468 440.24485 87.55172 440.62696 88.83468 441.04309 C
91.36970 441.86485 93.71877 442.89808 96.34167 443.52397 C
100.85584 444.60198 105.21780 445.08302 109.65090 445.08302 C
112.37783 445.08302 115.13282 444.89991 117.96491 444.56287 C
122.81783 443.98403 128.27877 443.45395 132.80967 441.57005 C
134.28283 440.95890 135.60265 440.70888 136.76570 440.70888 C
139.74973 440.70888 141.69572 442.35383 142.52967 443.75301 C
143.46879 445.32595 143.54986 447.55002 143.63773 449.32195 C
143.76076 451.78696 143.55581 453.69609 143.17682 456.13106 C
142.43272 460.92104 140.44280 464.95191 137.43184 468.75288 C
134.06882 472.99606 129.22781 476.56205 124.14784 478.32888 C
119.44772 479.96306 114.05367 480.92202 108.66472 480.92202 C
@c
82.08283 457.39984 m
83.71077 457.39984 85.03569 458.72504 85.03569 460.35298 C
85.03569 461.98091 83.71077 463.30583 82.08283 463.30583 C
80.45490 463.30583 79.12970 461.98091 79.12970 460.35298 C
79.12970 458.72504 80.45490 457.39984 82.08283 457.39984 C
@c
111.69184 455.43288 m
113.35380 455.43288 114.70564 456.78387 114.70564 458.44583 C
114.70564 465.47887 L
114.70564 467.14082 113.35380 468.49294 111.69184 468.49294 C
110.03074 468.49294 108.67890 467.14082 108.67890 465.47887 C
108.67890 458.44583 L
108.67890 456.78387 110.03074 455.43288 111.69184 455.43288 C
@c
108.66472 480.67200 m
113.88671 480.67200 119.21272 479.77994 124.06564 478.09191 C
129.01890 476.36986 133.81767 472.90989 137.23483 468.59783 C
140.41871 464.58000 142.22891 460.60583 142.92964 456.09307 C
143.31175 453.64082 143.50791 451.74898 143.38885 449.33499 C
143.37978 449.16605 L
143.29587 447.46583 143.19184 445.35090 142.31480 443.88085 C
141.47291 442.46806 139.57172 440.95890 136.76570 440.95890 C
135.55077 440.95890 134.25165 441.24208 132.90576 441.80107 C
128.68271 443.55600 123.58970 444.15383 119.09679 444.68107 C
117.99468 444.81090 L
115.04976 445.16183 112.31972 445.33304 109.65090 445.33304 C
105.06869 445.33304 100.69682 444.81997 96.28384 443.76690 C
94.57767 443.35899 92.96079 442.77307 91.39776 442.20501 C
90.54085 441.89405 89.65276 441.57090 88.75786 441.28091 C
87.55965 440.89285 86.14687 440.49487 84.75477 440.49487 C
83.66173 440.49487 82.73877 440.73808 81.93373 441.23896 C
77.19987 444.18189 76.13490 451.17893 77.17890 456.80797 C
77.87877 460.58088 78.67077 463.51899 80.45376 466.50189 C
82.78781 470.40803 86.51991 473.28803 89.51187 475.36101 C
94.52580 478.83600 101.14866 480.67200 108.66472 480.67200 C
@c
F

@rax %Note: Object
81.92778 356.73562 137.74762 440.83474 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
109.83770 432.76365 m
109.01877 432.76365 108.35263 433.42980 108.35263 434.24787 C
108.35263 435.06680 109.01877 435.73266 109.83770 435.73266 C
110.65578 435.73266 111.32164 435.06680 111.32164 434.24787 C
111.32164 433.42980 110.65578 432.76365 109.83770 432.76365 C
@c
109.83770 440.83474 m
104.58255 440.83474 100.32180 435.24567 100.32180 432.05386 C
100.32180 431.02488 100.76655 429.20589 101.54268 427.21370 C
102.14957 425.65663 102.47159 423.99865 102.47074 422.32677 C
102.47074 422.07676 102.25871 421.87266 102.00869 421.87266 C
83.53956 421.87266 L
82.64976 421.87266 81.92778 421.15068 81.92778 420.26173 C
81.92778 358.12375 L
81.92778 357.35669 82.54970 356.73562 83.31676 356.73562 C
136.35865 356.73562 L
137.12570 356.73562 137.74762 357.35669 137.74762 358.12375 C
137.74762 420.26173 L
137.74762 421.15068 137.02564 421.87266 136.13556 421.87266 C
117.66671 421.87266 L
117.41159 421.87266 117.20466 422.07987 117.20466 422.33471 C
117.20466 424.00375 117.52554 425.65890 118.13159 427.21370 C
118.90857 429.20674 119.35361 431.02488 119.35361 432.05386 C
119.35361 435.24567 115.09257 440.83474 109.83770 440.83474 C
@c
109.83770 432.51364 m
110.79468 432.51364 111.57165 433.29175 111.57165 434.24787 C
111.57165 435.20372 110.79468 435.98268 109.83770 435.98268 C
108.88072 435.98268 108.10261 435.20372 108.10261 434.24787 C
108.10261 433.29175 108.88072 432.51364 109.83770 432.51364 C
@c
109.83770 440.58472 m
114.77282 440.58472 119.10359 435.26778 119.10359 432.05386 C
119.10359 431.02970 118.64154 429.20986 117.89972 427.30469 C
117.27269 425.69688 116.95465 424.02387 116.95465 422.33471 C
116.95465 421.94183 117.27468 421.62265 117.66671 421.62265 C
136.13556 421.62265 L
136.88674 421.62265 137.49761 421.01263 137.49761 420.26173 C
137.49761 358.12375 L
137.49761 357.49587 136.98680 356.98564 136.35865 356.98564 C
83.31676 356.98564 L
82.68860 356.98564 82.17780 357.49587 82.17780 358.12375 C
82.17780 420.26173 L
82.17780 421.01263 82.78866 421.62265 83.53956 421.62265 C
102.00869 421.62265 L
102.40072 421.62265 102.72076 421.93871 102.72076 422.32677 C
102.72161 424.01877 102.40356 425.69263 101.77569 427.30469 C
101.03357 429.20986 100.57181 431.02970 100.57181 432.05386 C
100.57181 435.26778 104.90258 440.58472 109.83770 440.58472 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
