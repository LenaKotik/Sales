%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -25 322 765 625 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: Air 13 2018 Клава Vector.eps
%%CreationDate: Thu May 30 16:32:09 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
-24.30595 322.29468 764.89795 624.12690 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
757.99616 596.02989 m
757.99616 593.03169 755.56602 590.60069 752.56809 590.60069 C
736.15720 590.60069 L
733.15899 590.60069 730.72913 593.03169 730.72913 596.02989 C
730.72913 612.74976 L
730.72913 615.74769 733.15899 618.17783 736.15720 618.17783 C
752.56809 618.17783 L
755.56602 618.17783 757.99616 615.74769 757.99616 612.74976 C
757.99616 596.02989 L
@c
757.99616 543.85370 m
757.99616 540.85578 755.56602 538.42564 752.56809 538.42564 C
687.45317 538.42564 L
684.45496 538.42564 682.02397 540.85578 682.02397 543.85370 C
682.02397 580.82173 L
682.02397 583.81965 684.45496 586.25065 687.45317 586.25065 C
752.56809 586.25065 L
755.56602 586.25065 757.99616 583.81965 757.99616 580.82173 C
757.99616 543.85370 L
@c
757.99616 334.89071 m
757.99616 331.89279 755.56602 329.46265 752.56809 329.46265 C
714.21420 329.46265 L
711.21600 329.46265 708.78614 331.89279 708.78614 334.89071 C
708.78614 371.29181 L
708.78614 374.28973 711.21600 376.71987 714.21420 376.71987 C
752.56809 376.71987 L
755.56602 376.71987 757.99616 374.28973 757.99616 371.29181 C
757.99616 334.89071 L
@c
704.29720 334.89071 m
704.29720 331.89279 701.86706 329.46265 698.86913 329.46265 C
660.23121 329.46265 L
657.23301 329.46265 654.80315 331.89279 654.80315 334.89071 C
654.80315 371.29181 L
654.80315 374.28973 657.23301 376.71987 660.23121 376.71987 C
698.86913 376.71987 L
701.86706 376.71987 704.29720 374.28973 704.29720 371.29181 C
704.29720 334.89071 L
@c
650.20819 334.89071 m
650.20819 331.89279 647.77720 329.46265 644.77899 329.46265 C
606.42510 329.46265 L
603.42718 329.46265 600.99704 331.89279 600.99704 334.89071 C
600.99704 371.29181 L
600.99704 374.28973 603.42718 376.71987 606.42510 376.71987 C
644.77899 376.71987 L
647.77720 376.71987 650.20819 374.28973 650.20819 371.29181 C
650.20819 334.89071 L
@c
596.75414 334.89071 m
596.75414 331.89279 594.32315 329.46265 591.32608 329.46265 C
552.68816 329.46265 L
549.68995 329.46265 547.26009 331.89279 547.26009 334.89071 C
547.26009 371.29181 L
547.26009 374.28973 549.68995 376.71987 552.68816 376.71987 C
591.32608 376.71987 L
594.32315 376.71987 596.75414 374.28973 596.75414 371.29181 C
596.75414 334.89071 L
@c
543.13002 334.89071 m
543.13002 331.89279 540.70016 329.46265 537.70195 329.46265 C
485.81518 329.46265 L
482.81698 329.46265 480.38712 331.89279 480.38712 334.89071 C
480.38712 371.29181 L
480.38712 374.28973 482.81698 376.71987 485.81518 376.71987 C
537.70195 376.71987 L
540.70016 376.71987 543.13002 374.28973 543.13002 371.29181 C
543.13002 334.89071 L
@c
479.82019 423.09780 m
479.82019 426.09572 482.25118 428.52586 485.24797 428.52586 C
523.60214 428.52586 L
526.60006 428.52586 529.03106 426.09572 529.03106 423.09780 C
529.03106 386.69669 L
529.03106 383.69991 526.60006 381.26891 523.60214 381.26891 C
485.24797 381.26891 L
482.25118 381.26891 479.82019 383.69991 479.82019 386.69669 C
479.82019 423.09780 L
@c
476.07420 334.89071 m
476.07420 331.89279 473.64321 329.46265 470.64501 329.46265 C
217.04995 329.46265 L
214.05203 329.46265 211.62104 331.89279 211.62104 334.89071 C
211.62104 371.29181 L
211.62104 374.28973 214.05203 376.71987 217.04995 376.71987 C
470.64501 376.71987 L
473.64321 376.71987 476.07420 374.28973 476.07420 371.29181 C
476.07420 334.89071 L
@c
211.52098 423.09780 m
211.52098 426.09572 213.95197 428.52586 216.95017 428.52586 C
255.30406 428.52586 L
258.30198 428.52586 260.73213 426.09572 260.73213 423.09780 C
260.73213 386.69669 L
260.73213 383.69991 258.30198 381.26891 255.30406 381.26891 C
216.95017 381.26891 L
213.95197 381.26891 211.52098 383.69991 211.52098 386.69669 C
211.52098 423.09780 L
@c
207.09213 386.69669 m
207.09213 383.69991 204.66113 381.26891 201.66321 381.26891 C
163.30904 381.26891 L
160.31112 381.26891 157.88098 383.69991 157.88098 386.69669 C
157.88098 423.09780 L
157.88098 426.09572 160.31112 428.52586 163.30904 428.52586 C
201.66321 428.52586 L
204.66113 428.52586 207.09213 426.09572 207.09213 423.09780 C
207.09213 386.69669 L
@c
207.03997 334.89071 m
207.03997 331.89279 204.61011 329.46265 201.61219 329.46265 C
149.72513 329.46265 L
146.72721 329.46265 144.29707 331.89279 144.29707 334.89071 C
144.29707 371.29181 L
144.29707 374.28973 146.72721 376.71987 149.72513 376.71987 C
201.61219 376.71987 L
204.61011 376.71987 207.03997 374.28973 207.03997 371.29181 C
207.03997 334.89071 L
@c
139.66299 334.89071 m
139.66299 331.89279 137.23200 329.46265 134.23408 329.46265 C
95.88019 329.46265 L
92.88198 329.46265 90.45213 331.89279 90.45213 334.89071 C
90.45213 371.29181 L
90.45213 374.28973 92.88198 376.71987 95.88019 376.71987 C
134.23408 376.71987 L
137.23200 376.71987 139.66299 374.28973 139.66299 371.29181 C
139.66299 334.89071 L
@c
85.82995 334.89071 m
85.82995 331.89279 83.39896 329.46265 80.40104 329.46265 C
42.04800 329.46265 L
39.05008 329.46265 36.61909 331.89279 36.61909 334.89071 C
36.61909 371.29181 L
36.61909 374.28973 39.05008 376.71987 42.04800 376.71987 C
80.40104 376.71987 L
83.39896 376.71987 85.82995 374.28973 85.82995 371.29181 C
85.82995 334.89071 L
@c
31.68510 334.89071 m
31.68510 331.89279 29.25496 329.46265 26.25704 329.46265 C
-12.09798 329.46265 L
-15.09477 329.46265 -17.52491 331.89279 -17.52491 334.89071 C
-17.52491 371.29181 L
-17.52491 374.28973 -15.09477 376.71987 -12.09798 376.71987 C
26.25704 376.71987 L
29.25496 376.71987 31.68510 374.28973 31.68510 371.29181 C
31.68510 334.89071 L
@c
-17.52491 423.09780 m
-17.52491 426.09572 -15.09477 428.52586 -12.09798 428.52586 C
93.59320 428.52586 L
96.59112 428.52586 99.02098 426.09572 99.02098 423.09780 C
99.02098 386.69669 L
99.02098 383.69991 96.59112 381.26891 93.59320 381.26891 C
-12.09798 381.26891 L
-15.09477 381.26891 -17.52491 383.69991 -17.52491 386.69669 C
-17.52491 423.09780 L
@c
-17.52491 475.47071 m
-17.52491 478.46891 -15.09477 480.89991 -12.09798 480.89991 C
66.80409 480.89991 L
69.80202 480.89991 72.23102 478.46891 72.23102 475.47071 C
72.23102 439.07074 L
72.23102 436.07282 69.80202 433.64183 66.80409 433.64183 C
-12.09798 433.64183 L
-15.09477 433.64183 -17.52491 436.07282 -17.52491 439.07074 C
-17.52491 475.47071 L
@c
-17.52491 528.13984 m
-17.52491 531.13776 -15.09477 533.56791 -12.09798 533.56791 C
53.38800 533.56791 L
56.38620 533.56791 58.81606 531.13776 58.81606 528.13984 C
58.81606 491.45584 L
58.81606 488.45877 56.38620 486.02778 53.38800 486.02778 C
-12.09798 486.02778 L
-15.09477 486.02778 -17.52491 488.45877 -17.52491 491.45584 C
-17.52491 528.13984 L
@c
-17.52491 580.82173 m
-17.52491 583.81965 -15.09477 586.25065 -12.09798 586.25065 C
26.25704 586.25065 L
29.25496 586.25065 31.68510 583.81965 31.68510 580.82173 C
31.68510 543.85370 L
31.68510 540.85578 29.25496 538.42564 26.25704 538.42564 C
-12.09798 538.42564 L
-15.09477 538.42564 -17.52491 540.85578 -17.52491 543.85370 C
-17.52491 580.82173 L
@c
-17.52491 612.74976 m
-17.52491 615.74769 -15.09477 618.17783 -12.09798 618.17783 C
30.16318 618.17783 L
33.16110 618.17783 35.59209 615.74769 35.59209 612.74976 C
35.59209 596.02989 L
35.59209 593.03169 33.16110 590.60069 30.16318 590.60069 C
-12.09798 590.60069 L
-15.09477 590.60069 -17.52491 593.03169 -17.52491 596.02989 C
-17.52491 612.74976 L
@c
36.62107 580.82173 m
36.62107 583.81965 39.05206 586.25065 42.04998 586.25065 C
80.40302 586.25065 L
83.40123 586.25065 85.83222 583.81965 85.83222 580.82173 C
85.83222 543.85370 L
85.83222 540.85578 83.40123 538.42564 80.40302 538.42564 C
42.04998 538.42564 L
39.05206 538.42564 36.62107 540.85578 36.62107 543.85370 C
36.62107 580.82173 L
@c
40.47619 612.74976 m
40.47619 615.74769 42.90718 618.17783 45.90510 618.17783 C
88.16513 618.17783 L
91.16306 618.17783 93.59405 615.74769 93.59405 612.74976 C
93.59405 596.02989 L
93.59405 593.03169 91.16306 590.60069 88.16513 590.60069 C
45.90510 590.60069 L
42.90718 590.60069 40.47619 593.03169 40.47619 596.02989 C
40.47619 612.74976 L
@c
134.34718 586.25065 m
137.34510 586.25065 139.77496 583.81965 139.77496 580.82173 C
139.77496 543.85370 L
139.77496 540.85578 137.34510 538.42564 134.34718 538.42564 C
95.99216 538.42564 L
92.99509 538.42564 90.56409 540.85578 90.56409 543.85370 C
90.56409 580.82173 L
90.56409 583.81965 92.99509 586.25065 95.99216 586.25065 C
134.34718 586.25065 L
@c
98.12608 612.74976 m
98.12608 615.74769 100.55622 618.17783 103.55414 618.17783 C
145.81417 618.17783 L
148.81209 618.17783 151.24309 615.74769 151.24309 612.74976 C
151.24309 596.02989 L
151.24309 593.03169 148.81209 590.60069 145.81417 590.60069 C
103.55414 590.60069 L
100.55622 590.60069 98.12608 593.03169 98.12608 596.02989 C
98.12608 612.74976 L
@c
155.46614 612.74976 m
155.46614 615.74769 157.89600 618.17783 160.89307 618.17783 C
203.15395 618.17783 L
206.15216 618.17783 208.58315 615.74769 208.58315 612.74976 C
208.58315 596.02989 L
208.58315 593.03169 206.15216 590.60069 203.15395 590.60069 C
160.89307 590.60069 L
157.89600 590.60069 155.46614 593.03169 155.46614 596.02989 C
155.46614 612.74976 L
@c
212.52217 612.74976 m
212.52217 615.74769 214.95203 618.17783 217.94995 618.17783 C
260.21112 618.17783 L
263.20904 618.17783 265.64003 615.74769 265.64003 612.74976 C
265.64003 596.02989 L
265.64003 593.03169 263.20904 590.60069 260.21112 590.60069 C
217.94995 590.60069 L
214.95203 590.60069 212.52217 593.03169 212.52217 596.02989 C
212.52217 612.74976 L
@c
270.66699 612.74976 m
270.66699 615.74769 273.09713 618.17783 276.09506 618.17783 C
318.35509 618.17783 L
321.35301 618.17783 323.78400 615.74769 323.78400 612.74976 C
323.78400 596.02989 L
323.78400 593.03169 321.35301 590.60069 318.35509 590.60069 C
276.09506 590.60069 L
273.09713 590.60069 270.66699 593.03169 270.66699 596.02989 C
270.66699 612.74976 L
@c
328.32198 612.74976 m
328.32198 615.74769 330.75213 618.17783 333.75005 618.17783 C
376.01121 618.17783 L
379.00913 618.17783 381.43814 615.74769 381.43814 612.74976 C
381.43814 596.02989 L
381.43814 593.03169 379.00913 590.60069 376.01121 590.60069 C
333.75005 590.60069 L
330.75213 590.60069 328.32198 593.03169 328.32198 596.02989 C
328.32198 612.74976 L
@c
385.19121 612.74976 m
385.19121 615.74769 387.62107 618.17783 390.61899 618.17783 C
433.16306 618.17783 L
436.16098 618.17783 438.59197 615.74769 438.59197 612.74976 C
438.59197 596.02989 L
438.59197 593.03169 436.16098 590.60069 432.31323 590.60069 C
389.76917 590.60069 L
387.62107 590.60069 385.19121 593.03169 385.19121 596.02989 C
385.19121 612.74976 L
@c
442.46296 612.74976 m
442.46296 615.74769 444.89310 618.17783 447.89216 618.17783 C
490.43509 618.17783 L
493.43301 618.17783 495.86315 615.74769 495.86315 612.74976 C
495.86315 596.02989 L
495.86315 593.03169 493.43301 590.60069 490.43509 590.60069 C
447.89216 590.60069 L
444.89310 590.60069 442.46296 593.03169 442.46296 596.02989 C
442.46296 612.74976 L
@c
500.13921 612.74976 m
500.13921 615.74769 502.56822 618.17783 505.56614 618.17783 C
548.11020 618.17783 L
551.10813 618.17783 553.53912 615.74769 553.53912 612.74976 C
553.53912 596.02989 L
553.53912 593.03169 551.10813 590.60069 548.11020 590.60069 C
505.56614 590.60069 L
502.56822 590.60069 500.13921 593.03169 500.13921 596.02989 C
500.13921 612.74976 L
@c
557.56715 612.74976 m
557.56715 615.74769 559.99814 618.17783 562.99606 618.17783 C
605.54013 618.17783 L
608.53805 618.17783 610.96819 615.74769 610.96819 612.74976 C
610.96819 596.02989 L
610.96819 593.03169 608.53805 590.60069 605.54013 590.60069 C
562.99606 590.60069 L
559.99814 590.60069 557.56715 593.03169 557.56715 596.02989 C
557.56715 612.74976 L
@c
615.52006 612.74976 m
615.52006 615.74769 617.95106 618.17783 620.94898 618.17783 C
663.49304 618.17783 L
666.49011 618.17783 668.92110 615.74769 668.92110 612.74976 C
668.92110 596.02989 L
668.92110 593.03169 666.49011 590.60069 663.49304 590.60069 C
620.94898 590.60069 L
617.95106 590.60069 615.52006 593.03169 615.52006 596.02989 C
615.52006 612.74976 L
@c
677.09707 580.82173 m
677.09707 543.85370 L
677.09707 540.85578 674.66721 538.42564 671.66901 538.42564 C
633.59802 538.42564 L
630.60009 538.42564 628.16995 540.85578 628.16995 543.85370 C
628.16995 580.82173 L
628.16995 583.81965 630.60009 586.25065 633.59802 586.25065 C
671.66901 586.25065 L
674.66721 586.25065 677.09707 583.81965 677.09707 580.82173 C
@c
704.23909 491.45584 m
704.23909 488.45877 701.80923 486.02778 698.81102 486.02778 C
660.45713 486.02778 L
657.45921 486.02778 655.02822 488.45877 655.02822 491.45584 C
655.02822 528.13984 L
655.02822 531.13776 657.45921 533.56791 660.45713 533.56791 C
698.81102 533.56791 L
701.80923 533.56791 704.23909 531.13776 704.23909 528.13984 C
704.23909 491.45584 L
@c
640.85698 423.09780 m
640.85698 426.09572 643.28797 428.52586 646.28617 428.52586 C
752.28520 428.52586 L
755.28312 428.52586 757.71298 426.09572 757.71298 423.09780 C
757.71298 386.69669 L
757.71298 383.69991 755.28312 381.26891 752.28520 381.26891 C
646.28617 381.26891 L
643.28797 381.26891 640.85698 383.69991 640.85698 386.69669 C
640.85698 423.09780 L
@c
619.77515 433.64183 m
616.77723 433.64183 614.34709 436.07282 614.34709 439.07074 C
614.34709 475.47071 L
614.34709 478.46891 616.77723 480.89991 619.77515 480.89991 C
658.12904 480.89991 L
661.12696 480.89991 663.55795 478.46891 663.55795 475.47071 C
663.55795 439.07074 L
663.55795 436.07282 661.12696 433.64183 658.12904 433.64183 C
619.77515 433.64183 L
@c
587.26998 423.09780 m
587.26998 426.09572 589.70098 428.52586 592.69805 428.52586 C
631.05307 428.52586 L
634.05099 428.52586 636.48113 426.09572 636.48113 423.09780 C
636.48113 386.69669 L
636.48113 383.69991 634.05099 381.26891 631.05307 381.26891 C
592.69805 381.26891 L
589.70098 381.26891 587.26998 383.69991 587.26998 386.69669 C
587.26998 423.09780 L
@c
566.04302 433.64183 m
563.04510 433.64183 560.61411 436.07282 560.61411 439.07074 C
560.61411 475.47071 L
560.61411 478.46891 563.04510 480.89991 566.04302 480.89991 C
604.39720 480.89991 L
607.39512 480.89991 609.82498 478.46891 609.82498 475.47071 C
609.82498 439.07074 L
609.82498 436.07282 607.39512 433.64183 604.39720 433.64183 C
566.04302 433.64183 L
@c
533.63820 423.09780 m
533.63820 426.09572 536.06806 428.52586 539.06598 428.52586 C
577.42101 428.52586 L
580.41921 428.52586 582.84907 426.09572 582.84907 423.09780 C
582.84907 386.69669 L
582.84907 383.69991 580.41921 381.26891 577.42101 381.26891 C
539.06598 381.26891 L
536.06806 381.26891 533.63820 383.69991 533.63820 386.69669 C
533.63820 423.09780 L
@c
506.70198 475.47071 m
506.70198 478.46891 509.13213 480.89991 512.13005 480.89991 C
550.48422 480.89991 L
553.48214 480.89991 555.91313 478.46891 555.91313 475.47071 C
555.91313 439.07074 L
555.91313 436.07282 553.48214 433.64183 550.48422 433.64183 C
512.13005 433.64183 L
509.13213 433.64183 506.70198 436.07282 506.70198 439.07074 C
506.70198 475.47071 L
@c
570.01011 543.85370 m
570.01011 540.85578 567.57912 538.42564 564.58205 538.42564 C
526.22702 538.42564 L
523.22910 538.42564 520.79896 540.85578 520.79896 543.85370 C
520.79896 580.82173 L
520.79896 583.81965 523.22910 586.25065 526.22702 586.25065 C
564.58205 586.25065 L
567.57912 586.25065 570.01011 583.81965 570.01011 580.82173 C
570.01011 543.85370 L
@c
591.12907 533.56791 m
594.12699 533.56791 596.55798 531.13776 596.55798 528.13984 C
596.55798 491.45584 L
596.55798 488.45877 594.12699 486.02778 591.12907 486.02778 C
552.77405 486.02778 L
549.77613 486.02778 547.34712 488.45877 547.34712 491.45584 C
547.34712 528.13984 L
547.34712 531.13776 549.77613 533.56791 552.77405 533.56791 C
591.12907 533.56791 L
@c
644.62110 533.56791 m
647.61902 533.56791 650.04917 531.13776 650.04917 528.13984 C
650.04917 491.45584 L
650.04917 488.45877 647.61902 486.02778 644.62110 486.02778 C
606.26721 486.02778 L
603.26816 486.02778 600.83802 488.45877 600.83802 491.45584 C
600.83802 528.13984 L
600.83802 531.13776 603.26816 533.56791 606.26721 533.56791 C
644.62110 533.56791 L
@c
623.82699 543.85370 m
623.82699 540.85578 621.39600 538.42564 618.39808 538.42564 C
580.04504 538.42564 L
577.04712 538.42564 574.61613 540.85578 574.61613 543.85370 C
574.61613 580.82173 L
574.61613 583.81965 577.04712 586.25065 580.04504 586.25065 C
618.39808 586.25065 L
621.39600 586.25065 623.82699 583.81965 623.82699 580.82173 C
623.82699 543.85370 L
@c
499.12214 486.02778 m
496.12422 486.02778 493.69408 488.45877 493.69408 491.45584 C
493.69408 528.13984 L
493.69408 531.13776 496.12422 533.56791 499.12214 533.56791 C
537.47603 533.56791 L
540.47509 533.56791 542.90523 531.13776 542.90523 528.13984 C
542.90523 491.45584 L
542.90523 488.45877 540.47509 486.02778 537.47603 486.02778 C
499.12214 486.02778 L
@c
458.20517 433.64183 m
455.20809 433.64183 452.77710 436.07282 452.77710 439.07074 C
452.77710 475.47071 L
452.77710 478.46891 455.20809 480.89991 458.20517 480.89991 C
496.55906 480.89991 L
499.55811 480.89991 501.98797 478.46891 501.98797 475.47071 C
501.98797 439.07074 L
501.98797 436.07282 499.55811 433.64183 496.55906 433.64183 C
458.20517 433.64183 L
@c
426.19606 423.09780 m
426.19606 426.09572 428.62706 428.52586 431.62498 428.52586 C
469.97802 428.52586 L
472.97622 428.52586 475.40721 426.09572 475.40721 423.09780 C
475.40721 386.69669 L
475.40721 383.69991 472.97622 381.26891 469.97802 381.26891 C
431.62498 381.26891 L
428.62706 381.26891 426.19606 383.69991 426.19606 386.69669 C
426.19606 423.09780 L
@c
404.78400 433.64183 m
401.78608 433.64183 399.35509 436.07282 399.35509 439.07074 C
399.35509 475.47071 L
399.35509 478.46891 401.78608 480.89991 404.78400 480.89991 C
443.13817 480.89991 L
446.13609 480.89991 448.56595 478.46891 448.56595 475.47071 C
448.56595 439.07074 L
448.56595 436.07282 446.13609 433.64183 443.13817 433.64183 C
404.78400 433.64183 L
@c
372.64422 423.09780 m
372.64422 426.09572 375.07408 428.52586 378.07200 428.52586 C
416.42702 428.52586 L
419.42523 428.52586 421.85395 426.09572 421.85395 423.09780 C
421.85395 386.69669 L
421.85395 383.69991 419.42523 381.26891 416.42702 381.26891 C
378.07200 381.26891 L
375.07408 381.26891 372.64422 383.69991 372.64422 386.69669 C
372.64422 423.09780 L
@c
350.97704 433.64183 m
347.97912 433.64183 345.54898 436.07282 345.54898 439.07074 C
345.54898 475.47071 L
345.54898 478.46891 347.97912 480.89991 350.97704 480.89991 C
389.33206 480.89991 L
392.32913 480.89991 394.76013 478.46891 394.76013 475.47071 C
394.76013 439.07074 L
394.76013 436.07282 392.32913 433.64183 389.33206 433.64183 C
350.97704 433.64183 L
@c
319.28400 423.09780 m
319.28400 426.09572 321.71499 428.52586 324.71320 428.52586 C
363.06595 428.52586 L
366.06416 428.52586 368.49515 426.09572 368.49515 423.09780 C
368.49515 386.69669 L
368.49515 383.69991 366.06416 381.26891 363.06595 381.26891 C
324.71320 381.26891 L
321.71499 381.26891 319.28400 383.69991 319.28400 386.69669 C
319.28400 423.09780 L
@c
297.65820 433.64183 m
294.66000 433.64183 292.23014 436.07282 292.23014 439.07074 C
292.23014 475.47071 L
292.23014 478.46891 294.66000 480.89991 297.65820 480.89991 C
336.01323 480.89991 L
339.01115 480.89991 341.44101 478.46891 341.44101 475.47071 C
341.44101 439.07074 L
341.44101 436.07282 339.01115 433.64183 336.01323 433.64183 C
297.65820 433.64183 L
@c
265.39200 423.09780 m
265.39200 426.09572 267.82214 428.52586 270.82006 428.52586 C
309.17395 428.52586 L
312.17216 428.52586 314.60202 426.09572 314.60202 423.09780 C
314.60202 386.69669 L
314.60202 383.69991 312.17216 381.26891 309.17395 381.26891 C
270.82006 381.26891 L
267.82214 381.26891 265.39200 383.69991 265.39200 386.69669 C
265.39200 423.09780 L
@c
238.73017 475.47071 m
238.73017 478.46891 241.16117 480.89991 244.15795 480.89991 C
282.51298 480.89991 L
285.51118 480.89991 287.94104 478.46891 287.94104 475.47071 C
287.94104 439.07074 L
287.94104 436.07282 285.51118 433.64183 282.51298 433.64183 C
244.15795 433.64183 L
241.16117 433.64183 238.73017 436.07282 238.73017 439.07074 C
238.73017 475.47071 L
@c
301.27805 543.85370 m
301.27805 540.85578 298.84819 538.42564 295.84998 538.42564 C
257.49496 538.42564 L
254.49704 538.42564 252.06718 540.85578 252.06718 543.85370 C
252.06718 580.82173 L
252.06718 583.81965 254.49704 586.25065 257.49496 586.25065 C
295.84998 586.25065 L
298.84819 586.25065 301.27805 583.81965 301.27805 580.82173 C
301.27805 543.85370 L
@c
322.82901 533.56791 m
325.82721 533.56791 328.25707 531.13776 328.25707 528.13984 C
328.25707 491.45584 L
328.25707 488.45877 325.82721 486.02778 322.82901 486.02778 C
284.47512 486.02778 L
281.47606 486.02778 279.04620 488.45877 279.04620 491.45584 C
279.04620 528.13984 L
279.04620 531.13776 281.47606 533.56791 284.47512 533.56791 C
322.82901 533.56791 L
@c
355.30611 543.85370 m
355.30611 540.85578 352.87512 538.42564 349.87720 538.42564 C
311.52302 538.42564 L
308.52510 538.42564 306.09496 540.85578 306.09496 543.85370 C
306.09496 580.82173 L
306.09496 583.81965 308.52510 586.25065 311.52302 586.25065 C
349.87720 586.25065 L
352.87512 586.25065 355.30611 583.81965 355.30611 580.82173 C
355.30611 543.85370 L
@c
376.57814 533.56791 m
379.57606 533.56791 382.00706 531.13776 382.00706 528.13984 C
382.00706 491.45584 L
382.00706 488.45877 379.57606 486.02778 376.57814 486.02778 C
338.22397 486.02778 L
335.22605 486.02778 332.79619 488.45877 332.79619 491.45584 C
332.79619 528.13984 L
332.79619 531.13776 335.22605 533.56791 338.22397 533.56791 C
376.57814 533.56791 L
@c
408.79106 543.85370 m
408.79106 540.85578 406.36006 538.42564 403.36214 538.42564 C
365.00910 538.42564 L
362.01118 538.42564 359.58019 540.85578 359.58019 543.85370 C
359.58019 580.82173 L
359.58019 583.81965 362.01118 586.25065 365.00910 586.25065 C
403.36214 586.25065 L
406.36006 586.25065 408.79106 583.81965 408.79106 580.82173 C
408.79106 543.85370 L
@c
430.40211 533.56791 m
433.40003 533.56791 435.83102 531.13776 435.83102 528.13984 C
435.83102 491.45584 L
435.83102 488.45877 433.40003 486.02778 430.40211 486.02778 C
392.04822 486.02778 L
389.05002 486.02778 386.62016 488.45877 386.62016 491.45584 C
386.62016 528.13984 L
386.62016 531.13776 389.05002 533.56791 392.04822 533.56791 C
430.40211 533.56791 L
@c
462.17820 543.85370 m
462.17820 540.85578 459.74721 538.42564 456.74901 538.42564 C
418.67915 538.42564 L
415.68123 538.42564 413.24995 540.85578 413.24995 543.85370 C
413.24995 580.82173 L
413.24995 583.81965 415.68123 586.25065 418.67915 586.25065 C
456.74901 586.25065 L
459.74721 586.25065 462.17820 583.81965 462.17820 580.82173 C
462.17820 543.85370 L
@c
466.95798 543.85370 m
466.95798 580.82173 L
466.95798 583.81965 469.38813 586.25065 472.38605 586.25065 C
510.45704 586.25065 L
513.45411 586.25065 515.88510 583.81965 515.88510 580.82173 C
515.88510 543.85370 L
515.88510 540.85578 513.45411 538.42564 510.45704 538.42564 C
472.38605 538.42564 L
469.38813 538.42564 466.95798 540.85578 466.95798 543.85370 C
@c
483.77112 533.56791 m
486.76904 533.56791 489.20003 531.13776 489.20003 528.13984 C
489.20003 491.45584 L
489.20003 488.45877 486.76904 486.02778 483.77112 486.02778 C
445.41808 486.02778 L
442.42016 486.02778 439.98917 488.45877 439.98917 491.45584 C
439.98917 528.13984 L
439.98917 531.13776 442.42016 533.56791 445.41808 533.56791 C
483.77112 533.56791 L
@c
230.55109 486.02778 m
227.55317 486.02778 225.12217 488.45877 225.12217 491.45584 C
225.12217 528.13984 L
225.12217 531.13776 227.55317 533.56791 230.55109 533.56791 C
268.90498 533.56791 L
271.90318 533.56791 274.33304 531.13776 274.33304 528.13984 C
274.33304 491.45584 L
274.33304 488.45877 271.90318 486.02778 268.90498 486.02778 C
230.55109 486.02778 L
@c
184.54309 475.47071 m
184.54309 478.46891 186.97408 480.89991 189.97200 480.89991 C
228.32617 480.89991 L
231.32296 480.89991 233.75395 478.46891 233.75395 475.47071 C
233.75395 439.07074 L
233.75395 436.07282 231.32296 433.64183 228.32617 433.64183 C
189.97200 433.64183 L
186.97408 433.64183 184.54309 436.07282 184.54309 439.07074 C
184.54309 475.47071 L
@c
198.30699 543.85370 m
198.30699 580.82173 L
198.30699 583.81965 200.73600 586.25065 203.73420 586.25065 C
242.08923 586.25065 L
245.08715 586.25065 247.51701 583.81965 247.51701 580.82173 C
247.51701 543.85370 L
247.51701 540.85578 245.08715 538.42564 242.08923 538.42564 C
203.73420 538.42564 L
200.73600 538.42564 198.30699 540.85578 198.30699 543.85370 C
@c
176.78409 486.02778 m
173.78702 486.02778 171.35603 488.45877 171.35603 491.45584 C
171.35603 528.13984 L
171.35603 531.13776 173.78702 533.56791 176.78409 533.56791 C
215.13912 533.56791 L
218.13704 533.56791 220.56718 531.13776 220.56718 528.13984 C
220.56718 491.45584 L
220.56718 488.45877 218.13704 486.02778 215.13912 486.02778 C
176.78409 486.02778 L
@c
136.33512 433.64183 m
133.33720 433.64183 130.90620 436.07282 130.90620 439.07074 C
130.90620 475.47071 L
130.90620 478.46891 133.33720 480.89991 136.33512 480.89991 C
174.68901 480.89991 L
177.68721 480.89991 180.11707 478.46891 180.11707 475.47071 C
180.11707 439.07074 L
180.11707 436.07282 177.68721 433.64183 174.68901 433.64183 C
136.33512 433.64183 L
@c
104.01619 423.09780 m
104.01619 426.09572 106.44605 428.52586 109.44397 428.52586 C
147.79899 428.52586 L
150.79606 428.52586 153.22620 426.09572 153.22620 423.09780 C
153.22620 386.69669 L
153.22620 383.69991 150.79606 381.26891 147.79899 381.26891 C
109.44397 381.26891 L
106.44605 381.26891 104.01619 383.69991 104.01619 386.69669 C
104.01619 423.09780 L
@c
144.76422 543.85370 m
144.76422 580.82173 L
144.76422 583.81965 147.19408 586.25065 150.19200 586.25065 C
188.54617 586.25065 L
191.54409 586.25065 193.97509 583.81965 193.97509 580.82173 C
193.97509 543.85370 L
193.97509 540.85578 191.54409 538.42564 188.54617 538.42564 C
150.19200 538.42564 L
147.19408 538.42564 144.76422 540.85578 144.76422 543.85370 C
@c
161.42315 533.56791 m
164.42107 533.56791 166.85008 531.13776 166.85008 528.13984 C
166.85008 491.45584 L
166.85008 488.45877 164.42107 486.02778 161.42315 486.02778 C
123.06813 486.02778 L
120.07020 486.02778 117.64006 488.45877 117.64006 491.45584 C
117.64006 528.13984 L
117.64006 531.13776 120.07020 533.56791 123.06813 533.56791 C
161.42315 533.56791 L
@c
69.22403 486.02778 m
66.22498 486.02778 63.79597 488.45877 63.79597 491.45584 C
63.79597 528.13984 L
63.79597 531.13776 66.22498 533.56791 69.22403 533.56791 C
107.57820 533.56791 L
110.57613 533.56791 113.00598 531.13776 113.00598 528.13984 C
113.00598 491.45584 L
113.00598 488.45877 110.57613 486.02778 107.57820 486.02778 C
69.22403 486.02778 L
@c
77.30022 475.47071 m
77.30022 478.46891 79.73008 480.89991 82.72715 480.89991 C
121.08217 480.89991 L
124.08009 480.89991 126.51109 478.46891 126.51109 475.47071 C
126.51109 439.07074 L
126.51109 436.07282 124.08009 433.64183 121.08217 433.64183 C
82.72715 433.64183 L
79.73008 433.64183 77.30022 436.07282 77.30022 439.07074 C
77.30022 475.47071 L
@c
708.21921 491.45584 m
708.21921 528.13984 L
708.21921 531.13776 710.64907 533.56791 713.64699 533.56791 C
752.28520 533.56791 L
755.28312 533.56791 757.71298 531.13776 757.71298 528.13984 C
757.71298 491.45584 L
757.71298 488.45877 755.28312 486.02778 752.28520 486.02778 C
713.64699 486.02778 L
710.64907 486.02778 708.21921 488.45877 708.21921 491.45584 C
@c
752.28520 480.89991 m
755.28312 480.89991 757.71298 478.46891 757.71298 475.47071 C
757.71298 439.07074 L
757.71298 436.07282 755.28312 433.64183 752.28520 433.64183 C
673.42110 433.64183 L
670.42318 433.64183 667.99219 436.07282 667.99219 439.07074 C
667.99219 475.47071 L
667.99219 478.46891 670.42318 480.89991 673.42110 480.89991 C
752.28520 480.89991 L
@c
673.03417 612.74976 m
673.03417 615.74769 675.46517 618.17783 678.46195 618.17783 C
721.00715 618.17783 L
724.00422 618.17783 726.43408 615.74769 726.43408 612.74976 C
726.43408 596.02989 L
726.43408 593.03169 724.00422 590.60069 721.00715 590.60069 C
678.46195 590.60069 L
675.46517 590.60069 673.03417 593.03169 673.03417 596.02989 C
673.03417 612.74976 L
@c
754.58523 624.12690 m
-13.42602 624.12690 L
-19.12082 624.12690 -24.30595 618.65887 -24.30595 612.96378 C
-24.30595 332.60769 L
-24.30595 326.91175 -19.12082 322.29468 -13.42602 322.29468 C
754.58523 322.29468 L
760.28003 322.29468 764.89795 326.91175 764.89795 332.60769 C
764.89795 612.96378 L
764.89795 618.65887 760.28003 624.12690 754.58523 624.12690 C
@c
F

@rax %Note: Object
-16.67509 330.31247 30.83471 375.86948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
26.25676 375.86948 m
-12.09713 375.86948 L
-14.62110 375.86948 -16.67509 373.81550 -16.67509 371.29153 C
-16.67509 334.89071 L
-16.67509 332.36646 -14.62110 330.31247 -12.09713 330.31247 C
26.25676 330.31247 L
28.78072 330.31247 30.83471 332.36646 30.83471 334.89071 C
30.83471 371.29153 L
30.83471 373.81550 28.78072 375.86948 26.25676 375.86948 C
@c
F

@rax %Note: Object
-16.67480 382.11959 98.17115 427.67546 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-12.09770 382.11959 m
93.59235 382.11959 L
96.11717 382.11959 98.17115 384.17357 98.17115 386.69754 C
98.17115 423.09865 L
98.17115 425.62261 96.11717 427.67546 93.59235 427.67546 C
-12.09770 427.67546 L
-14.62082 427.67546 -16.67480 425.62261 -16.67480 423.09865 C
-16.67480 386.69754 L
-16.67480 384.17357 -14.62082 382.11959 -12.09770 382.11959 C
@c
F

@rax %Note: Object
-16.67480 434.49279 71.38120 480.04980 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-12.09770 434.49279 m
66.80324 434.49279 L
69.32835 434.49279 71.38120 436.54677 71.38120 439.07074 C
71.38120 475.47156 L
71.38120 477.99581 69.32835 480.04980 66.80324 480.04980 C
-12.09770 480.04980 L
-14.62082 480.04980 -16.67480 477.99581 -16.67480 475.47156 C
-16.67480 439.07074 L
-16.67480 436.54677 -14.62082 434.49279 -12.09770 434.49279 C
@c
F

@rax %Note: Object
-16.67480 486.87846 57.96539 532.71836 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-12.09770 486.87846 m
53.38715 486.87846 L
55.91225 486.87846 57.96539 488.93131 57.96539 491.45528 C
57.96539 528.14041 L
57.96539 530.66438 55.91225 532.71836 53.38715 532.71836 C
-12.09770 532.71836 L
-14.62082 532.71836 -16.67480 530.66438 -16.67480 528.14041 C
-16.67480 491.45528 L
-16.67480 488.93131 -14.62082 486.87846 -12.09770 486.87846 C
@c
F

@rax %Note: Object
37.46920 330.31247 84.97928 375.86948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
80.40132 375.86948 m
42.04715 375.86948 L
39.52318 375.86948 37.46920 373.81550 37.46920 371.29153 C
37.46920 334.89071 L
37.46920 332.36646 39.52318 330.31247 42.04715 330.31247 C
80.40132 330.31247 L
82.92529 330.31247 84.97928 332.36646 84.97928 334.89071 C
84.97928 371.29153 L
84.97928 373.81550 82.92529 375.86948 80.40132 375.86948 C
@c
F

@rax %Note: Object
104.86630 382.11959 152.37638 427.67546 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
109.44425 382.11959 m
147.79843 382.11959 L
150.32239 382.11959 152.37638 384.17357 152.37638 386.69754 C
152.37638 423.09865 L
152.37638 425.62261 150.32239 427.67546 147.79843 427.67546 C
109.44425 427.67546 L
106.92028 427.67546 104.86630 425.62261 104.86630 423.09865 C
104.86630 386.69754 L
104.86630 384.17357 106.92028 382.11959 109.44425 382.11959 C
@c
F

@rax %Note: Object
78.15061 434.49279 125.66041 480.04980 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
82.72743 434.49279 m
121.08161 434.49279 L
123.60643 434.49279 125.66041 436.54677 125.66041 439.07074 C
125.66041 475.47156 L
125.66041 477.99581 123.60643 480.04980 121.08161 480.04980 C
82.72743 480.04980 L
80.20460 480.04980 78.15061 477.99581 78.15061 475.47156 C
78.15061 439.07074 L
78.15061 436.54677 80.20460 434.49279 82.72743 434.49279 C
@c
F

@rax %Note: Object
64.64523 486.87846 112.15616 532.71865 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
112.15616 491.45556 m
112.15616 528.14069 L
112.15616 530.66466 110.10217 532.71865 107.57820 532.71865 C
69.22318 532.71865 L
66.69921 532.71865 64.64523 530.66466 64.64523 528.14069 C
64.64523 491.45556 L
64.64523 488.93159 66.69921 486.87846 69.22318 486.87846 C
107.57820 486.87846 L
110.10217 486.87846 112.15616 488.93159 112.15616 491.45556 C
@c
F

@rax %Note: Object
-16.67480 539.27688 30.83528 585.39997 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-12.09770 539.27688 m
26.25619 539.27688 L
28.78129 539.27688 30.83528 541.32973 30.83528 543.85398 C
30.83528 580.82173 L
30.83528 583.34598 28.78129 585.39997 26.25619 585.39997 C
-12.09770 585.39997 L
-14.62082 585.39997 -16.67480 583.34598 -16.67480 580.82173 C
-16.67480 543.85398 L
-16.67480 541.32973 -14.62082 539.27688 -12.09770 539.27688 C
@c
F

@rax %Note: Object
-16.67480 591.45165 34.74142 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-12.09770 591.45165 m
30.16318 591.45165 L
32.68715 591.45165 34.74142 593.50564 34.74142 596.02961 C
34.74142 612.74976 L
34.74142 615.27373 32.68715 617.32772 30.16318 617.32772 C
-12.09770 617.32772 L
-14.62082 617.32772 -16.67480 615.27373 -16.67480 612.74976 C
-16.67480 596.02961 L
-16.67480 593.50564 -14.62082 591.45165 -12.09770 591.45165 C
@c
F

@rax %Note: Object
41.32715 591.45165 92.74309 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
45.90510 591.45165 m
88.16513 591.45165 L
90.68910 591.45165 92.74309 593.50564 92.74309 596.02961 C
92.74309 612.74976 L
92.74309 615.27373 90.68910 617.32772 88.16513 617.32772 C
45.90510 617.32772 L
43.38113 617.32772 41.32715 615.27373 41.32715 612.74976 C
41.32715 596.02961 L
41.32715 593.50564 43.38113 591.45165 45.90510 591.45165 C
@c
F

@rax %Note: Object
98.97676 591.45165 150.39269 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
103.55357 591.45165 m
145.81474 591.45165 L
148.33871 591.45165 150.39269 593.50564 150.39269 596.02961 C
150.39269 612.74976 L
150.39269 615.27373 148.33871 617.32772 145.81474 617.32772 C
103.55357 617.32772 L
101.03074 617.32772 98.97676 615.27373 98.97676 612.74976 C
98.97676 596.02961 L
98.97676 593.50564 101.03074 591.45165 103.55357 591.45165 C
@c
F

@rax %Note: Object
213.37228 591.45165 264.78907 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
217.95024 591.45165 m
260.21112 591.45165 L
262.73509 591.45165 264.78907 593.50564 264.78907 596.02961 C
264.78907 612.74976 L
264.78907 615.27373 262.73509 617.32772 260.21112 617.32772 C
217.95024 617.32772 L
215.42627 617.32772 213.37228 615.27373 213.37228 612.74976 C
213.37228 596.02961 L
213.37228 593.50564 215.42627 591.45165 217.95024 591.45165 C
@c
F

@rax %Note: Object
156.31654 591.45165 207.73247 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
160.89335 591.45165 m
203.15452 591.45165 L
205.67849 591.45165 207.73247 593.50564 207.73247 596.02961 C
207.73247 612.74976 L
207.73247 615.27373 205.67849 617.32772 203.15452 617.32772 C
160.89335 617.32772 L
158.37052 617.32772 156.31654 615.27373 156.31654 612.74976 C
156.31654 596.02961 L
156.31654 593.50564 158.37052 591.45165 160.89335 591.45165 C
@c
F

@rax %Note: Object
271.51682 591.45165 322.93361 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
276.09477 591.45165 m
318.35565 591.45165 L
320.87962 591.45165 322.93361 593.50564 322.93361 596.02961 C
322.93361 612.74976 L
322.93361 615.27373 320.87962 617.32772 318.35565 617.32772 C
276.09477 617.32772 L
273.57080 617.32772 271.51682 615.27373 271.51682 612.74976 C
271.51682 596.02961 L
271.51682 593.50564 273.57080 591.45165 276.09477 591.45165 C
@c
F

@rax %Note: Object
329.17209 591.45165 380.58888 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
333.75005 591.45165 m
376.01093 591.45165 L
378.53490 591.45165 380.58888 593.50564 380.58888 596.02961 C
380.58888 612.74976 L
380.58888 615.27373 378.53490 617.32772 376.01093 617.32772 C
333.75005 617.32772 L
331.22608 617.32772 329.17209 615.27373 329.17209 612.74976 C
329.17209 596.02961 L
329.17209 593.50564 331.22608 591.45165 333.75005 591.45165 C
@c
F

@rax %Note: Object
386.04161 591.45165 437.74157 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
389.76860 591.45165 m
432.31351 591.45165 L
435.50844 591.45165 437.74157 593.33471 437.74157 596.02961 C
437.74157 612.74976 L
437.74157 615.27373 435.68759 617.32772 433.16362 617.32772 C
390.61956 617.32772 L
388.09559 617.32772 386.04161 615.27373 386.04161 612.74976 C
386.04161 596.02961 L
386.04161 593.49373 388.08142 591.45165 389.76860 591.45165 C
@c
F

@rax %Note: Object
443.31364 591.45165 495.01247 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
447.89046 591.45165 m
490.43565 591.45165 L
492.95849 591.45165 495.01247 593.50564 495.01247 596.02961 C
495.01247 612.74976 L
495.01247 615.27373 492.95849 617.32772 490.43565 617.32772 C
447.89046 617.32772 L
445.36762 617.32772 443.31364 615.27373 443.31364 612.74976 C
443.31364 596.02961 L
443.31364 593.50564 445.36762 591.45165 447.89046 591.45165 C
@c
F

@rax %Note: Object
500.98847 591.45165 552.68844 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
505.56643 591.45165 m
548.11049 591.45165 L
550.63446 591.45165 552.68844 593.50564 552.68844 596.02961 C
552.68844 612.74976 L
552.68844 615.27373 550.63446 617.32772 548.11049 617.32772 C
505.56643 617.32772 L
503.04246 617.32772 500.98847 615.27373 500.98847 612.74976 C
500.98847 596.02961 L
500.98847 593.50564 503.04246 591.45165 505.56643 591.45165 C
@c
F

@rax %Note: Object
558.41811 591.45165 610.11723 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
562.99521 591.45165 m
605.54013 591.45165 L
608.06296 591.45165 610.11723 593.50564 610.11723 596.02961 C
610.11723 612.74976 L
610.11723 615.27373 608.06296 617.32772 605.54013 617.32772 C
562.99521 617.32772 L
560.47209 617.32772 558.41811 615.27373 558.41811 612.74976 C
558.41811 596.02961 L
558.41811 593.50564 560.47209 591.45165 562.99521 591.45165 C
@c
F

@rax %Note: Object
616.37131 591.45165 668.07014 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
620.94813 591.45165 m
663.49219 591.45165 L
666.01616 591.45165 668.07014 593.50564 668.07014 596.02961 C
668.07014 612.74976 L
668.07014 615.27373 666.01616 617.32772 663.49219 617.32772 C
620.94813 617.32772 L
618.42529 617.32772 616.37131 615.27373 616.37131 612.74976 C
616.37131 596.02961 L
616.37131 593.50564 618.42529 591.45165 620.94813 591.45165 C
@c
F

@rax %Note: Object
673.88485 591.45165 725.58397 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
678.46195 591.45165 m
721.00602 591.45165 L
723.52998 591.45165 725.58397 593.50564 725.58397 596.02961 C
725.58397 612.74976 L
725.58397 615.27373 723.52998 617.32772 721.00602 617.32772 C
678.46195 617.32772 L
675.93883 617.32772 673.88485 615.27373 673.88485 612.74976 C
673.88485 596.02961 L
673.88485 593.50564 675.93883 591.45165 678.46195 591.45165 C
@c
F

@rax %Note: Object
731.57924 591.45165 757.14633 617.32772 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
752.56838 617.32772 m
736.15720 617.32772 L
733.63238 617.32772 731.57924 615.27373 731.57924 612.74976 C
731.57924 596.02961 L
731.57924 593.50564 733.63238 591.45165 736.15720 591.45165 C
752.56838 591.45165 L
755.09235 591.45165 757.14633 593.50564 757.14633 596.02961 C
757.14633 612.74976 L
757.14633 615.27373 755.09235 617.32772 752.56838 617.32772 C
@c
F

@rax %Note: Object
37.47175 539.27688 84.98183 585.39997 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
42.04970 539.27688 m
80.40387 539.27688 L
82.92784 539.27688 84.98183 541.32973 84.98183 543.85398 C
84.98183 580.82173 L
84.98183 583.34598 82.92784 585.39997 80.40387 585.39997 C
42.04970 585.39997 L
39.52573 585.39997 37.47175 583.34598 37.47175 580.82173 C
37.47175 543.85398 L
37.47175 541.32973 39.52573 539.27688 42.04970 539.27688 C
@c
F

@rax %Note: Object
91.41506 539.27688 138.92485 585.39997 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
91.41506 543.85398 m
91.41506 541.33002 93.46904 539.27688 95.99187 539.27688 C
134.34690 539.27688 L
136.87087 539.27688 138.92485 541.33002 138.92485 543.85398 C
138.92485 580.82202 L
138.92485 583.34598 136.87087 585.39997 134.34690 585.39997 C
95.99187 585.39997 L
93.46904 585.39997 91.41506 583.34598 91.41506 580.82202 C
91.41506 543.85398 L
@c
F

@rax %Note: Object
145.61405 539.27688 193.12413 585.39997 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
193.12413 543.85398 m
193.12413 580.82202 L
193.12413 583.34598 191.06986 585.39997 188.54589 585.39997 C
150.19087 585.39997 L
147.66803 585.39997 145.61405 583.34598 145.61405 580.82202 C
145.61405 543.85398 L
145.61405 541.33002 147.66803 539.27688 150.19087 539.27688 C
188.54589 539.27688 L
191.06986 539.27688 193.12413 541.33002 193.12413 543.85398 C
@c
F

@rax %Note: Object
199.15597 539.27688 246.66690 585.39997 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
246.66690 543.85398 m
246.66690 580.82202 L
246.66690 583.34598 244.61291 585.39997 242.08894 585.39997 C
203.73392 585.39997 L
201.20995 585.39997 199.15597 583.34598 199.15597 580.82202 C
199.15597 543.85398 L
199.15597 541.33002 201.20995 539.27688 203.73392 539.27688 C
242.08894 539.27688 L
244.61291 539.27688 246.66690 541.33002 246.66690 543.85398 C
@c
F

@rax %Note: Object
252.91757 539.27688 300.42765 585.39997 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
295.84970 585.39997 m
257.49553 585.39997 L
254.97156 585.39997 252.91757 583.34598 252.91757 580.82202 C
252.91757 543.85398 L
252.91757 541.33002 254.97156 539.27688 257.49553 539.27688 C
295.84970 539.27688 L
298.37367 539.27688 300.42765 541.33002 300.42765 543.85398 C
300.42765 580.82202 L
300.42765 583.34598 298.37367 585.39997 295.84970 585.39997 C
@c
F

@rax %Note: Object
306.94479 539.27688 354.45487 585.39997 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
349.87691 585.39997 m
311.52302 585.39997 L
308.99877 585.39997 306.94479 583.34598 306.94479 580.82202 C
306.94479 543.85398 L
306.94479 541.33002 308.99877 539.27688 311.52302 539.27688 C
349.87691 539.27688 L
352.40088 539.27688 354.45487 541.33002 354.45487 543.85398 C
354.45487 580.82202 L
354.45487 583.34598 352.40088 585.39997 349.87691 585.39997 C
@c
F

@rax %Note: Object
360.43030 539.27688 407.94038 585.39997 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
403.36243 585.39997 m
365.00825 585.39997 L
362.48428 585.39997 360.43030 583.34598 360.43030 580.82202 C
360.43030 543.85398 L
360.43030 541.33002 362.48428 539.27688 365.00825 539.27688 C
403.36243 539.27688 L
405.88639 539.27688 407.94038 541.33002 407.94038 543.85398 C
407.94038 580.82202 L
407.94038 583.34598 405.88639 585.39997 403.36243 585.39997 C
@c
F

@rax %Note: Object
414.10091 539.27688 461.32696 585.39997 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
456.74901 585.39997 m
418.67887 585.39997 L
416.15405 585.39997 414.10091 583.34598 414.10091 580.82202 C
414.10091 543.85398 L
414.10091 541.33002 416.15405 539.27688 418.67887 539.27688 C
456.74901 539.27688 L
459.27298 539.27688 461.32696 541.33002 461.32696 543.85398 C
461.32696 580.82202 L
461.32696 583.34598 459.27298 585.39997 456.74901 585.39997 C
@c
F

@rax %Note: Object
467.80696 539.27688 515.03414 585.39997 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
515.03414 543.85398 m
515.03414 580.82202 L
515.03414 583.34598 512.98016 585.39997 510.45619 585.39997 C
472.38605 585.39997 L
469.86123 585.39997 467.80696 583.34598 467.80696 580.82202 C
467.80696 543.85398 L
467.80696 541.33002 469.86123 539.27688 472.38605 539.27688 C
510.45619 539.27688 L
512.98016 539.27688 515.03414 541.33002 515.03414 543.85398 C
@c
F

@rax %Note: Object
521.64907 539.27688 569.15887 585.39997 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
564.58091 585.39997 m
526.22702 585.39997 L
523.70306 585.39997 521.64907 583.34598 521.64907 580.82202 C
521.64907 543.85398 L
521.64907 541.33002 523.70306 539.27688 526.22702 539.27688 C
564.58091 539.27688 L
567.10488 539.27688 569.15887 541.33002 569.15887 543.85398 C
569.15887 580.82202 L
569.15887 583.34598 567.10488 585.39997 564.58091 585.39997 C
@c
F

@rax %Note: Object
575.46652 539.27688 622.97631 585.39997 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
618.39836 585.39997 m
580.04447 585.39997 L
577.52050 585.39997 575.46652 583.34598 575.46652 580.82202 C
575.46652 543.85398 L
575.46652 541.33002 577.52050 539.27688 580.04447 539.27688 C
618.39836 539.27688 L
620.92233 539.27688 622.97631 541.33002 622.97631 543.85398 C
622.97631 580.82202 L
622.97631 583.34598 620.92233 585.39997 618.39836 585.39997 C
@c
F

@rax %Note: Object
629.02063 539.27688 676.24753 585.39969 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
629.02063 580.82173 m
629.02063 543.85370 L
629.02063 541.32973 631.07461 539.27688 633.59745 539.27688 C
671.66844 539.27688 L
674.19354 539.27688 676.24753 541.32973 676.24753 543.85370 C
676.24753 580.82173 L
676.24753 583.34570 674.19354 585.39969 671.66844 585.39969 C
633.59745 585.39969 L
631.07461 585.39969 629.02063 583.34570 629.02063 580.82173 C
@c
F

@rax %Note: Object
682.87521 539.27688 757.14633 585.39997 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
752.56838 585.39997 m
687.45317 585.39997 L
684.92835 585.39997 682.87521 583.34598 682.87521 580.82202 C
682.87521 543.85398 L
682.87521 541.33002 684.92835 539.27688 687.45317 539.27688 C
752.56838 539.27688 L
755.09235 539.27688 757.14633 541.33002 757.14633 543.85398 C
757.14633 580.82202 L
757.14633 583.34598 755.09235 585.39997 752.56838 585.39997 C
@c
F

@rax %Note: Object
118.49017 486.87817 166.00025 532.71808 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
118.49017 528.14013 m
118.49017 491.45528 L
118.49017 488.93131 120.54416 486.87817 123.06813 486.87817 C
161.42315 486.87817 L
163.94627 486.87817 166.00025 488.93131 166.00025 491.45528 C
166.00025 528.14013 L
166.00025 530.66409 163.94627 532.71808 161.42315 532.71808 C
123.06813 532.71808 L
120.54416 532.71808 118.49017 530.66409 118.49017 528.14013 C
@c
F

@rax %Note: Object
172.20671 486.87846 219.71679 532.71865 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
219.71679 491.45556 m
219.71679 528.14069 L
219.71679 530.66466 217.66280 532.71865 215.13883 532.71865 C
176.78381 532.71865 L
174.26069 532.71865 172.20671 530.66466 172.20671 528.14069 C
172.20671 491.45556 L
172.20671 488.93159 174.26069 486.87846 176.78381 486.87846 C
215.13883 486.87846 L
217.66280 486.87846 219.71679 488.93159 219.71679 491.45556 C
@c
F

@rax %Note: Object
225.97228 486.87846 273.48236 532.71865 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
273.48236 491.45556 m
273.48236 528.14069 L
273.48236 530.66466 271.42838 532.71865 268.90526 532.71865 C
230.55052 532.71865 L
228.02627 532.71865 225.97228 530.66466 225.97228 528.14069 C
225.97228 491.45556 L
225.97228 488.93159 228.02627 486.87846 230.55052 486.87846 C
268.90526 486.87846 L
271.42838 486.87846 273.48236 488.93159 273.48236 491.45556 C
@c
F

@rax %Note: Object
279.89631 486.87817 327.40639 532.71808 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
279.89631 528.14013 m
279.89631 491.45528 L
279.89631 488.93131 281.95030 486.87817 284.47427 486.87817 C
322.82929 486.87817 L
325.35241 486.87817 327.40639 488.93131 327.40639 491.45528 C
327.40639 528.14013 L
327.40639 530.66409 325.35241 532.71808 322.82929 532.71808 C
284.47427 532.71808 L
281.95030 532.71808 279.89631 530.66409 279.89631 528.14013 C
@c
F

@rax %Note: Object
333.64630 486.87817 381.15638 532.71808 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
333.64630 528.14013 m
333.64630 491.45528 L
333.64630 488.93131 335.70028 486.87817 338.22340 486.87817 C
376.57843 486.87817 L
379.10239 486.87817 381.15638 488.93131 381.15638 491.45528 C
381.15638 528.14013 L
381.15638 530.66409 379.10239 532.71808 376.57843 532.71808 C
338.22340 532.71808 L
335.70028 532.71808 333.64630 530.66409 333.64630 528.14013 C
@c
F

@rax %Note: Object
387.47055 486.87817 434.98063 532.71808 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
387.47055 528.14013 m
387.47055 491.45528 L
387.47055 488.93131 389.52482 486.87817 392.04765 486.87817 C
430.40268 486.87817 L
432.92665 486.87817 434.98063 488.93131 434.98063 491.45528 C
434.98063 528.14013 L
434.98063 530.66409 432.92665 532.71808 430.40268 532.71808 C
392.04765 532.71808 L
389.52482 532.71808 387.47055 530.66409 387.47055 528.14013 C
@c
F

@rax %Note: Object
440.83984 486.87817 488.34992 532.71808 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
440.83984 528.14013 m
440.83984 491.45528 L
440.83984 488.93131 442.89383 486.87817 445.41780 486.87817 C
483.77169 486.87817 L
486.29565 486.87817 488.34992 488.93131 488.34992 491.45528 C
488.34992 528.14013 L
488.34992 530.66409 486.29565 532.71808 483.77169 532.71808 C
445.41780 532.71808 L
442.89383 532.71808 440.83984 530.66409 440.83984 528.14013 C
@c
F

@rax %Note: Object
494.54362 486.87846 542.05455 532.71865 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
542.05455 491.45556 m
542.05455 528.14069 L
542.05455 530.66466 540.00057 532.71865 537.47660 532.71865 C
499.12157 532.71865 L
496.59761 532.71865 494.54362 530.66466 494.54362 528.14069 C
494.54362 491.45556 L
494.54362 488.93159 496.59761 486.87846 499.12157 486.87846 C
537.47660 486.87846 L
540.00057 486.87846 542.05455 488.93159 542.05455 491.45556 C
@c
F

@rax %Note: Object
548.19609 486.87817 595.70731 532.71808 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
548.19609 528.14013 m
548.19609 491.45528 L
548.19609 488.93131 550.25008 486.87817 552.77433 486.87817 C
591.12907 486.87817 L
593.65332 486.87817 595.70731 488.93131 595.70731 491.45528 C
595.70731 528.14013 L
595.70731 530.66409 593.65332 532.71808 591.12907 532.71808 C
552.77433 532.71808 L
550.25008 532.71808 548.19609 530.66409 548.19609 528.14013 C
@c
F

@rax %Note: Object
601.68841 486.87817 649.19849 532.71808 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
601.68841 528.14013 m
601.68841 491.45528 L
601.68841 488.93131 603.74239 486.87817 606.26636 486.87817 C
644.62139 486.87817 L
647.14450 486.87817 649.19849 488.93131 649.19849 491.45528 C
649.19849 528.14013 L
649.19849 530.66409 647.14450 532.71808 644.62139 532.71808 C
606.26636 532.71808 L
603.74239 532.71808 601.68841 530.66409 601.68841 528.14013 C
@c
F

@rax %Note: Object
655.87861 486.87817 703.38841 532.71836 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
698.81159 532.71836 m
660.45742 532.71836 L
657.93260 532.71836 655.87861 530.66438 655.87861 528.14041 C
655.87861 491.45528 L
655.87861 488.93131 657.93260 486.87817 660.45742 486.87817 C
698.81159 486.87817 L
701.33443 486.87817 703.38841 488.93131 703.38841 491.45528 C
703.38841 528.14041 L
703.38841 530.66438 701.33443 532.71836 698.81159 532.71836 C
@c
F

@rax %Note: Object
709.06904 486.87846 756.86202 532.71836 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
752.28520 486.87846 m
754.80803 486.87846 756.86202 488.93131 756.86202 491.45528 C
756.86202 528.14041 L
756.86202 530.66438 754.80803 532.71836 752.28520 532.71836 C
713.64699 532.71836 L
711.12302 532.71836 709.06904 530.66438 709.06904 528.14041 C
709.06904 491.45528 L
709.06904 488.93131 711.12302 486.87846 713.64699 486.87846 C
752.28520 486.87846 L
@c
F

@rax %Note: Object
131.75660 434.49279 179.26668 480.04980 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
179.26668 439.07074 m
179.26668 475.47071 L
179.26668 477.99581 177.21269 480.04980 174.68957 480.04980 C
136.33455 480.04980 L
133.81058 480.04980 131.75660 477.99581 131.75660 475.47071 C
131.75660 439.07074 L
131.75660 436.54677 133.81058 434.49279 136.33455 434.49279 C
174.68957 434.49279 L
177.21269 434.49279 179.26668 436.54677 179.26668 439.07074 C
@c
F

@rax %Note: Object
185.39348 434.49279 232.90356 480.04980 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
189.97172 434.49279 m
228.32561 434.49279 L
230.84957 434.49279 232.90356 436.54677 232.90356 439.07074 C
232.90356 475.47156 L
232.90356 477.99581 230.84957 480.04980 228.32561 480.04980 C
189.97172 480.04980 L
187.44746 480.04980 185.39348 477.99581 185.39348 475.47156 C
185.39348 439.07074 L
185.39348 436.54677 187.44746 434.49279 189.97172 434.49279 C
@c
F

@rax %Note: Object
239.58113 434.49279 287.09121 480.04980 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
244.15824 434.49279 m
282.51213 434.49279 L
285.03723 434.49279 287.09121 436.54677 287.09121 439.07074 C
287.09121 475.47156 L
287.09121 477.99581 285.03723 480.04980 282.51213 480.04980 C
244.15824 480.04980 L
241.63512 480.04980 239.58113 477.99581 239.58113 475.47156 C
239.58113 439.07074 L
239.58113 436.54677 241.63512 434.49279 244.15824 434.49279 C
@c
F

@rax %Note: Object
293.07969 434.49279 340.59090 480.04980 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
340.59090 439.07074 m
340.59090 475.47071 L
340.59090 477.99581 338.53691 480.04980 336.01266 480.04980 C
297.65792 480.04980 L
295.13367 480.04980 293.07969 477.99581 293.07969 475.47071 C
293.07969 439.07074 L
293.07969 436.54677 295.13367 434.49279 297.65792 434.49279 C
336.01266 434.49279 L
338.53691 434.49279 340.59090 436.54677 340.59090 439.07074 C
@c
F

@rax %Note: Object
346.39909 434.49279 393.90917 480.04980 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
393.90917 439.07074 m
393.90917 475.47071 L
393.90917 477.99581 391.85518 480.04980 389.33121 480.04980 C
350.97704 480.04980 L
348.45307 480.04980 346.39909 477.99581 346.39909 475.47071 C
346.39909 439.07074 L
346.39909 436.54677 348.45307 434.49279 350.97704 434.49279 C
389.33121 434.49279 L
391.85518 434.49279 393.90917 436.54677 393.90917 439.07074 C
@c
F

@rax %Note: Object
400.20576 434.49279 447.71584 480.04980 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
447.71584 439.07074 m
447.71584 475.47071 L
447.71584 477.99581 445.66186 480.04980 443.13789 480.04980 C
404.78372 480.04980 L
402.25975 480.04980 400.20576 477.99581 400.20576 475.47071 C
400.20576 439.07074 L
400.20576 436.54677 402.25975 434.49279 404.78372 434.49279 C
443.13789 434.49279 L
445.66186 434.49279 447.71584 436.54677 447.71584 439.07074 C
@c
F

@rax %Note: Object
453.62778 434.49279 501.13757 480.04980 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
501.13757 439.07074 m
501.13757 475.47071 L
501.13757 477.99581 499.08359 480.04980 496.55962 480.04980 C
458.20460 480.04980 L
455.68176 480.04980 453.62778 477.99581 453.62778 475.47071 C
453.62778 439.07074 L
453.62778 436.54677 455.68176 434.49279 458.20460 434.49279 C
496.55962 434.49279 L
499.08359 434.49279 501.13757 436.54677 501.13757 439.07074 C
@c
F

@rax %Note: Object
507.55181 434.49279 555.06274 480.04980 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
512.12976 434.49279 m
550.48365 434.49279 L
553.00876 434.49279 555.06274 436.54677 555.06274 439.07074 C
555.06274 475.47156 L
555.06274 477.99581 553.00876 480.04980 550.48365 480.04980 C
512.12976 480.04980 L
509.60580 480.04980 507.55181 477.99581 507.55181 475.47156 C
507.55181 439.07074 L
507.55181 436.54677 509.60580 434.49279 512.12976 434.49279 C
@c
F

@rax %Note: Object
561.46450 434.49279 608.97458 480.04980 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
608.97458 439.07074 m
608.97458 475.47071 L
608.97458 477.99581 606.92060 480.04980 604.39748 480.04980 C
566.04246 480.04980 L
563.51849 480.04980 561.46450 477.99581 561.46450 475.47071 C
561.46450 439.07074 L
561.46450 436.54677 563.51849 434.49279 566.04246 434.49279 C
604.39748 434.49279 L
606.92060 434.49279 608.97458 436.54677 608.97458 439.07074 C
@c
F

@rax %Note: Object
615.19691 434.49279 662.70699 480.04980 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
662.70699 439.07074 m
662.70699 475.47071 L
662.70699 477.99581 660.65301 480.04980 658.12904 480.04980 C
619.77402 480.04980 L
617.25090 480.04980 615.19691 477.99581 615.19691 475.47071 C
615.19691 439.07074 L
615.19691 436.54677 617.25090 434.49279 619.77402 434.49279 C
658.12904 434.49279 L
660.65301 434.49279 662.70699 436.54677 662.70699 439.07074 C
@c
F

@rax %Note: Object
668.84258 434.49222 756.86258 480.04923 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
668.84258 475.47128 m
668.84258 439.07131 L
668.84258 436.54620 670.89657 434.49222 673.42082 434.49222 C
752.28463 434.49222 L
754.80860 434.49222 756.86258 436.54620 756.86258 439.07131 C
756.86258 475.47128 L
756.86258 477.99524 754.80860 480.04923 752.28463 480.04923 C
673.42082 480.04923 L
670.89657 480.04923 668.84258 477.99524 668.84258 475.47128 C
@c
F

@rax %Note: Object
158.73109 382.11931 206.24088 427.67518 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
201.66293 427.67518 m
163.30904 427.67518 L
160.78507 427.67518 158.73109 425.62233 158.73109 423.09836 C
158.73109 386.69726 L
158.73109 384.17329 160.78507 382.11931 163.30904 382.11931 C
201.66293 382.11931 L
204.18690 382.11931 206.24088 384.17329 206.24088 386.69726 C
206.24088 423.09836 L
206.24088 425.62233 204.18690 427.67518 201.66293 427.67518 C
@c
F

@rax %Note: Object
212.37222 382.11959 259.88230 427.67546 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
216.95017 382.11959 m
255.30406 382.11959 L
257.82831 382.11959 259.88230 384.17357 259.88230 386.69754 C
259.88230 423.09865 L
259.88230 425.62261 257.82831 427.67546 255.30406 427.67546 C
216.95017 427.67546 L
214.42620 427.67546 212.37222 425.62261 212.37222 423.09865 C
212.37222 386.69754 L
212.37222 384.17357 214.42620 382.11959 216.95017 382.11959 C
@c
F

@rax %Note: Object
266.24239 382.11959 313.75219 427.67546 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
270.82035 382.11959 m
309.17424 382.11959 L
311.69820 382.11959 313.75219 384.17357 313.75219 386.69754 C
313.75219 423.09865 L
313.75219 425.62261 311.69820 427.67546 309.17424 427.67546 C
270.82035 427.67546 L
268.29638 427.67546 266.24239 425.62261 266.24239 423.09865 C
266.24239 386.69754 L
266.24239 384.17357 268.29638 382.11959 270.82035 382.11959 C
@c
F

@rax %Note: Object
320.13468 382.11959 367.64476 427.67546 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
324.71291 382.11959 m
363.06680 382.11959 L
365.59077 382.11959 367.64476 384.17357 367.64476 386.69754 C
367.64476 423.09865 L
367.64476 425.62261 365.59077 427.67546 363.06680 427.67546 C
324.71291 427.67546 L
322.18866 427.67546 320.13468 425.62261 320.13468 423.09865 C
320.13468 386.69754 L
320.13468 384.17357 322.18866 382.11959 324.71291 382.11959 C
@c
F

@rax %Note: Object
373.49433 382.11959 421.00526 427.67546 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
378.07228 382.11959 m
416.42617 382.11959 L
418.95128 382.11959 421.00526 384.17357 421.00526 386.69754 C
421.00526 423.09865 L
421.00526 425.62261 418.95128 427.67546 416.42617 427.67546 C
378.07228 427.67546 L
375.54831 427.67546 373.49433 425.62261 373.49433 423.09865 C
373.49433 386.69754 L
373.49433 384.17357 375.54831 382.11959 378.07228 382.11959 C
@c
F

@rax %Note: Object
427.04702 382.11959 474.55710 427.67546 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
431.62498 382.11959 m
469.97887 382.11959 L
472.50312 382.11959 474.55710 384.17357 474.55710 386.69754 C
474.55710 423.09865 L
474.55710 425.62261 472.50312 427.67546 469.97887 427.67546 C
431.62498 427.67546 L
429.10101 427.67546 427.04702 425.62261 427.04702 423.09865 C
427.04702 386.69754 L
427.04702 384.17357 429.10101 382.11959 431.62498 382.11959 C
@c
F

@rax %Note: Object
480.67087 382.11959 528.18094 427.67546 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
485.24797 382.11959 m
523.60186 382.11959 L
526.12696 382.11959 528.18094 384.17357 528.18094 386.69754 C
528.18094 423.09865 L
528.18094 425.62261 526.12696 427.67546 523.60186 427.67546 C
485.24797 427.67546 L
482.72485 427.67546 480.67087 425.62261 480.67087 423.09865 C
480.67087 386.69754 L
480.67087 384.17357 482.72485 382.11959 485.24797 382.11959 C
@c
F

@rax %Note: Object
534.48831 382.11959 581.99839 427.67546 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
539.06627 382.11959 m
577.42044 382.11959 L
579.94441 382.11959 581.99839 384.17357 581.99839 386.69754 C
581.99839 423.09865 L
581.99839 425.62261 579.94441 427.67546 577.42044 427.67546 C
539.06627 427.67546 L
536.54230 427.67546 534.48831 425.62261 534.48831 423.09865 C
534.48831 386.69754 L
534.48831 384.17357 536.54230 382.11959 539.06627 382.11959 C
@c
F

@rax %Note: Object
588.12123 382.11959 635.63131 427.67546 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
592.69833 382.11959 m
631.05222 382.11959 L
633.57732 382.11959 635.63131 384.17357 635.63131 386.69754 C
635.63131 423.09865 L
635.63131 425.62261 633.57732 427.67546 631.05222 427.67546 C
592.69833 427.67546 L
590.17521 427.67546 588.12123 425.62261 588.12123 423.09865 C
588.12123 386.69754 L
588.12123 384.17357 590.17521 382.11959 592.69833 382.11959 C
@c
F

@rax %Note: Object
641.70822 382.11959 756.86202 427.67546 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
646.28617 382.11959 m
752.28520 382.11959 L
754.80803 382.11959 756.86202 384.17357 756.86202 386.69754 C
756.86202 423.09865 L
756.86202 425.62261 754.80803 427.67546 752.28520 427.67546 C
646.28617 427.67546 L
643.76220 427.67546 641.70822 425.62261 641.70822 423.09865 C
641.70822 386.69754 L
641.70822 384.17357 643.76220 382.11959 646.28617 382.11959 C
@c
F

@rax %Note: Object
91.30139 330.31247 138.81231 375.86948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
134.23436 375.86948 m
95.88019 375.86948 L
93.35537 375.86948 91.30139 373.81550 91.30139 371.29153 C
91.30139 334.89071 L
91.30139 332.36646 93.35537 330.31247 95.88019 330.31247 C
134.23436 330.31247 L
136.75833 330.31247 138.81231 332.36646 138.81231 334.89071 C
138.81231 371.29153 L
138.81231 373.81550 136.75833 375.86948 134.23436 375.86948 C
@c
F

@rax %Note: Object
548.11020 330.31247 595.90318 375.86948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
591.32608 375.86948 m
552.68702 375.86948 L
550.16419 375.86948 548.11020 373.81550 548.11020 371.29153 C
548.11020 334.89071 L
548.11020 332.36646 550.16419 330.31247 552.68702 330.31247 C
591.32608 330.31247 L
593.84920 330.31247 595.90318 332.36646 595.90318 334.89071 C
595.90318 371.29153 L
595.90318 373.81550 593.84920 375.86948 591.32608 375.86948 C
@c
F

@rax %Note: Object
601.84630 330.31247 649.35723 375.86948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
644.77928 375.86948 m
606.42539 375.86948 L
603.90028 375.86948 601.84630 373.81550 601.84630 371.29153 C
601.84630 334.89071 L
601.84630 332.36646 603.90028 330.31247 606.42539 330.31247 C
644.77928 330.31247 L
647.30324 330.31247 649.35723 332.36646 649.35723 334.89071 C
649.35723 371.29153 L
649.35723 373.81550 647.30324 375.86948 644.77928 375.86948 C
@c
F

@rax %Note: Object
655.65298 330.31247 703.44595 375.86948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
698.86913 375.86948 m
660.23121 375.86948 L
657.70696 375.86948 655.65298 373.81550 655.65298 371.29153 C
655.65298 334.89071 L
655.65298 332.36646 657.70696 330.31247 660.23121 330.31247 C
698.86913 330.31247 L
701.39197 330.31247 703.44595 332.36646 703.44595 334.89071 C
703.44595 371.29153 L
703.44595 373.81550 701.39197 375.86948 698.86913 375.86948 C
@c
F

@rax %Note: Object
709.63540 330.31247 757.14633 375.86948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
752.56838 375.86948 m
714.21420 375.86948 L
711.68939 375.86948 709.63540 373.81550 709.63540 371.29153 C
709.63540 334.89071 L
709.63540 332.36646 711.68939 330.31247 714.21420 330.31247 C
752.56838 330.31247 L
755.09235 330.31247 757.14633 332.36646 757.14633 334.89071 C
757.14633 371.29153 L
757.14633 373.81550 755.09235 375.86948 752.56838 375.86948 C
@c
F

@rax %Note: Object
145.14718 330.31247 206.19043 375.86948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
201.61219 375.86948 m
149.72542 375.86948 L
147.20117 375.86948 145.14718 373.81550 145.14718 371.29153 C
145.14718 334.89071 L
145.14718 332.36646 147.20117 330.31247 149.72542 330.31247 C
201.61219 330.31247 L
204.13616 330.31247 206.19043 332.36646 206.19043 334.89071 C
206.19043 371.29153 L
206.19043 373.81550 204.13616 375.86948 201.61219 375.86948 C
@c
F

@rax %Note: Object
481.23723 330.31247 542.28019 375.86948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
537.70195 375.86948 m
485.81518 375.86948 L
483.29121 375.86948 481.23723 373.81550 481.23723 371.29153 C
481.23723 334.89071 L
481.23723 332.36646 483.29121 330.31247 485.81518 330.31247 C
537.70195 330.31247 L
540.22620 330.31247 542.28019 332.36646 542.28019 334.89071 C
542.28019 371.29153 L
542.28019 373.81550 540.22620 375.86948 537.70195 375.86948 C
@c
F

@rax %Note: Object
212.47143 330.31247 475.22353 375.86948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
470.64557 375.86948 m
217.04939 375.86948 L
214.52542 375.86948 212.47143 373.81550 212.47143 371.29153 C
212.47143 334.89071 L
212.47143 332.36646 214.52542 330.31247 217.04939 330.31247 C
470.64557 330.31247 L
473.16954 330.31247 475.22353 332.36646 475.22353 334.89071 C
475.22353 371.29153 L
475.22353 373.81550 473.16954 375.86948 470.64557 375.86948 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
