%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -175 151 685 752 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: Pro 13 2018 TouchBar Панель F...
%%CreationDate: Thu May 30 17:08:37 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
-174.55550 151.15181 684.37134 751.78460 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
679.15134 416.86072 m
679.15134 416.36580 678.75137 415.96554 678.25644 415.96554 C
650.95739 415.96554 L
650.46359 415.96554 650.06135 416.36580 650.06135 416.86072 C
650.06135 709.95770 L
650.06135 710.45178 650.46359 710.85260 650.95739 710.85260 C
678.25644 710.85260 L
678.75137 710.85260 679.15134 710.45178 679.15134 709.95770 C
679.15134 416.86072 L
@c
642.17055 630.88554 m
642.17055 628.14274 639.94649 625.91981 637.20340 625.91981 C
570.49852 625.91981 L
567.75543 625.91981 565.53137 628.14274 565.53137 630.88554 C
565.53137 668.50356 L
565.53137 671.24665 567.75543 673.46957 570.49852 673.46957 C
637.20340 673.46957 L
639.94649 673.46957 642.17055 671.24665 642.17055 668.50356 C
642.17055 630.88554 L
@c
642.08551 578.50668 m
642.08551 575.76359 639.86145 573.53981 637.11836 573.53981 C
597.74740 573.53981 L
595.00460 573.53981 592.78054 575.76359 592.78054 578.50668 C
592.78054 616.12356 L
592.78054 618.86665 595.00460 621.08957 597.74740 621.08957 C
637.11836 621.08957 L
639.86145 621.08957 642.08551 618.86665 642.08551 616.12356 C
642.08551 578.50668 L
@c
642.01748 526.26472 m
642.01748 523.52164 639.79455 521.29757 637.05033 521.29757 C
557.52860 521.29757 L
554.78636 521.29757 552.56258 523.52164 552.56258 526.26472 C
552.56258 563.59871 L
552.56258 566.34180 554.78636 568.56557 557.52860 568.56557 C
637.05033 568.56557 L
639.79455 568.56557 642.01748 566.34180 642.01748 563.59871 C
642.01748 526.26472 L
@c
641.77540 473.89380 m
641.77540 471.15156 639.55134 468.92778 636.80939 468.92778 C
530.55836 468.92778 L
527.81556 468.92778 525.59150 471.15156 525.59150 473.89380 C
525.59150 511.51181 L
525.59150 514.25461 527.81556 516.47754 530.55836 516.47754 C
636.80939 516.47754 L
639.55134 516.47754 641.77540 514.25461 641.77540 511.51181 C
641.77540 473.89380 L
@c
641.44857 421.11468 m
641.44857 418.37159 639.22450 416.14781 636.48142 416.14781 C
597.25049 416.14781 L
594.50655 416.14781 592.28334 418.37159 592.28334 421.11468 C
592.28334 459.45071 L
592.28334 462.19380 594.50655 464.41757 597.25049 464.41757 C
636.48142 464.41757 L
639.22450 464.41757 641.44857 462.19380 641.44857 459.45071 C
641.44857 421.11468 L
@c
587.37855 421.11468 m
587.37855 418.37159 585.15449 416.14781 582.41140 416.14781 C
543.17934 416.14781 L
540.43540 416.14781 538.21332 418.37159 538.21332 421.11468 C
538.21332 459.45071 L
538.21332 462.19380 540.43540 464.41757 543.17934 464.41757 C
582.41140 464.41757 L
585.15449 464.41757 587.37855 462.19380 587.37855 459.45071 C
587.37855 421.11468 L
@c
533.91146 421.47354 m
533.91146 418.73159 531.68740 416.50668 528.94460 416.50668 C
489.57335 416.50668 L
486.83055 416.50668 484.60649 418.73159 484.60649 421.47354 C
484.60649 459.09156 L
484.60649 461.83465 486.83055 464.05871 489.57335 464.05871 C
528.94460 464.05871 L
531.68740 464.05871 533.91146 461.83465 533.91146 459.09156 C
533.91146 421.47354 L
@c
480.03137 421.47354 m
480.03137 418.73159 477.80759 416.50668 475.06450 416.50668 C
435.97644 416.50668 L
433.23335 416.50668 431.00957 418.73159 431.00957 421.47354 C
431.00957 459.09156 L
431.00957 461.83465 433.23335 464.05871 435.97644 464.05871 C
475.06450 464.05871 L
477.80759 464.05871 480.03137 461.83465 480.03137 459.09156 C
480.03137 421.47354 L
@c
445.67150 174.98154 m
445.67150 169.89165 441.51052 165.75165 436.38038 165.75165 C
71.72050 165.75165 L
66.60057 165.75165 62.43052 169.89165 62.43052 174.98154 C
62.43052 394.91178 L
62.43052 400.00167 66.60057 404.14167 71.72050 404.14167 C
436.38038 404.14167 L
441.51052 404.14167 445.67150 400.00167 445.67150 394.91178 C
445.67150 174.98154 L
@c
28.13754 421.22976 m
28.13754 459.33676 L
28.13754 462.00954 30.32646 464.19761 33.00038 464.19761 C
86.86743 464.19761 L
89.54135 464.19761 91.72857 462.00954 91.72857 459.33676 C
91.72857 421.22976 L
91.72857 418.55556 89.54135 416.36778 86.86743 416.36778 C
33.00038 416.36778 L
30.32646 416.36778 28.13754 418.55556 28.13754 421.22976 C
@c
24.01257 421.47354 m
24.01257 418.73159 21.78935 416.50668 19.04655 416.50668 C
-20.60957 416.50668 L
-23.35266 416.50668 -25.57644 418.73159 -25.57644 421.47354 C
-25.57644 459.09156 L
-25.57644 461.83465 -23.35266 464.05871 -20.60957 464.05871 C
19.04655 464.05871 L
21.78935 464.05871 24.01257 461.83465 24.01257 459.09156 C
24.01257 421.47354 L
@c
-29.72665 421.47354 m
-29.72665 418.73159 -31.95043 416.50668 -34.69351 416.50668 C
-74.34765 416.50668 L
-77.09046 416.50668 -79.31452 418.73159 -79.31452 421.47354 C
-79.31452 459.09156 L
-79.31452 461.83465 -77.09046 464.05871 -74.34765 464.05871 C
-34.69351 464.05871 L
-31.95043 464.05871 -29.72665 461.83465 -29.72665 459.09156 C
-29.72665 421.47354 L
@c
-83.74847 420.91569 m
-83.74847 418.17260 -85.97254 415.94854 -88.71562 415.94854 C
-128.37855 415.94854 L
-131.12164 415.94854 -133.34542 418.17260 -133.34542 420.91569 C
-133.34542 459.65055 L
-133.34542 462.39279 -131.12164 464.61657 -128.37855 464.61657 C
-88.71562 464.61657 L
-85.97254 464.61657 -83.74847 462.39279 -83.74847 459.65055 C
-83.74847 420.91569 L
@c
-132.95452 668.50356 m
-132.95452 671.24665 -130.73159 673.46957 -127.98850 673.46957 C
-88.43046 673.46957 L
-85.68850 673.46957 -83.46444 671.24665 -83.46444 668.50356 C
-83.46444 630.88554 L
-83.46444 628.14274 -85.68850 625.91981 -88.43046 625.91981 C
-127.98850 625.91981 L
-130.73159 625.91981 -132.95452 628.14274 -132.95452 630.88554 C
-132.95452 668.50356 L
@c
561.71452 630.88554 m
561.71452 628.14274 559.49244 625.91981 556.74935 625.91981 C
516.81033 625.91981 L
514.06753 625.91981 511.84346 628.14274 511.84346 630.88554 C
511.84346 668.50356 L
511.84346 671.24665 514.06753 673.46957 516.81033 673.46957 C
556.74935 673.46957 L
559.49244 673.46957 561.71452 671.24665 561.71452 668.50356 C
561.71452 630.88554 L
@c
544.24148 573.53981 m
541.49839 573.53981 539.27433 575.76359 539.27433 578.50668 C
539.27433 616.12356 L
539.27433 618.86665 541.49839 621.08957 544.24148 621.08957 C
583.61357 621.08957 L
586.35638 621.08957 588.58044 618.86665 588.58044 616.12356 C
588.58044 578.50668 L
588.58044 575.76359 586.35638 573.53981 583.61357 573.53981 C
544.24148 573.53981 L
@c
503.33839 521.29757 m
500.59559 521.29757 498.37238 523.52164 498.37238 526.26472 C
498.37238 563.59871 L
498.37238 566.34180 500.59559 568.56557 503.33839 568.56557 C
542.71049 568.56557 L
545.45244 568.56557 547.67650 566.34180 547.67650 563.59871 C
547.67650 526.26472 L
547.67650 523.52164 545.45244 521.29757 542.71049 521.29757 C
503.33839 521.29757 L
@c
472.16636 511.51181 m
472.16636 514.25461 474.38957 516.47754 477.13238 516.47754 C
516.22044 516.47754 L
518.96438 516.47754 521.18759 514.25461 521.18759 511.51181 C
521.18759 473.89380 L
521.18759 471.15156 518.96438 468.92778 516.22044 468.92778 C
477.13238 468.92778 L
474.38957 468.92778 472.16636 471.15156 472.16636 473.89380 C
472.16636 511.51181 L
@c
449.49458 521.29757 m
446.75150 521.29757 444.52743 523.52164 444.52743 526.26472 C
444.52743 563.59871 L
444.52743 566.34180 446.75150 568.56557 449.49458 568.56557 C
489.14844 568.56557 L
491.89153 568.56557 494.11559 566.34180 494.11559 563.59871 C
494.11559 526.26472 L
494.11559 523.52164 491.89153 521.29757 489.14844 521.29757 C
449.49458 521.29757 L
@c
423.32145 468.92778 m
420.57950 468.92778 418.35543 471.15156 418.35543 473.89380 C
418.35543 511.51181 L
418.35543 514.25461 420.57950 516.47754 423.32145 516.47754 C
462.69354 516.47754 L
465.43550 516.47754 467.66041 514.25461 467.66041 511.51181 C
467.66041 473.89380 L
467.66041 471.15156 465.43550 468.92778 462.69354 468.92778 C
423.32145 468.92778 L
@c
363.48548 459.33676 m
363.48548 462.00954 365.67354 464.19761 368.34746 464.19761 C
421.86557 464.19761 L
424.53950 464.19761 426.72643 462.00954 426.72643 459.33676 C
426.72643 421.22976 L
426.72643 418.55556 424.53950 416.36778 421.86557 416.36778 C
368.34746 416.36778 L
365.67354 416.36778 363.48548 418.55556 363.48548 421.22976 C
363.48548 459.33676 L
@c
342.37247 521.29757 m
339.62939 521.29757 337.40532 523.52164 337.40532 526.26472 C
337.40532 563.59871 L
337.40532 566.34180 339.62939 568.56557 342.37247 568.56557 C
382.02746 568.56557 L
384.77055 568.56557 386.99433 566.34180 386.99433 563.59871 C
386.99433 526.26472 L
386.99433 523.52164 384.77055 521.29757 382.02746 521.29757 C
342.37247 521.29757 L
@c
355.38746 468.92778 m
315.73332 468.92778 L
312.99052 468.92778 310.76646 471.15156 310.76646 473.89380 C
310.76646 511.51181 L
310.76646 514.25461 312.99052 516.47754 315.73332 516.47754 C
355.38746 516.47754 L
358.13055 516.47754 360.35433 514.25461 360.35433 511.51181 C
360.35433 473.89380 L
360.35433 471.15156 358.13055 468.92778 355.38746 468.92778 C
@c
95.00457 459.09156 m
95.00457 461.83465 97.22750 464.05871 99.97058 464.05871 C
354.73436 464.05871 L
357.47745 464.05871 359.70151 461.83465 359.70151 459.09156 C
359.70151 421.47354 L
359.70151 418.73159 357.47745 416.50668 354.73436 416.50668 C
99.97058 416.50668 L
97.22750 416.50668 95.00457 418.73159 95.00457 421.47354 C
95.00457 459.09156 L
@c
73.59732 521.29757 m
70.85452 521.29757 68.63046 523.52164 68.63046 526.26472 C
68.63046 563.59871 L
68.63046 566.34180 70.85452 568.56557 73.59732 568.56557 C
113.53635 568.56557 L
116.27943 568.56557 118.50350 566.34180 118.50350 563.59871 C
118.50350 526.26472 L
118.50350 523.52164 116.27943 521.29757 113.53635 521.29757 C
73.59732 521.29757 L
@c
41.85638 511.51181 m
41.85638 514.25461 44.08044 516.47754 46.82353 516.47754 C
86.47852 516.47754 L
89.22047 516.47754 91.44454 514.25461 91.44454 511.51181 C
91.44454 473.89380 L
91.44454 471.15156 89.22047 468.92778 86.47852 468.92778 C
46.82353 468.92778 L
44.08044 468.92778 41.85638 471.15156 41.85638 473.89380 C
41.85638 511.51181 L
@c
19.55140 521.29757 m
16.80860 521.29757 14.58539 523.52164 14.58539 526.26472 C
14.58539 563.59871 L
14.58539 566.34180 16.80860 568.56557 19.55140 568.56557 C
59.49043 568.56557 L
62.23238 568.56557 64.45644 566.34180 64.45644 563.59871 C
64.45644 526.26472 L
64.45644 523.52164 62.23238 521.29757 59.49043 521.29757 C
19.55140 521.29757 L
@c
-12.05546 511.51181 m
-12.05546 514.25461 -9.83140 516.47754 -7.08860 516.47754 C
32.56554 516.47754 L
35.30835 516.47754 37.53241 514.25461 37.53241 511.51181 C
37.53241 473.89380 L
37.53241 471.15156 35.30835 468.92778 32.56554 468.92778 C
-7.08860 468.92778 L
-9.83140 468.92778 -12.05546 471.15156 -12.05546 473.89380 C
-12.05546 511.51181 L
@c
-34.29241 521.29757 m
-37.03550 521.29757 -39.25956 523.52164 -39.25956 526.26472 C
-39.25956 563.59871 L
-39.25956 566.34180 -37.03550 568.56557 -34.29241 568.56557 C
5.64548 568.56557 L
8.38857 568.56557 10.61235 566.34180 10.61235 563.59871 C
10.61235 526.26472 L
10.61235 523.52164 8.38857 521.29757 5.64548 521.29757 C
-34.29241 521.29757 L
@c
-127.98850 516.47754 m
-21.55153 516.47754 L
-18.80844 516.47754 -16.58466 514.25461 -16.58466 511.51181 C
-16.58466 473.89380 L
-16.58466 471.15156 -18.80844 468.92778 -21.55153 468.92778 C
-127.98850 468.92778 L
-130.73159 468.92778 -132.95452 471.15156 -132.95452 473.89380 C
-132.95452 511.51181 L
-132.95452 514.25461 -130.73159 516.47754 -127.98850 516.47754 C
@c
-127.98850 568.75465 m
-48.28167 568.75465 L
-45.53745 568.75465 -43.31452 566.53058 -43.31452 563.78863 C
-43.31452 526.07480 L
-43.31452 523.33172 -45.53745 521.10879 -48.28167 521.10879 C
-127.98850 521.10879 L
-130.73159 521.10879 -132.95452 523.33172 -132.95452 526.07480 C
-132.95452 563.78863 L
-132.95452 566.53058 -130.73159 568.75465 -127.98850 568.75465 C
@c
-61.66346 621.08957 m
-58.92066 621.08957 -56.69745 618.86665 -56.69745 616.12356 C
-56.69745 578.50668 L
-56.69745 575.76359 -58.92066 573.53981 -61.66346 573.53981 C
-127.98850 573.53981 L
-130.73159 573.53981 -132.95452 575.76359 -132.95452 578.50668 C
-132.95452 616.12356 L
-132.95452 618.86665 -130.73159 621.08957 -127.98850 621.08957 C
-61.66346 621.08957 L
@c
-29.44261 630.88554 m
-29.44261 628.14274 -31.66554 625.91981 -34.40948 625.91981 C
-74.34765 625.91981 L
-77.08961 625.91981 -79.31367 628.14274 -79.31367 630.88554 C
-79.31367 668.50356 L
-79.31367 671.24665 -77.08961 673.46957 -74.34765 673.46957 C
-34.40948 673.46957 L
-31.66554 673.46957 -29.44261 671.24665 -29.44261 668.50356 C
-29.44261 630.88554 L
@c
-7.63767 621.08957 m
-4.89543 621.08957 -2.67165 618.86665 -2.67165 616.12356 C
-2.67165 578.50668 L
-2.67165 575.76359 -4.89543 573.53981 -7.63767 573.53981 C
-47.57641 573.53981 L
-50.31950 573.53981 -52.54243 575.76359 -52.54243 578.50668 C
-52.54243 616.12356 L
-52.54243 618.86665 -50.31950 621.08957 -47.57641 621.08957 C
-7.63767 621.08957 L
@c
24.32551 630.88554 m
24.32551 628.14274 22.10145 625.91981 19.35836 625.91981 C
-20.32554 625.91981 L
-23.06863 625.91981 -25.29156 628.14274 -25.29156 630.88554 C
-25.29156 668.50356 L
-25.29156 671.24665 -23.06863 673.46957 -20.32554 673.46957 C
19.35836 673.46957 L
22.10145 673.46957 24.32551 671.24665 24.32551 668.50356 C
24.32551 630.88554 L
@c
45.82035 621.08957 m
48.56258 621.08957 50.78636 618.86665 50.78636 616.12356 C
50.78636 578.50668 L
50.78636 575.76359 48.56258 573.53981 45.82035 573.53981 C
5.59757 573.53981 L
2.85534 573.53981 0.63156 575.76359 0.63156 578.50668 C
0.63156 616.12356 L
0.63156 618.86665 2.85534 621.08957 5.59757 621.08957 C
45.82035 621.08957 L
@c
78.17244 630.88554 m
78.17244 628.14274 75.94838 625.91981 73.20557 625.91981 C
33.45137 625.91981 L
30.70857 625.91981 28.48450 628.14274 28.48450 630.88554 C
28.48450 668.50356 L
28.48450 671.24665 30.70857 673.46957 33.45137 673.46957 C
73.20557 673.46957 L
75.94838 673.46957 78.17244 671.24665 78.17244 668.50356 C
78.17244 630.88554 L
@c
99.87959 621.08957 m
102.62239 621.08957 104.84532 618.86665 104.84532 616.12356 C
104.84532 578.50668 L
104.84532 575.76359 102.62239 573.53981 99.87959 573.53981 C
60.22460 573.53981 L
57.48151 573.53981 55.25745 575.76359 55.25745 578.50668 C
55.25745 616.12356 L
55.25745 618.86665 57.48151 621.08957 60.22460 621.08957 C
99.87959 621.08957 L
@c
132.26854 630.88554 m
132.26854 628.14274 130.04532 625.91981 127.30139 625.91981 C
87.36350 625.91981 L
84.62154 625.91981 82.39748 628.14274 82.39748 630.88554 C
82.39748 668.50356 L
82.39748 671.24665 84.62154 673.46957 87.36350 673.46957 C
127.30139 673.46957 L
130.04532 673.46957 132.26854 671.24665 132.26854 668.50356 C
132.26854 630.88554 L
@c
153.52356 621.08957 m
156.26750 621.08957 158.49043 618.86665 158.49043 616.12356 C
158.49043 578.50668 L
158.49043 575.76359 156.26750 573.53981 153.52356 573.53981 C
113.86942 573.53981 L
111.12746 573.53981 108.90255 575.76359 108.90255 578.50668 C
108.90255 616.12356 L
108.90255 618.86665 111.12746 621.08957 113.86942 621.08957 C
153.52356 621.08957 L
@c
185.54655 630.88554 m
185.54655 628.14274 183.32249 625.91981 180.57940 625.91981 C
141.20844 625.91981 L
138.46450 625.91981 136.24157 628.14274 136.24157 630.88554 C
136.24157 668.50356 L
136.24157 671.24665 138.46450 673.46957 141.20844 673.46957 C
180.57940 673.46957 L
183.32249 673.46957 185.54655 671.24665 185.54655 668.50356 C
185.54655 630.88554 L
@c
207.78435 621.08957 m
210.52743 621.08957 212.75150 618.86665 212.75150 616.12356 C
212.75150 578.50668 L
212.75150 575.76359 210.52743 573.53981 207.78435 573.53981 C
168.12935 573.53981 L
165.38542 573.53981 163.16249 575.76359 163.16249 578.50668 C
163.16249 616.12356 L
163.16249 618.86665 165.38542 621.08957 168.12935 621.08957 C
207.78435 621.08957 L
@c
239.52756 630.88554 m
239.52756 628.14274 237.30236 625.91981 234.56041 625.91981 C
195.18860 625.91981 L
192.44636 625.91981 190.22258 628.14274 190.22258 630.88554 C
190.22258 668.50356 L
190.22258 671.24665 192.44636 673.46957 195.18860 673.46957 C
234.56041 673.46957 L
237.30236 673.46957 239.52756 671.24665 239.52756 668.50356 C
239.52756 630.88554 L
@c
261.27751 621.08957 m
264.02145 621.08957 266.24438 618.86665 266.24438 616.12356 C
266.24438 578.50668 L
266.24438 575.76359 264.02145 573.53981 261.27751 573.53981 C
221.62337 573.53981 L
218.88057 573.53981 216.65650 575.76359 216.65650 578.50668 C
216.65650 616.12356 L
216.65650 618.86665 218.88057 621.08957 221.62337 621.08957 C
261.27751 621.08957 L
@c
292.99238 630.88554 m
292.99238 628.14274 290.76860 625.91981 288.02551 625.91981 C
248.93745 625.91981 L
246.19436 625.91981 243.97058 628.14274 243.97058 630.88554 C
243.97058 668.50356 L
243.97058 671.24665 246.19436 673.46957 248.93745 673.46957 C
288.02551 673.46957 L
290.76860 673.46957 292.99238 671.24665 292.99238 668.50356 C
292.99238 630.88554 L
@c
315.10942 621.08957 m
317.85250 621.08957 320.07657 618.86665 320.07657 616.12356 C
320.07657 578.50668 L
320.07657 575.76359 317.85250 573.53981 315.10942 573.53981 C
275.45443 573.53981 L
272.71134 573.53981 270.48841 575.76359 270.48841 578.50668 C
270.48841 616.12356 L
270.48841 618.86665 272.71134 621.08957 275.45443 621.08957 C
315.10942 621.08957 L
@c
346.64939 630.88554 m
346.64939 628.14274 344.42532 625.91981 341.68252 625.91981 C
302.59446 625.91981 L
299.85250 625.91981 297.62957 628.14274 297.62957 630.88554 C
297.62957 668.50356 L
297.62957 671.24665 299.85250 673.46957 302.59446 673.46957 C
341.68252 673.46957 L
344.42532 673.46957 346.64939 671.24665 346.64939 668.50356 C
346.64939 630.88554 L
@c
288.95839 521.29757 m
286.21446 521.29757 283.99153 523.52164 283.99153 526.26472 C
283.99153 563.59871 L
283.99153 566.34180 286.21446 568.56557 288.95839 568.56557 C
328.61339 568.56557 L
331.35647 568.56557 333.58054 566.34180 333.58054 563.59871 C
333.58054 526.26472 L
333.58054 523.52164 331.35647 521.29757 328.61339 521.29757 C
288.95839 521.29757 L
@c
256.93739 511.51181 m
256.93739 514.25461 259.16145 516.47754 261.90454 516.47754 C
301.55839 516.47754 L
304.30148 516.47754 306.52554 514.25461 306.52554 511.51181 C
306.52554 473.89380 L
306.52554 471.15156 304.30148 468.92778 301.55839 468.92778 C
261.90454 468.92778 L
259.16145 468.92778 256.93739 471.15156 256.93739 473.89380 C
256.93739 511.51181 L
@c
235.18346 521.29757 m
232.44038 521.29757 230.21660 523.52164 230.21660 526.26472 C
230.21660 563.59871 L
230.21660 566.34180 232.44038 568.56557 235.18346 568.56557 C
274.83846 568.56557 L
277.58154 568.56557 279.80447 566.34180 279.80447 563.59871 C
279.80447 526.26472 L
279.80447 523.52164 277.58154 521.29757 274.83846 521.29757 C
235.18346 521.29757 L
@c
202.87956 511.51181 m
202.87956 514.25461 205.10249 516.47754 207.84557 516.47754 C
247.50057 516.47754 L
250.24337 516.47754 252.46658 514.25461 252.46658 511.51181 C
252.46658 473.89380 L
252.46658 471.15156 250.24337 468.92778 247.50057 468.92778 C
207.84557 468.92778 L
205.10249 468.92778 202.87956 471.15156 202.87956 473.89380 C
202.87956 511.51181 L
@c
181.20246 521.29757 m
178.45937 521.29757 176.23559 523.52164 176.23559 526.26472 C
176.23559 563.59871 L
176.23559 566.34180 178.45937 568.56557 181.20246 568.56557 C
220.85660 568.56557 L
223.59940 568.56557 225.82346 566.34180 225.82346 563.59871 C
225.82346 526.26472 L
225.82346 523.52164 223.59940 521.29757 220.85660 521.29757 C
181.20246 521.29757 L
@c
149.36655 511.51181 m
149.36655 514.25461 151.58948 516.47754 154.33257 516.47754 C
193.98756 516.47754 L
196.73036 516.47754 198.95443 514.25461 198.95443 511.51181 C
198.95443 473.89380 L
198.95443 471.15156 196.73036 468.92778 193.98756 468.92778 C
154.33257 468.92778 L
151.58948 468.92778 149.36655 471.15156 149.36655 473.89380 C
149.36655 511.51181 L
@c
144.87449 511.51181 m
144.87449 473.89380 L
144.87449 471.15156 142.65043 468.92778 139.90734 468.92778 C
100.25348 468.92778 L
97.50954 468.92778 95.28633 471.15156 95.28633 473.89380 C
95.28633 511.51181 L
95.28633 514.25461 97.50954 516.47754 100.25348 516.47754 C
139.90734 516.47754 L
142.65043 516.47754 144.87449 514.25461 144.87449 511.51181 C
@c
127.25745 521.29757 m
124.51436 521.29757 122.29143 523.52164 122.29143 526.26472 C
122.29143 563.59871 L
122.29143 566.34180 124.51436 568.56557 127.25745 568.56557 C
166.91357 568.56557 L
169.65638 568.56557 171.88044 566.34180 171.88044 563.59871 C
171.88044 526.26472 L
171.88044 523.52164 169.65638 521.29757 166.91357 521.29757 C
127.25745 521.29757 L
@c
368.88350 621.08957 m
371.62743 621.08957 373.85036 618.86665 373.85036 616.12356 C
373.85036 578.50668 L
373.85036 575.76359 371.62743 573.53981 368.88350 573.53981 C
329.22935 573.53981 L
326.48655 573.53981 324.26249 575.76359 324.26249 578.50668 C
324.26249 616.12356 L
324.26249 618.86665 326.48655 621.08957 329.22935 621.08957 C
368.88350 621.08957 L
@c
400.04050 630.88554 m
400.04050 628.14274 397.81644 625.91981 395.07335 625.91981 C
356.26847 625.91981 L
353.52539 625.91981 351.30132 628.14274 351.30132 630.88554 C
351.30132 668.50356 L
351.30132 671.24665 353.52539 673.46957 356.26847 673.46957 C
395.07335 673.46957 L
397.81644 673.46957 400.04050 671.24665 400.04050 668.50356 C
400.04050 630.88554 L
@c
422.38035 621.08957 m
425.12457 621.08957 427.34750 618.86665 427.34750 616.12356 C
427.34750 578.50668 L
427.34750 575.76359 425.12457 573.53981 422.38035 573.53981 C
382.72535 573.53981 L
379.98255 573.53981 377.75849 575.76359 377.75849 578.50668 C
377.75849 616.12356 L
377.75849 618.86665 379.98255 621.08957 382.72535 621.08957 C
422.38035 621.08957 L
@c
454.00139 630.88554 m
454.00139 628.14274 451.77732 625.91981 449.03452 625.91981 C
409.38038 625.91981 L
406.63644 625.91981 404.41351 628.14274 404.41351 630.88554 C
404.41351 668.50356 L
404.41351 671.24665 406.63644 673.46957 409.38038 673.46957 C
449.03452 673.46957 L
451.77732 673.46957 454.00139 671.24665 454.00139 668.50356 C
454.00139 630.88554 L
@c
413.56545 511.51181 m
413.56545 473.89380 L
413.56545 471.15156 411.34139 468.92778 408.59858 468.92778 C
369.51052 468.92778 L
366.76743 468.92778 364.54450 471.15156 364.54450 473.89380 C
364.54450 511.51181 L
364.54450 514.25461 366.76743 516.47754 369.51052 516.47754 C
408.59858 516.47754 L
411.34139 516.47754 413.56545 514.25461 413.56545 511.51181 C
@c
395.71739 521.29757 m
392.97458 521.29757 390.75137 523.52164 390.75137 526.26472 C
390.75137 563.59871 L
390.75137 566.34180 392.97458 568.56557 395.71739 568.56557 C
435.37351 568.56557 L
438.11660 568.56557 440.33953 566.34180 440.33953 563.59871 C
440.33953 526.26472 L
440.33953 523.52164 438.11660 521.29757 435.37351 521.29757 C
395.71739 521.29757 L
@c
476.22557 621.08957 m
478.96753 621.08957 481.19159 618.86665 481.19159 616.12356 C
481.19159 578.50668 L
481.19159 575.76359 478.96753 573.53981 476.22557 573.53981 C
437.13751 573.53981 L
434.39443 573.53981 432.17150 575.76359 432.17150 578.50668 C
432.17150 616.12356 L
432.17150 618.86665 434.39443 621.08957 437.13751 621.08957 C
476.22557 621.08957 L
@c
529.79641 621.08957 m
532.53950 621.08957 534.76243 618.86665 534.76243 616.12356 C
534.76243 578.50668 L
534.76243 575.76359 532.53950 573.53981 529.79641 573.53981 C
490.42460 573.53981 L
487.68151 573.53981 485.45858 575.76359 485.45858 578.50668 C
485.45858 616.12356 L
485.45858 618.86665 487.68151 621.08957 490.42460 621.08957 C
529.79641 621.08957 L
@c
507.61843 630.88554 m
507.61843 628.14274 505.39436 625.91981 502.65156 625.91981 C
463.28060 625.91981 L
460.53751 625.91981 458.31345 628.14274 458.31345 630.88554 C
458.31345 668.50356 L
458.31345 671.24665 460.53751 673.46957 463.28060 673.46957 C
502.65156 673.46957 L
505.39436 673.46957 507.61843 671.24665 507.61843 668.50356 C
507.61843 630.88554 L
@c
-132.38759 704.56876 m
-132.38759 707.31071 -130.16353 709.53477 -127.42044 709.53477 C
636.63534 709.53477 L
639.37956 709.53477 641.60249 707.31071 641.60249 704.56876 C
641.60249 683.15357 L
641.60249 680.41162 639.37956 678.18756 636.63534 678.18756 C
-127.42044 678.18756 L
-130.16353 678.18756 -132.38759 680.41162 -132.38759 683.15357 C
-132.38759 704.56876 L
@c
-140.32743 416.73175 m
-140.32743 416.23654 -140.72854 415.83657 -141.22261 415.83657 C
-168.69345 415.83657 L
-169.18753 415.83657 -169.58750 416.23654 -169.58750 416.73175 C
-169.58750 710.22557 L
-169.58750 710.71965 -169.18753 711.11962 -168.69345 711.11962 C
-141.22261 711.11962 L
-140.72854 711.11962 -140.32743 710.71965 -140.32743 710.22557 C
-140.32743 416.73175 L
@c
683.80441 714.58469 m
683.81433 717.89471 683.79534 722.55458 682.80435 727.46476 C
680.46435 738.93458 673.66545 751.76476 654.38447 751.70466 C
589.77638 751.78460 L
589.77638 742.10457 L
-80.75962 742.10457 L
-80.75962 751.78460 L
-144.93855 751.78460 L
-167.67865 751.78460 -173.33858 733.87474 -174.36954 721.15455 C
-174.56854 718.72469 -174.58866 716.48476 -174.51865 714.58469 C
-174.51865 204.69260 L
-174.48945 195.59169 -174.44948 189.04167 -174.39846 186.91172 C
-174.15950 177.93156 -172.90942 168.45165 -166.61962 161.53172 C
-159.27647 153.46063 -147.83556 151.70655 -137.46841 151.71874 C
184.22334 151.71874 L
184.49036 152.59465 185.08450 153.61058 185.68148 154.43773 C
187.36356 156.76866 190.66139 158.23757 194.31751 158.23757 C
315.05443 158.23757 L
318.36557 158.23757 322.25953 156.43871 323.66948 153.44759 C
323.92942 152.88860 324.16838 152.33981 324.35433 151.71874 C
641.27140 151.15181 L
641.51036 151.15181 641.74139 151.18157 641.97156 151.23175 C
647.69159 151.26180 651.25559 151.29071 651.74457 151.33068 C
661.49745 151.98066 669.65244 152.87669 676.75550 160.68161 C
682.24337 166.72762 683.02743 171.55474 683.92035 179.15159 C
684.04054 179.79080 684.13946 180.44164 684.15959 181.12054 C
684.15959 181.12054 684.37134 183.75761 684.37134 187.59855 C
683.80441 714.58469 L
@c
F

@rax %Note: Object
-51.97550 574.10674 -3.23858 620.52293 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-51.97550 616.12384 m
-51.97550 578.50696 L
-51.97550 576.08079 -50.00145 574.10674 -47.57641 574.10674 C
-7.63767 574.10674 L
-5.21150 574.10674 -3.23858 576.08079 -3.23858 578.50696 C
-3.23858 616.12384 L
-3.23858 618.54973 -5.21150 620.52293 -7.63767 620.52293 C
-47.57641 620.52293 L
-50.00145 620.52293 -51.97550 618.54973 -51.97550 616.12384 C
@c
F

@rax %Note: Object
-78.74617 626.48702 -30.00926 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-34.40806 672.90321 m
-74.34624 672.90321 L
-76.77213 672.90321 -78.74617 670.92917 -78.74617 668.50413 C
-78.74617 630.88611 L
-78.74617 628.46107 -76.77213 626.48702 -74.34624 626.48702 C
-34.40806 626.48702 L
-31.98217 626.48702 -30.00926 628.46107 -30.00926 630.88611 C
-30.00926 668.50413 L
-30.00926 670.92917 -31.98217 672.90321 -34.40806 672.90321 C
@c
F

@rax %Note: Object
458.88038 626.48702 507.05036 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
502.65156 672.90321 m
463.28060 672.90321 L
460.85443 672.90321 458.88038 670.92917 458.88038 668.50413 C
458.88038 630.88611 L
458.88038 628.46107 460.85443 626.48702 463.28060 626.48702 C
502.65156 626.48702 L
505.07745 626.48702 507.05036 628.46107 507.05036 630.88611 C
507.05036 668.50413 L
507.05036 670.92917 505.07745 672.90321 502.65156 672.90321 C
@c
F

@rax %Note: Object
486.02551 574.10674 534.19550 620.52293 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
486.02551 616.12384 m
486.02551 578.50696 L
486.02551 576.08079 487.99956 574.10674 490.42460 574.10674 C
529.79641 574.10674 L
532.22258 574.10674 534.19550 576.08079 534.19550 578.50696 C
534.19550 616.12384 L
534.19550 618.54973 532.22258 620.52293 529.79641 620.52293 C
490.42460 620.52293 L
487.99956 620.52293 486.02551 618.54973 486.02551 616.12384 C
@c
F

@rax %Note: Object
432.73843 574.10674 480.62438 620.52293 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
432.73843 616.12384 m
432.73843 578.50696 L
432.73843 576.08079 434.71247 574.10674 437.13723 574.10674 C
476.22529 574.10674 L
478.65146 574.10674 480.62438 576.08079 480.62438 578.50696 C
480.62438 616.12384 L
480.62438 618.54973 478.65146 620.52293 476.22529 620.52293 C
437.13723 620.52293 L
434.71247 620.52293 432.73843 618.54973 432.73843 616.12384 C
@c
F

@rax %Note: Object
391.31943 521.86535 439.77260 567.99751 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
439.77260 526.26444 m
439.77260 563.59843 L
439.77260 566.02460 437.79855 567.99751 435.37351 567.99751 C
395.71852 567.99751 L
393.29348 567.99751 391.31943 566.02460 391.31943 563.59843 C
391.31943 526.26444 L
391.31943 523.83855 393.29348 521.86535 395.71852 521.86535 C
435.37351 521.86535 L
437.79855 521.86535 439.77260 523.83855 439.77260 526.26444 C
@c
F

@rax %Note: Object
365.11172 469.49499 412.99767 515.91090 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
369.51080 515.91090 m
367.08463 515.91090 365.11172 513.93685 365.11172 511.51209 C
365.11172 473.89408 L
365.11172 471.46904 367.08463 469.49499 369.51080 469.49499 C
408.59887 469.49499 L
411.02476 469.49499 412.99767 471.46904 412.99767 473.89408 C
412.99767 511.51209 L
412.99767 513.93685 411.02476 515.91090 408.59887 515.91090 C
369.51080 515.91090 L
@c
F

@rax %Note: Object
404.98129 626.48702 453.43417 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
449.03537 672.90321 m
409.38038 672.90321 L
406.95420 672.90321 404.98129 670.92917 404.98129 668.50413 C
404.98129 630.88611 L
404.98129 628.46107 406.95420 626.48702 409.38038 626.48702 C
449.03537 626.48702 L
451.46126 626.48702 453.43417 628.46107 453.43417 630.88611 C
453.43417 668.50413 L
453.43417 670.92917 451.46126 672.90321 449.03537 672.90321 C
@c
F

@rax %Note: Object
378.32740 574.10674 426.78028 620.52293 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
378.32740 616.12384 m
378.32740 578.50696 L
378.32740 576.08079 380.30117 574.10674 382.72620 574.10674 C
422.38120 574.10674 L
424.80624 574.10674 426.78028 576.08079 426.78028 578.50696 C
426.78028 616.12384 L
426.78028 618.54973 424.80624 620.52293 422.38120 620.52293 C
382.72620 620.52293 L
380.30117 620.52293 378.32740 618.54973 378.32740 616.12384 C
@c
F

@rax %Note: Object
351.86939 626.48702 399.47216 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
395.07335 672.90321 m
356.26819 672.90321 L
353.84315 672.90321 351.86939 670.92917 351.86939 668.50413 C
351.86939 630.88611 L
351.86939 628.46107 353.84315 626.48702 356.26819 626.48702 C
395.07335 626.48702 L
397.49924 626.48702 399.47216 628.46107 399.47216 630.88611 C
399.47216 668.50413 L
399.47216 670.92917 397.49924 672.90321 395.07335 672.90321 C
@c
F

@rax %Note: Object
324.83027 574.10674 373.28428 620.52293 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
324.83027 616.12384 m
324.83027 578.50696 L
324.83027 576.08079 326.80403 574.10674 329.22907 574.10674 C
368.88520 574.10674 L
371.31024 574.10674 373.28428 576.08079 373.28428 578.50696 C
373.28428 616.12384 L
373.28428 618.54973 371.31024 620.52293 368.88520 620.52293 C
329.22907 620.52293 L
326.80403 620.52293 324.83027 618.54973 324.83027 616.12384 C
@c
F

@rax %Note: Object
149.93405 469.49499 198.38693 515.91090 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
154.33313 469.49499 m
193.98699 469.49499 L
196.41317 469.49499 198.38693 471.46876 198.38693 473.89380 C
198.38693 511.51181 L
198.38693 513.93685 196.41317 515.91090 193.98699 515.91090 C
154.33313 515.91090 L
151.90696 515.91090 149.93405 513.93685 149.93405 511.51181 C
149.93405 473.89380 L
149.93405 471.46876 151.90696 469.49499 154.33313 469.49499 C
@c
F

@rax %Note: Object
122.85950 521.86535 171.31266 567.99751 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
171.31266 526.26444 m
171.31266 563.59843 L
171.31266 566.02460 169.33861 567.99751 166.91357 567.99751 C
127.25858 567.99751 L
124.83354 567.99751 122.85950 566.02460 122.85950 563.59843 C
122.85950 526.26444 L
122.85950 523.83855 124.83354 521.86535 127.25858 521.86535 C
166.91357 521.86535 L
169.33861 521.86535 171.31266 523.83855 171.31266 526.26444 C
@c
F

@rax %Note: Object
176.80280 521.86535 225.25682 567.99751 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
225.25682 526.26444 m
225.25682 563.59843 L
225.25682 566.02460 223.28277 567.99751 220.85773 567.99751 C
181.20189 567.99751 L
178.77685 567.99751 176.80280 566.02460 176.80280 563.59843 C
176.80280 526.26444 L
176.80280 523.83855 178.77685 521.86535 181.20189 521.86535 C
220.85773 521.86535 L
223.28277 521.86535 225.25682 523.83855 225.25682 526.26444 C
@c
F

@rax %Note: Object
203.44677 469.49499 251.89965 515.91090 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
207.84586 469.49499 m
247.50085 469.49499 L
249.92674 469.49499 251.89965 471.46876 251.89965 473.89380 C
251.89965 511.51181 L
251.89965 513.93685 249.92674 515.91090 247.50085 515.91090 C
207.84586 515.91090 L
205.41969 515.91090 203.44677 513.93685 203.44677 511.51181 C
203.44677 473.89380 L
203.44677 471.46876 205.41969 469.49499 207.84586 469.49499 C
@c
F

@rax %Note: Object
230.78438 521.86535 279.23726 567.99751 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
279.23726 526.26444 m
279.23726 563.59843 L
279.23726 566.02460 277.26350 567.99751 274.83846 567.99751 C
235.18346 567.99751 L
232.75843 567.99751 230.78438 566.02460 230.78438 563.59843 C
230.78438 526.26444 L
230.78438 523.83855 232.75843 521.86535 235.18346 521.86535 C
274.83846 521.86535 L
277.26350 521.86535 279.23726 523.83855 279.23726 526.26444 C
@c
F

@rax %Note: Object
257.50545 469.49499 305.95833 515.91090 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
261.90425 469.49499 m
301.55839 469.49499 L
303.98428 469.49499 305.95833 471.46876 305.95833 473.89380 C
305.95833 511.51181 L
305.95833 513.93685 303.98428 515.91090 301.55839 515.91090 C
261.90425 515.91090 L
259.47836 515.91090 257.50545 513.93685 257.50545 511.51181 C
257.50545 473.89380 L
257.50545 471.46876 259.47836 469.49499 261.90425 469.49499 C
@c
F

@rax %Note: Object
284.55987 521.86535 333.01276 567.99751 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
333.01276 526.26444 m
333.01276 563.59843 L
333.01276 566.02460 331.03871 567.99751 328.61367 567.99751 C
288.95868 567.99751 L
286.53364 567.99751 284.55987 566.02460 284.55987 563.59843 C
284.55987 526.26444 L
284.55987 523.83855 286.53364 521.86535 288.95868 521.86535 C
328.61367 521.86535 L
331.03871 521.86535 333.01276 523.83855 333.01276 526.26444 C
@c
F

@rax %Note: Object
298.19679 626.48702 346.08274 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
341.68365 672.90321 m
302.59559 672.90321 L
300.16970 672.90321 298.19679 670.92917 298.19679 668.50413 C
298.19679 630.88611 L
298.19679 628.46107 300.16970 626.48702 302.59559 626.48702 C
341.68365 626.48702 L
344.10954 626.48702 346.08274 628.46107 346.08274 630.88611 C
346.08274 668.50413 L
346.08274 670.92917 344.10954 672.90321 341.68365 672.90321 C
@c
F

@rax %Note: Object
271.05591 574.10674 319.50879 620.52293 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
271.05591 616.12384 m
271.05591 578.50696 L
271.05591 576.08079 273.02882 574.10674 275.45386 574.10674 C
315.10970 574.10674 L
317.53474 574.10674 319.50879 576.08079 319.50879 578.50696 C
319.50879 616.12384 L
319.50879 618.54973 317.53474 620.52293 315.10970 620.52293 C
275.45386 620.52293 L
273.02882 620.52293 271.05591 618.54973 271.05591 616.12384 C
@c
F

@rax %Note: Object
244.53836 626.48702 292.42460 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
288.02551 672.90321 m
248.93745 672.90321 L
246.51156 672.90321 244.53836 670.92917 244.53836 668.50413 C
244.53836 630.88611 L
244.53836 628.46107 246.51156 626.48702 248.93745 626.48702 C
288.02551 626.48702 L
290.45140 626.48702 292.42460 628.46107 292.42460 630.88611 C
292.42460 668.50413 L
292.42460 670.92917 290.45140 672.90321 288.02551 672.90321 C
@c
F

@rax %Note: Object
217.22457 574.10674 265.67773 620.52293 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
217.22457 616.12384 m
217.22457 578.50696 L
217.22457 576.08079 219.19776 574.10674 221.62280 574.10674 C
261.27865 574.10674 L
263.70369 574.10674 265.67773 576.08079 265.67773 578.50696 C
265.67773 616.12384 L
265.67773 618.54973 263.70369 620.52293 261.27865 620.52293 C
221.62280 620.52293 L
219.19776 620.52293 217.22457 618.54973 217.22457 616.12384 C
@c
F

@rax %Note: Object
190.78980 626.48702 238.95978 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
234.56069 672.90321 m
195.18973 672.90321 L
192.76356 672.90321 190.78980 670.92917 190.78980 668.50413 C
190.78980 630.88611 L
190.78980 628.46107 192.76356 626.48702 195.18973 626.48702 C
234.56069 626.48702 L
236.98658 626.48702 238.95978 628.46107 238.95978 630.88611 C
238.95978 668.50413 L
238.95978 670.92917 236.98658 672.90321 234.56069 672.90321 C
@c
F

@rax %Note: Object
163.72970 574.10674 212.18343 620.52293 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
163.72970 616.12384 m
163.72970 578.50696 L
163.72970 576.08079 165.70346 574.10674 168.12850 574.10674 C
207.78463 574.10674 L
210.20967 574.10674 212.18343 576.08079 212.18343 578.50696 C
212.18343 616.12384 L
212.18343 618.54973 210.20967 620.52293 207.78463 620.52293 C
168.12850 620.52293 L
165.70346 620.52293 163.72970 618.54973 163.72970 616.12384 C
@c
F

@rax %Note: Object
136.80907 626.48702 184.97820 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
180.57912 672.90321 m
141.20816 672.90321 L
138.78227 672.90321 136.80907 670.92917 136.80907 668.50413 C
136.80907 630.88611 L
136.80907 628.46107 138.78227 626.48702 141.20816 626.48702 C
180.57912 626.48702 L
183.00529 626.48702 184.97820 628.46107 184.97820 630.88611 C
184.97820 668.50413 L
184.97820 670.92917 183.00529 672.90321 180.57912 672.90321 C
@c
F

@rax %Note: Object
109.47090 574.10674 157.92378 620.52293 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
109.47090 616.12384 m
109.47090 578.50696 L
109.47090 576.08079 111.44381 574.10674 113.86885 574.10674 C
153.52469 574.10674 L
155.94973 574.10674 157.92378 576.08079 157.92378 578.50696 C
157.92378 616.12384 L
157.92378 618.54973 155.94973 620.52293 153.52469 620.52293 C
113.86885 620.52293 L
111.44381 620.52293 109.47090 618.54973 109.47090 616.12384 C
@c
F

@rax %Note: Object
82.96469 626.48702 131.70189 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
127.30280 672.90321 m
87.36463 672.90321 L
84.93874 672.90321 82.96469 670.92917 82.96469 668.50413 C
82.96469 630.88611 L
82.96469 628.46107 84.93874 626.48702 87.36463 626.48702 C
127.30280 626.48702 L
129.72869 626.48702 131.70189 628.46107 131.70189 630.88611 C
131.70189 668.50413 L
131.70189 670.92917 129.72869 672.90321 127.30280 672.90321 C
@c
F

@rax %Note: Object
55.82523 574.10674 104.27924 620.52293 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
55.82523 616.12384 m
55.82523 578.50696 L
55.82523 576.08079 57.79928 574.10674 60.22431 574.10674 C
99.88016 574.10674 L
102.30520 574.10674 104.27924 576.08079 104.27924 578.50696 C
104.27924 616.12384 L
104.27924 618.54973 102.30520 620.52293 99.88016 620.52293 C
60.22431 620.52293 L
57.79928 620.52293 55.82523 618.54973 55.82523 616.12384 C
@c
F

@rax %Note: Object
29.05228 626.48702 77.60409 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
73.20529 672.90321 m
33.45109 672.90321 L
31.02520 672.90321 29.05228 670.92917 29.05228 668.50413 C
29.05228 630.88611 L
29.05228 628.46107 31.02520 626.48702 33.45109 626.48702 C
73.20529 626.48702 L
75.63118 626.48702 77.60409 628.46107 77.60409 630.88611 C
77.60409 668.50413 L
77.60409 670.92917 75.63118 672.90321 73.20529 672.90321 C
@c
F

@rax %Note: Object
1.19934 574.10674 50.21915 620.52293 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
1.19934 616.12384 m
1.19934 578.50696 L
1.19934 576.08079 3.17339 574.10674 5.59814 574.10674 C
45.82035 574.10674 L
48.24624 574.10674 50.21915 576.08079 50.21915 578.50696 C
50.21915 616.12384 L
50.21915 618.54973 48.24624 620.52293 45.82035 620.52293 C
5.59814 620.52293 L
3.17339 620.52293 1.19934 618.54973 1.19934 616.12384 C
@c
F

@rax %Note: Object
-24.72350 626.48702 23.75745 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
19.35836 672.90321 m
-20.32441 672.90321 L
-22.74945 672.90321 -24.72350 670.92917 -24.72350 668.50413 C
-24.72350 630.88611 L
-24.72350 628.46107 -22.74945 626.48702 -20.32441 626.48702 C
19.35836 626.48702 L
21.78454 626.48702 23.75745 628.46107 23.75745 630.88611 C
23.75745 668.50413 L
23.75745 670.92917 21.78454 672.90321 19.35836 672.90321 C
@c
F

@rax %Note: Object
-38.69093 521.86535 10.04485 567.99751 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
10.04485 526.26444 m
10.04485 563.59843 L
10.04485 566.02460 8.07194 567.99751 5.64690 567.99751 C
-34.29213 567.99751 L
-36.71802 567.99751 -38.69093 566.02460 -38.69093 563.59843 C
-38.69093 526.26444 L
-38.69093 523.83855 -36.71802 521.86535 -34.29213 521.86535 C
5.64690 521.86535 L
8.07194 521.86535 10.04485 523.83855 10.04485 526.26444 C
@c
F

@rax %Note: Object
-11.48797 469.49499 36.96605 515.91090 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-7.08888 469.49499 m
32.56611 469.49499 L
34.99228 469.49499 36.96605 471.46876 36.96605 473.89380 C
36.96605 511.51181 L
36.96605 513.93685 34.99228 515.91090 32.56611 515.91090 C
-7.08888 515.91090 L
-9.51477 515.91090 -11.48797 513.93685 -11.48797 511.51181 C
-11.48797 473.89380 L
-11.48797 471.46876 -9.51477 469.49499 -7.08888 469.49499 C
@c
F

@rax %Note: Object
15.15288 521.86535 63.88980 567.99751 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
63.88980 526.26444 m
63.88980 563.59843 L
63.88980 566.02460 61.91575 567.99751 59.49071 567.99751 C
19.55169 567.99751 L
17.12580 567.99751 15.15288 566.02460 15.15288 563.59843 C
15.15288 526.26444 L
15.15288 523.83855 17.12580 521.86535 19.55169 521.86535 C
59.49071 521.86535 L
61.91575 521.86535 63.88980 523.83855 63.88980 526.26444 C
@c
F

@rax %Note: Object
42.42529 469.49499 90.87817 515.91090 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
46.82438 469.49499 m
86.47824 469.49499 L
88.90413 469.49499 90.87817 471.46876 90.87817 473.89380 C
90.87817 511.51181 L
90.87817 513.93685 88.90413 515.91090 86.47824 515.91090 C
46.82438 515.91090 L
44.39820 515.91090 42.42529 513.93685 42.42529 511.51181 C
42.42529 473.89380 L
42.42529 471.46876 44.39820 469.49499 46.82438 469.49499 C
@c
F

@rax %Note: Object
69.19880 521.86535 117.93572 567.99751 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
117.93572 526.26444 m
117.93572 563.59843 L
117.93572 566.02460 115.96167 567.99751 113.53663 567.99751 C
73.59761 567.99751 L
71.17172 567.99751 69.19880 566.02460 69.19880 563.59843 C
69.19880 526.26444 L
69.19880 523.83855 71.17172 521.86535 73.59761 521.86535 C
113.53663 521.86535 L
115.96167 521.86535 117.93572 523.83855 117.93572 526.26444 C
@c
F

@rax %Note: Object
95.85354 469.49443 144.30756 515.91033 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
95.85354 511.51153 m
95.85354 473.89436 L
95.85354 471.46847 97.82759 469.49443 100.25263 469.49443 C
139.90847 469.49443 L
142.33351 469.49443 144.30756 471.46847 144.30756 473.89436 C
144.30756 511.51153 L
144.30756 513.93742 142.33351 515.91033 139.90847 515.91033 C
100.25263 515.91033 L
97.82759 515.91033 95.85354 513.93742 95.85354 511.51153 C
@c
F

@rax %Note: Object
95.57178 417.07502 359.13487 463.49093 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
99.97087 417.07502 m
354.73578 417.07502 L
357.16082 417.07502 359.13487 419.04907 359.13487 421.47411 C
359.13487 459.09184 L
359.13487 461.51688 357.16082 463.49093 354.73578 463.49093 C
99.97087 463.49093 L
97.54469 463.49093 95.57178 461.51688 95.57178 459.09184 C
95.57178 421.47411 L
95.57178 419.04907 97.54469 417.07502 99.97087 417.07502 C
@c
F

@rax %Note: Object
311.33367 469.49499 359.78769 515.91090 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
355.38888 515.91090 m
315.73389 515.91090 L
313.30772 515.91090 311.33367 513.93685 311.33367 511.51209 C
311.33367 473.89408 L
311.33367 471.46904 313.30772 469.49499 315.73389 469.49499 C
355.38888 469.49499 L
357.81477 469.49499 359.78769 471.46904 359.78769 473.89408 C
359.78769 511.51209 L
359.78769 513.93685 357.81477 515.91090 355.38888 515.91090 C
@c
F

@rax %Note: Object
337.97395 521.86535 386.42683 567.99751 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
386.42683 526.26444 m
386.42683 563.59843 L
386.42683 566.02460 384.45279 567.99751 382.02775 567.99751 C
342.37276 567.99751 L
339.94800 567.99751 337.97395 566.02460 337.97395 563.59843 C
337.97395 526.26444 L
337.97395 523.83855 339.94800 521.86535 342.37276 521.86535 C
382.02775 521.86535 L
384.45279 521.86535 386.42683 523.83855 386.42683 526.26444 C
@c
F

@rax %Note: Object
364.05383 416.93528 426.15978 463.63039 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
368.34775 416.93528 m
421.86586 416.93528 L
424.23364 416.93528 426.15978 418.86142 426.15978 421.22948 C
426.15978 459.33647 L
426.15978 461.70539 424.23364 463.63039 421.86586 463.63039 C
368.34775 463.63039 L
365.97969 463.63039 364.05383 461.70539 364.05383 459.33647 C
364.05383 421.22948 L
364.05383 418.86142 365.97969 416.93528 368.34775 416.93528 C
@c
F

@rax %Note: Object
418.92293 469.49528 467.09291 515.91146 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
467.09291 473.89436 m
467.09291 511.51124 L
467.09291 513.93742 465.11887 515.91146 462.69383 515.91146 C
423.32173 515.91146 L
420.89698 515.91146 418.92293 513.93742 418.92293 511.51124 C
418.92293 473.89436 L
418.92293 471.46847 420.89698 469.49528 423.32173 469.49528 C
462.69383 469.49528 L
465.11887 469.49528 467.09291 471.46847 467.09291 473.89436 C
@c
F

@rax %Note: Object
445.09493 521.86535 493.54894 567.99751 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
493.54894 526.26444 m
493.54894 563.59843 L
493.54894 566.02460 491.57490 567.99751 489.14986 567.99751 C
449.49373 567.99751 L
447.06898 567.99751 445.09493 566.02460 445.09493 563.59843 C
445.09493 526.26444 L
445.09493 523.83855 447.06898 521.86535 449.49373 521.86535 C
489.14986 521.86535 L
491.57490 521.86535 493.54894 523.83855 493.54894 526.26444 C
@c
F

@rax %Note: Object
472.73386 469.49499 520.61981 515.91090 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
477.13294 469.49499 m
516.22072 469.49499 L
518.64690 469.49499 520.61981 471.46876 520.61981 473.89380 C
520.61981 511.51181 L
520.61981 513.93685 518.64690 515.91090 516.22072 515.91090 C
477.13294 515.91090 L
474.70677 515.91090 472.73386 513.93685 472.73386 511.51181 C
472.73386 473.89380 L
472.73386 471.46876 474.70677 469.49499 477.13294 469.49499 C
@c
F

@rax %Note: Object
498.93959 521.86535 547.10957 567.99751 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
547.10957 526.26444 m
547.10957 563.59843 L
547.10957 566.02460 545.13553 567.99751 542.71049 567.99751 C
503.33839 567.99751 L
500.91335 567.99751 498.93959 566.02460 498.93959 563.59843 C
498.93959 526.26444 L
498.93959 523.83855 500.91335 521.86535 503.33839 521.86535 C
542.71049 521.86535 L
545.13553 521.86535 547.10957 523.83855 547.10957 526.26444 C
@c
F

@rax %Note: Object
526.15956 469.49499 641.20762 515.91090 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
636.80967 515.91090 m
530.55865 515.91090 L
528.13276 515.91090 526.15956 513.93685 526.15956 511.51209 C
526.15956 473.89408 L
526.15956 471.46904 528.13276 469.49499 530.55865 469.49499 C
636.80967 469.49499 L
639.23556 469.49499 641.20762 471.46904 641.20762 473.89408 C
641.20762 511.51209 L
641.20762 513.93685 639.23556 515.91090 636.80967 515.91090 C
@c
F

@rax %Note: Object
593.34831 574.10731 641.51717 620.52321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
637.11836 620.52321 m
597.74740 620.52321 L
595.32123 620.52321 593.34831 618.54917 593.34831 616.12441 C
593.34831 578.50639 L
593.34831 576.08135 595.32123 574.10731 597.74740 574.10731 C
637.11836 574.10731 L
639.54425 574.10731 641.51717 576.08135 641.51717 578.50639 C
641.51717 616.12441 L
641.51717 618.54917 639.54425 620.52321 637.11836 620.52321 C
@c
F

@rax %Note: Object
553.12980 521.86479 641.44998 567.99780 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
637.05090 567.99780 m
557.52973 567.99780 L
555.10384 567.99780 553.12980 566.02375 553.12980 563.59899 C
553.12980 526.26501 L
553.12980 523.83883 555.10384 521.86479 557.52973 521.86479 C
637.05090 521.86479 L
639.47679 521.86479 641.44998 523.83883 641.44998 526.26501 C
641.44998 563.59899 L
641.44998 566.02375 639.47679 567.99780 637.05090 567.99780 C
@c
F

@rax %Note: Object
539.84268 574.10759 588.01266 620.52378 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
588.01266 578.50668 m
588.01266 616.12356 L
588.01266 618.54973 586.03890 620.52378 583.61386 620.52378 C
544.24176 620.52378 L
541.81672 620.52378 539.84268 618.54973 539.84268 616.12356 C
539.84268 578.50668 L
539.84268 576.08079 541.81672 574.10759 544.24176 574.10759 C
583.61386 574.10759 L
586.03890 574.10759 588.01266 576.08079 588.01266 578.50668 C
@c
F

@rax %Note: Object
512.41209 626.48702 561.14816 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
556.74907 672.90321 m
516.81118 672.90321 L
514.38501 672.90321 512.41209 670.92917 512.41209 668.50413 C
512.41209 630.88611 L
512.41209 628.46107 514.38501 626.48702 516.81118 626.48702 C
556.74907 626.48702 L
559.17496 626.48702 561.14816 628.46107 561.14816 630.88611 C
561.14816 668.50413 L
561.14816 670.92917 559.17496 672.90321 556.74907 672.90321 C
@c
F

@rax %Note: Object
-132.38731 626.48702 -84.03137 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-127.98822 626.48702 m
-88.43017 626.48702 L
-86.00513 626.48702 -84.03137 628.46107 -84.03137 630.88611 C
-84.03137 668.50413 L
-84.03137 670.92917 -86.00513 672.90321 -88.43017 672.90321 C
-127.98822 672.90321 L
-130.41411 672.90321 -132.38731 670.92917 -132.38731 668.50413 C
-132.38731 630.88611 L
-132.38731 628.46107 -130.41411 626.48702 -127.98822 626.48702 C
@c
F

@rax %Note: Object
-132.38674 574.10674 -57.26466 620.52293 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-132.38674 616.12384 m
-132.38674 578.50696 L
-132.38674 576.08079 -130.41269 574.10674 -127.98765 574.10674 C
-61.66375 574.10674 L
-59.23871 574.10674 -57.26466 576.08079 -57.26466 578.50696 C
-57.26466 616.12384 L
-57.26466 618.54973 -59.23871 620.52293 -61.66375 620.52293 C
-127.98765 620.52293 L
-130.41269 620.52293 -132.38674 618.54973 -132.38674 616.12384 C
@c
F

@rax %Note: Object
-132.38617 521.67543 -43.88117 568.18743 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-127.98737 521.67543 m
-48.28025 521.67543 L
-45.85436 521.67543 -43.88117 523.64948 -43.88117 526.07452 C
-43.88117 563.78863 L
-43.88117 566.21452 -45.85436 568.18743 -48.28025 568.18743 C
-127.98737 568.18743 L
-130.41326 568.18743 -132.38617 566.21452 -132.38617 563.78863 C
-132.38617 526.07452 L
-132.38617 523.64948 -130.41326 521.67543 -127.98737 521.67543 C
@c
F

@rax %Note: Object
-132.38617 469.49499 -17.15216 515.91090 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-127.98737 469.49499 m
-21.55124 469.49499 L
-19.12620 469.49499 -17.15216 471.46876 -17.15216 473.89380 C
-17.15216 511.51181 L
-17.15216 513.93685 -19.12620 515.91090 -21.55124 515.91090 C
-127.98737 515.91090 L
-130.41326 515.91090 -132.38617 513.93685 -132.38617 511.51181 C
-132.38617 473.89380 L
-132.38617 471.46876 -130.41326 469.49499 -127.98737 469.49499 C
@c
F

@rax %Note: Object
-132.77764 416.51660 -84.31569 464.04964 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-88.71477 464.04964 m
-128.37770 464.04964 L
-130.80387 464.04964 -132.77764 462.07559 -132.77764 459.65055 C
-132.77764 420.91569 L
-132.77764 418.48951 -130.80387 416.51660 -128.37770 416.51660 C
-88.71477 416.51660 L
-86.28860 416.51660 -84.31569 418.48951 -84.31569 420.91569 C
-84.31569 459.65055 L
-84.31569 462.07559 -86.28860 464.04964 -88.71477 464.04964 C
@c
F

@rax %Note: Object
-78.74731 417.07502 -30.29443 463.49093 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-34.69238 463.49093 m
-74.34737 463.49093 L
-76.77326 463.49093 -78.74731 461.51688 -78.74731 459.09184 C
-78.74731 421.47411 L
-78.74731 419.04907 -76.77326 417.07502 -74.34737 417.07502 C
-34.69238 417.07502 L
-32.26620 417.07502 -30.29443 419.04907 -30.29443 421.47411 C
-30.29443 459.09184 L
-30.29443 461.51688 -32.26620 463.49093 -34.69238 463.49093 C
@c
F

@rax %Note: Object
-25.00809 417.07502 23.44507 463.49093 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
19.04598 463.49093 m
-20.60816 463.49093 L
-23.03405 463.49093 -25.00809 461.51688 -25.00809 459.09184 C
-25.00809 421.47411 L
-25.00809 419.04907 -23.03405 417.07502 -20.60816 417.07502 C
19.04598 417.07502 L
21.47187 417.07502 23.44507 419.04907 23.44507 421.47411 C
23.44507 459.09184 L
23.44507 461.51688 21.47187 463.49093 19.04598 463.49093 C
@c
F

@rax %Note: Object
28.70617 416.93528 91.16107 463.63039 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
91.16107 421.22920 m
91.16107 459.33619 L
91.16107 461.70539 89.23521 463.63039 86.86715 463.63039 C
33.00009 463.63039 L
30.63203 463.63039 28.70617 461.70539 28.70617 459.33619 C
28.70617 421.22920 L
28.70617 418.86113 30.63203 416.93528 33.00009 416.93528 C
86.86715 416.93528 L
89.23521 416.93528 91.16107 418.86113 91.16107 421.22920 C
@c
F

@rax %Note: Object
431.57764 417.07502 479.46359 463.49093 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
475.06450 463.49093 m
435.97644 463.49093 L
433.55055 463.49093 431.57764 461.51688 431.57764 459.09184 C
431.57764 421.47411 L
431.57764 419.04907 433.55055 417.07502 435.97644 417.07502 C
475.06450 417.07502 L
477.49068 417.07502 479.46359 419.04907 479.46359 421.47411 C
479.46359 459.09184 L
479.46359 461.51688 477.49068 463.49093 475.06450 463.49093 C
@c
F

@rax %Note: Object
485.17427 417.07502 533.34340 463.49093 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
528.94545 463.49093 m
489.57449 463.49093 L
487.14831 463.49093 485.17427 461.51688 485.17427 459.09184 C
485.17427 421.47411 L
485.17427 419.04907 487.14831 417.07502 489.57449 417.07502 C
528.94545 417.07502 L
531.37134 417.07502 533.34340 419.04907 533.34340 421.47411 C
533.34340 459.09184 L
533.34340 461.51688 531.37134 463.49093 528.94545 463.49093 C
@c
F

@rax %Note: Object
538.78025 416.71531 586.81020 463.85036 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
582.41112 463.85036 m
543.18019 463.85036 L
540.75430 463.85036 538.78025 461.87631 538.78025 459.45128 C
538.78025 421.11439 L
538.78025 418.68850 540.75430 416.71531 543.18019 416.71531 C
582.41112 416.71531 L
584.83729 416.71531 586.81020 418.68850 586.81020 421.11439 C
586.81020 459.45128 L
586.81020 461.87631 584.83729 463.85036 582.41112 463.85036 C
@c
F

@rax %Note: Object
592.85140 416.71531 640.88050 463.85036 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
636.48255 463.85036 m
597.25049 463.85036 L
594.82460 463.85036 592.85140 461.87631 592.85140 459.45128 C
592.85140 421.11439 L
592.85140 418.68850 594.82460 416.71531 597.25049 416.71531 C
636.48255 416.71531 L
638.90844 416.71531 640.88050 418.68850 640.88050 421.11439 C
640.88050 459.45128 L
640.88050 461.87631 638.90844 463.85036 636.48255 463.85036 C
@c
F

@rax %Note: Object
566.09915 626.48702 641.60220 672.90321 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
637.20312 672.90321 m
570.49824 672.90321 L
568.07206 672.90321 566.09915 670.92917 566.09915 668.50413 C
566.09915 630.88611 L
566.09915 628.46107 568.07206 626.48702 570.49824 626.48702 C
637.20312 626.48702 L
639.62929 626.48702 641.60220 628.46107 641.60220 630.88611 C
641.60220 668.50413 L
641.60220 670.92917 639.62929 672.90321 637.20312 672.90321 C
@c
F

@rax %Note: Object
62.99660 166.60120 444.82054 403.29128 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
436.38151 403.29128 m
71.43761 403.29128 L
66.77773 403.29128 62.99660 399.54132 62.99660 394.91121 C
62.99660 174.98126 L
62.99660 170.35115 66.77773 166.60120 71.43761 166.60120 C
436.38151 166.60120 L
441.04054 166.60120 444.82054 170.35115 444.82054 174.98126 C
444.82054 394.91121 L
444.82054 399.54132 441.04054 403.29128 436.38151 403.29128 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
