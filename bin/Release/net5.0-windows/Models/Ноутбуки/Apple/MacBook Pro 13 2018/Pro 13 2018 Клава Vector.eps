%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -87 454 698 748 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: Pro 13 2018 Клава Vector.eps
%%CreationDate: Thu May 30 19:27:58 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
-86.73194 454.21710 697.63209 747.59613 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
693.49606 674.13713 m
693.49606 671.39405 691.27200 669.16998 688.52891 669.16998 C
621.82403 669.16998 L
619.08094 669.16998 616.85717 671.39405 616.85717 674.13713 C
616.85717 711.18822 L
616.85717 713.93102 619.08094 716.15509 621.82403 716.15509 C
688.52891 716.15509 L
691.27200 716.15509 693.49606 713.93102 693.49606 711.18822 C
693.49606 674.13713 L
@c
693.05896 464.36598 m
693.05896 461.62205 690.83518 459.39912 688.09209 459.39912 C
648.57600 459.39912 L
645.83291 459.39912 643.60913 461.62205 643.60913 464.36598 C
643.60913 502.13509 L
643.60913 504.87817 645.83291 507.10195 648.57600 507.10195 C
688.09209 507.10195 L
690.83518 507.10195 693.05896 504.87817 693.05896 502.13509 C
693.05896 464.36598 L
@c
638.70406 464.36598 m
638.70406 461.62205 636.48000 459.39912 633.73691 459.39912 C
595.07206 459.39912 L
592.32898 459.39912 590.10491 461.62205 590.10491 464.36598 C
590.10491 502.13509 L
590.10491 504.87817 592.32898 507.10195 595.07206 507.10195 C
633.73691 507.10195 L
636.48000 507.10195 638.70406 504.87817 638.70406 502.13509 C
638.70406 464.36598 L
@c
585.52101 464.72513 m
585.52101 461.98318 583.29808 459.75798 580.55499 459.75798 C
541.46693 459.75798 L
538.72413 459.75798 536.50006 461.98318 536.50006 464.72513 C
536.50006 501.77622 L
536.50006 504.51902 538.72413 506.74195 541.46693 506.74195 C
580.55499 506.74195 L
583.29808 506.74195 585.52101 504.51902 585.52101 501.77622 C
585.52101 464.72513 L
@c
531.35717 464.72513 m
531.35717 461.98318 529.13395 459.75798 526.39115 459.75798 C
487.86917 459.75798 L
485.12693 459.75798 482.90315 461.98318 482.90315 464.72513 C
482.90315 501.77622 L
482.90315 504.51902 485.12693 506.74195 487.86917 506.74195 C
526.39115 506.74195 L
529.13395 506.74195 531.35717 504.51902 531.35717 501.77622 C
531.35717 464.72513 L
@c
478.33597 464.48107 m
478.33597 461.80715 476.14791 459.61909 473.47512 459.61909 C
420.80797 459.61909 L
418.13405 459.61909 415.94598 461.80715 415.94598 464.48107 C
415.94598 502.02000 L
415.94598 504.69420 418.13405 506.88198 420.80797 506.88198 C
473.47512 506.88198 L
476.14791 506.88198 478.33597 504.69420 478.33597 502.02000 C
478.33597 464.48107 L
@c
415.30394 554.19619 m
415.30394 556.93899 417.52715 559.16220 420.26995 559.16220 C
459.64205 559.16220 L
462.38513 559.16220 464.60806 556.93899 464.60806 554.19619 C
464.60806 517.14510 L
464.60806 514.40202 462.38513 512.17909 459.64205 512.17909 C
420.26995 512.17909 L
417.52715 512.17909 415.30394 514.40202 415.30394 517.14510 C
415.30394 554.19619 L
@c
411.39694 517.14510 m
411.39694 514.40202 409.17402 512.17909 406.43093 512.17909 C
366.77509 512.17909 L
364.03313 512.17909 361.80907 514.40202 361.80907 517.14510 C
361.80907 554.19619 L
361.80907 556.93899 364.03313 559.16220 366.77509 559.16220 C
406.43093 559.16220 L
409.17402 559.16220 411.39694 556.93899 411.39694 554.19619 C
411.39694 517.14510 L
@c
411.30992 464.72513 m
411.30992 461.98318 409.08699 459.75798 406.34504 459.75798 C
151.58013 459.75798 L
148.83704 459.75798 146.61298 461.98318 146.61298 464.72513 C
146.61298 501.77622 L
146.61298 504.51902 148.83704 506.74195 151.58013 506.74195 C
406.34504 506.74195 L
409.08699 506.74195 411.30992 504.51902 411.30992 501.77622 C
411.30992 464.72513 L
@c
146.61213 554.19619 m
146.61213 556.93899 148.83591 559.16220 151.57899 559.16220 C
190.66706 559.16220 L
193.41014 559.16220 195.63392 556.93899 195.63392 554.19619 C
195.63392 517.14510 L
195.63392 514.40202 193.41014 512.17909 190.66706 512.17909 C
151.57899 512.17909 L
148.83591 512.17909 146.61213 514.40202 146.61213 517.14510 C
146.61213 554.19619 L
@c
141.92107 517.14510 m
141.92107 514.40202 139.69701 512.17909 136.95392 512.17909 C
98.43307 512.17909 L
95.68998 512.17909 93.46706 514.40202 93.46706 517.14510 C
93.46706 554.19619 L
93.46706 556.93899 95.68998 559.16220 98.43307 559.16220 C
136.95392 559.16220 L
139.69701 559.16220 141.92107 556.93899 141.92107 554.19619 C
141.92107 517.14510 L
@c
141.92107 464.48107 m
141.92107 461.80715 139.73301 459.61909 137.05909 459.61909 C
84.32617 459.61909 L
81.65197 459.61909 79.46391 461.80715 79.46391 464.48107 C
79.46391 502.02000 L
79.46391 504.69420 81.65197 506.88198 84.32617 506.88198 C
137.05909 506.88198 L
139.73301 506.88198 141.92107 504.69420 141.92107 502.02000 C
141.92107 464.48107 L
@c
74.77115 464.72513 m
74.77115 461.98318 72.54794 459.75798 69.80513 459.75798 C
31.00110 459.75798 L
28.25802 459.75798 26.03395 461.98318 26.03395 464.72513 C
26.03395 501.77622 L
26.03395 504.51902 28.25802 506.74195 31.00110 506.74195 C
69.80513 506.74195 L
72.54794 506.74195 74.77115 504.51902 74.77115 501.77622 C
74.77115 464.72513 L
@c
21.03307 464.72513 m
21.03307 461.98318 18.80901 459.75798 16.06592 459.75798 C
-22.73783 459.75798 L
-25.48205 459.75798 -27.70498 461.98318 -27.70498 464.72513 C
-27.70498 501.77622 L
-27.70498 504.51902 -25.48205 506.74195 -22.73783 506.74195 C
16.06592 506.74195 L
18.80901 506.74195 21.03307 504.51902 21.03307 501.77622 C
21.03307 464.72513 L
@c
-32.98904 464.16699 m
-32.98904 461.42419 -35.21282 459.20013 -37.95591 459.20013 C
-77.05304 459.20013 L
-79.79499 459.20013 -82.01991 461.42419 -82.01991 464.16699 C
-82.01991 502.33408 L
-82.01991 505.07717 -79.79499 507.30123 -77.05304 507.30123 C
-37.95591 507.30123 L
-35.21282 507.30123 -32.98904 505.07717 -32.98904 502.33408 C
-32.98904 464.16699 L
@c
-82.03209 554.19619 m
-82.03209 556.93899 -79.80888 559.16220 -77.06608 559.16220 C
29.20706 559.16220 L
31.95014 559.16220 34.17392 556.93899 34.17392 554.19619 C
34.17392 517.14510 L
34.17392 514.40202 31.95014 512.17909 29.20706 512.17909 C
-77.06608 512.17909 L
-79.80888 512.17909 -82.03209 514.40202 -82.03209 517.14510 C
-82.03209 554.19619 L
@c
-82.00205 711.18822 m
-82.00205 713.93102 -79.77798 716.15509 -77.03603 716.15509 C
-37.67187 716.15509 L
-34.92907 716.15509 -32.70501 713.93102 -32.70501 711.18822 C
-32.70501 674.13713 L
-32.70501 671.39405 -34.92907 669.16998 -37.67187 669.16998 C
-77.03603 669.16998 L
-79.77798 669.16998 -82.00205 671.39405 -82.00205 674.13713 C
-82.00205 711.18822 L
@c
-81.90907 737.61222 m
-81.90907 740.41200 -79.63795 742.68312 -76.83704 742.68312 C
-10.89298 742.68312 L
-8.09206 742.68312 -5.82094 740.41200 -5.82094 737.61222 C
-5.82094 726.62202 L
-5.82094 723.82110 -8.09206 721.54998 -10.89298 721.54998 C
-76.83704 721.54998 L
-79.63795 721.54998 -81.90907 723.82110 -81.90907 726.62202 C
-81.90907 737.61222 L
@c
-0.51789 737.61222 m
-0.51789 740.41200 1.75294 742.68312 4.55414 742.68312 C
42.72491 742.68312 L
45.52611 742.68312 47.79694 740.41200 47.79694 737.61222 C
47.79694 726.62202 L
47.79694 723.82110 45.52611 721.54998 42.72491 721.54998 C
4.55414 721.54998 L
1.75294 721.54998 -0.51789 723.82110 -0.51789 726.62202 C
-0.51789 737.61222 L
@c
53.00192 737.61222 m
53.00192 740.41200 55.27191 742.68312 58.07310 742.68312 C
96.24501 742.68312 L
99.04592 742.68312 101.31591 740.41200 101.31591 737.61222 C
101.31591 726.62202 L
101.31591 723.82110 99.04592 721.54998 96.24501 721.54998 C
58.07310 721.54998 L
55.27191 721.54998 53.00192 723.82110 53.00192 726.62202 C
53.00192 737.61222 L
@c
107.00107 737.61222 m
107.00107 740.41200 109.27106 742.68312 112.07197 742.68312 C
149.96098 742.68312 L
152.76217 742.68312 155.03216 740.41200 155.03216 737.61222 C
155.03216 726.62202 L
155.03216 723.82110 152.76217 721.54998 149.96098 721.54998 C
112.07197 721.54998 L
109.27106 721.54998 107.00107 723.82110 107.00107 726.62202 C
107.00107 737.61222 L
@c
160.77600 737.61222 m
160.77600 740.41200 163.04712 742.68312 165.84803 742.68312 C
204.30312 742.68312 L
207.10318 742.68312 209.37402 740.41200 209.37402 737.61222 C
209.37402 726.62202 L
209.37402 723.82110 207.10318 721.54998 204.30312 721.54998 C
165.84803 721.54998 L
163.04712 721.54998 160.77600 723.82110 160.77600 726.62202 C
160.77600 737.61222 L
@c
214.32104 737.61222 m
214.32104 740.41200 216.59216 742.68312 219.39194 742.68312 C
258.13106 742.68312 L
260.93197 742.68312 263.20195 740.41200 263.20195 737.61222 C
263.20195 726.62202 L
263.20195 723.82110 260.93197 721.54998 258.13106 721.54998 C
219.39194 721.54998 L
216.59216 721.54998 214.32104 723.82110 214.32104 726.62202 C
214.32104 737.61222 L
@c
267.97493 737.61222 m
267.97493 740.41200 270.24605 742.68312 273.04696 742.68312 C
312.06898 742.68312 L
314.87017 742.68312 317.14101 740.41200 317.14101 737.61222 C
317.14101 726.62202 L
317.14101 723.82110 314.87017 721.54998 312.06898 721.54998 C
273.04696 721.54998 L
270.24605 721.54998 267.97493 723.82110 267.97493 726.62202 C
267.97493 737.61222 L
@c
321.62598 737.61222 m
321.62598 740.41200 323.89597 742.68312 326.69717 742.68312 C
365.71918 742.68312 L
368.52009 742.68312 370.79093 740.41200 370.79093 737.61222 C
370.79093 726.62202 L
370.79093 723.82110 368.52009 721.54998 365.71918 721.54998 C
326.69717 721.54998 L
323.89597 721.54998 321.62598 723.82110 321.62598 726.62202 C
321.62598 737.61222 L
@c
375.27307 737.61222 m
375.27307 740.41200 377.54391 742.68312 380.34510 742.68312 C
419.36712 742.68312 L
422.16803 742.68312 424.43802 740.41200 424.43802 737.61222 C
424.43802 726.62202 L
424.43802 723.82110 422.16803 721.54998 419.36712 721.54998 C
380.34510 721.54998 L
377.54391 721.54998 375.27307 723.82110 375.27307 726.62202 C
375.27307 737.61222 L
@c
429.20504 737.61222 m
429.20504 740.41200 431.47502 742.68312 434.27594 742.68312 C
473.29795 742.68312 L
476.10000 742.68312 478.36998 740.41200 478.36998 737.61222 C
478.36998 726.62202 L
478.36998 723.82110 476.10000 721.54998 473.29795 721.54998 C
434.27594 721.54998 L
431.47502 721.54998 429.20504 723.82110 429.20504 726.62202 C
429.20504 737.61222 L
@c
482.64406 737.61222 m
482.64406 740.41200 484.91518 742.68312 487.71609 742.68312 C
526.73811 742.68312 L
529.53902 742.68312 531.80901 740.41200 531.80901 737.61222 C
531.80901 726.62202 L
531.80901 723.82110 529.53902 721.54998 526.73811 721.54998 C
487.71609 721.54998 L
484.91518 721.54998 482.64406 723.82110 482.64406 726.62202 C
482.64406 737.61222 L
@c
536.57915 737.61222 m
536.57915 740.41200 538.84998 742.68312 541.65118 742.68312 C
580.39002 742.68312 L
583.19008 742.68312 585.46091 740.41200 585.46091 737.61222 C
585.46091 726.62202 L
585.46091 723.82110 583.19008 721.54998 580.39002 721.54998 C
541.65118 721.54998 L
538.84998 721.54998 536.57915 723.82110 536.57915 726.62202 C
536.57915 737.61222 L
@c
612.75912 674.13713 m
612.75912 671.39405 610.53506 669.16998 607.79197 669.16998 C
568.13698 669.16998 L
565.39304 669.16998 563.17011 671.39405 563.17011 674.13713 C
563.17011 711.18822 L
563.17011 713.93102 565.39304 716.15509 568.13698 716.15509 C
607.79197 716.15509 L
610.53506 716.15509 612.75912 713.93102 612.75912 711.18822 C
612.75912 674.13713 L
@c
639.62192 621.75713 m
639.62192 619.01405 637.39814 616.79112 634.65591 616.79112 C
595.00091 616.79112 L
592.25811 616.79112 590.03405 619.01405 590.03405 621.75713 C
590.03405 658.80822 L
590.03405 661.55102 592.25811 663.77509 595.00091 663.77509 C
634.65591 663.77509 L
637.39814 663.77509 639.62192 661.55102 639.62192 658.80822 C
639.62192 621.75713 L
@c
687.52602 611.53313 m
690.26910 611.53313 692.49317 609.30907 692.49317 606.56598 C
692.49317 569.51603 L
692.49317 566.77323 690.26910 564.54917 687.52602 564.54917 C
608.00513 564.54917 L
605.26205 564.54917 603.03798 566.77323 603.03798 569.51603 C
603.03798 606.56598 L
603.03798 609.30907 605.26205 611.53313 608.00513 611.53313 C
687.52602 611.53313 L
@c
692.56091 621.75713 m
692.56091 619.01405 690.33713 616.79112 687.59518 616.79112 C
648.79002 616.79112 L
646.04693 616.79112 643.82315 619.01405 643.82315 621.75713 C
643.82315 658.80822 L
643.82315 661.55102 646.04693 663.77509 648.79002 663.77509 C
687.59518 663.77509 L
690.33713 663.77509 692.56091 661.55102 692.56091 658.80822 C
692.56091 621.75713 L
@c
576.35093 554.19619 m
576.35093 556.93899 578.57499 559.16220 581.31694 559.16220 C
687.85115 559.16220 L
690.59509 559.16220 692.81802 556.93899 692.81802 554.19619 C
692.81802 517.14510 L
692.81802 514.40202 690.59509 512.17909 687.85115 512.17909 C
581.31694 512.17909 L
578.57499 512.17909 576.35093 514.40202 576.35093 517.14510 C
576.35093 554.19619 L
@c
554.38101 564.54917 m
551.63792 564.54917 549.41414 566.77323 549.41414 569.51603 C
549.41414 606.56598 L
549.41414 609.30907 551.63792 611.53313 554.38101 611.53313 C
593.18504 611.53313 L
595.92898 611.53313 598.15191 609.30907 598.15191 606.56598 C
598.15191 569.51603 L
598.15191 566.77323 595.92898 564.54917 593.18504 564.54917 C
554.38101 564.54917 L
@c
522.92608 554.19619 m
522.92608 556.93899 525.14901 559.16220 527.89209 559.16220 C
566.98016 559.16220 L
569.72296 559.16220 571.94617 556.93899 571.94617 554.19619 C
571.94617 517.14510 L
571.94617 514.40202 569.72296 512.17909 566.98016 512.17909 C
527.89209 512.17909 L
525.14901 512.17909 522.92608 514.40202 522.92608 517.14510 C
522.92608 554.19619 L
@c
500.82009 564.54917 m
498.07701 564.54917 495.85294 566.77323 495.85294 569.51603 C
495.85294 606.56598 L
495.85294 609.30907 498.07701 611.53313 500.82009 611.53313 C
539.34208 611.53313 L
542.08403 611.53313 544.30809 609.30907 544.30809 606.56598 C
544.30809 569.51603 L
544.30809 566.77323 542.08403 564.54917 539.34208 564.54917 C
500.82009 564.54917 L
@c
469.11402 554.19619 m
469.11402 556.93899 471.33808 559.16220 474.08117 559.16220 C
513.16894 559.16220 L
515.91203 559.16220 518.13609 556.93899 518.13609 554.19619 C
518.13609 517.14510 L
518.13609 514.40202 515.91203 512.17909 513.16894 512.17909 C
474.08117 512.17909 L
471.33808 512.17909 469.11402 514.40202 469.11402 517.14510 C
469.11402 554.19619 L
@c
442.07802 606.56598 m
442.07802 609.30907 444.30208 611.53313 447.04403 611.53313 C
485.84891 611.53313 L
488.59200 611.53313 490.81493 609.30907 490.81493 606.56598 C
490.81493 569.51603 L
490.81493 566.77323 488.59200 564.54917 485.84891 564.54917 C
447.04403 564.54917 L
444.30208 564.54917 442.07802 566.77323 442.07802 569.51603 C
442.07802 606.56598 L
@c
504.76110 674.13713 m
504.76110 671.39405 502.53704 669.16998 499.79395 669.16998 C
460.98907 669.16998 L
458.24598 669.16998 456.02192 671.39405 456.02192 674.13713 C
456.02192 711.18822 L
456.02192 713.93102 458.24598 716.15509 460.98907 716.15509 C
499.79395 716.15509 L
502.53704 716.15509 504.76110 713.93102 504.76110 711.18822 C
504.76110 674.13713 L
@c
526.70098 663.77509 m
529.44406 663.77509 531.66813 661.55102 531.66813 658.80822 C
531.66813 621.75713 L
531.66813 619.01405 529.44406 616.79112 526.70098 616.79112 C
487.33002 616.79112 L
484.58608 616.79112 482.36315 619.01405 482.36315 621.75713 C
482.36315 658.80822 L
482.36315 661.55102 484.58608 663.77509 487.33002 663.77509 C
526.70098 663.77509 L
@c
580.55613 663.77509 m
583.29893 663.77509 585.52214 661.55102 585.52214 658.80822 C
585.52214 621.75713 L
585.52214 619.01405 583.29893 616.79112 580.55613 616.79112 C
541.18403 616.79112 L
538.44009 616.79112 536.21717 619.01405 536.21717 621.75713 C
536.21717 658.80822 L
536.21717 661.55102 538.44009 663.77509 541.18403 663.77509 C
580.55613 663.77509 L
@c
558.94394 674.13713 m
558.94394 671.39405 556.72101 669.16998 553.97707 669.16998 C
514.32208 669.16998 L
511.58013 669.16998 509.35606 671.39405 509.35606 674.13713 C
509.35606 711.18822 L
509.35606 713.93102 511.58013 716.15509 514.32208 716.15509 C
553.97707 716.15509 L
556.72101 716.15509 558.94394 713.93102 558.94394 711.18822 C
558.94394 674.13713 L
@c
434.05200 616.79112 m
431.30891 616.79112 429.08598 619.01405 429.08598 621.75713 C
429.08598 658.80822 L
429.08598 661.55102 431.30891 663.77509 434.05200 663.77509 C
472.57313 663.77509 L
475.31594 663.77509 477.54000 661.55102 477.54000 658.80822 C
477.54000 621.75713 L
477.54000 619.01405 475.31594 616.79112 472.57313 616.79112 C
434.05200 616.79112 L
@c
388.73197 606.56598 m
388.73197 609.30907 390.95603 611.53313 393.69798 611.53313 C
432.21997 611.53313 L
434.96306 611.53313 437.18598 609.30907 437.18598 606.56598 C
437.18598 569.51603 L
437.18598 566.77323 434.96306 564.54917 432.21997 564.54917 C
393.69798 564.54917 L
390.95603 564.54917 388.73197 566.77323 388.73197 569.51603 C
388.73197 606.56598 L
@c
402.06104 674.13713 m
402.06104 711.18822 L
402.06104 713.93102 404.28510 716.15509 407.02706 716.15509 C
446.11512 716.15509 L
448.85792 716.15509 451.08198 713.93102 451.08198 711.18822 C
451.08198 674.13713 L
451.08198 671.39405 448.85792 669.16998 446.11512 669.16998 C
407.02706 669.16998 L
404.28510 669.16998 402.06104 671.39405 402.06104 674.13713 C
@c
379.98794 616.79112 m
377.24598 616.79112 375.02192 619.01405 375.02192 621.75713 C
375.02192 658.80822 L
375.02192 661.55102 377.24598 663.77509 379.98794 663.77509 C
419.36003 663.77509 L
422.10198 663.77509 424.32605 661.55102 424.32605 658.80822 C
424.32605 621.75713 L
424.32605 619.01405 422.10198 616.79112 419.36003 616.79112 C
379.98794 616.79112 L
@c
340.00101 564.54917 m
337.25906 564.54917 335.03414 566.77323 335.03414 569.51603 C
335.03414 606.56598 L
335.03414 609.30907 337.25906 611.53313 340.00101 611.53313 C
379.08907 611.53313 L
381.83216 611.53313 384.05594 609.30907 384.05594 606.56598 C
384.05594 569.51603 L
384.05594 566.77323 381.83216 564.54917 379.08907 564.54917 C
340.00101 564.54917 L
@c
308.26403 554.19619 m
308.26403 556.93899 310.48696 559.16220 313.22891 559.16220 C
352.31811 559.16220 L
355.06006 559.16220 357.28413 556.93899 357.28413 554.19619 C
357.28413 517.14510 L
357.28413 514.40202 355.06006 512.17909 352.31811 512.17909 C
313.22891 512.17909 L
310.48696 512.17909 308.26403 514.40202 308.26403 517.14510 C
308.26403 554.19619 L
@c
286.22494 564.54917 m
283.48214 564.54917 281.25893 566.77323 281.25893 569.51603 C
281.25893 606.56598 L
281.25893 609.30907 283.48214 611.53313 286.22494 611.53313 C
325.59817 611.53313 L
328.34098 611.53313 330.56391 609.30907 330.56391 606.56598 C
330.56391 569.51603 L
330.56391 566.77323 328.34098 564.54917 325.59817 564.54917 C
286.22494 564.54917 L
@c
253.92217 554.19619 m
253.92217 556.93899 256.14397 559.16220 258.88791 559.16220 C
298.26000 559.16220 L
301.00309 559.16220 303.22602 556.93899 303.22602 554.19619 C
303.22602 517.14510 L
303.22602 514.40202 301.00309 512.17909 298.26000 512.17909 C
258.88791 512.17909 L
256.14397 512.17909 253.92217 514.40202 253.92217 517.14510 C
253.92217 554.19619 L
@c
232.81115 564.54917 m
230.06806 564.54917 227.84513 566.77323 227.84513 569.51603 C
227.84513 606.56598 L
227.84513 609.30907 230.06806 611.53313 232.81115 611.53313 C
271.61603 611.53313 L
274.35912 611.53313 276.58318 609.30907 276.58318 606.56598 C
276.58318 569.51603 L
276.58318 566.77323 274.35912 564.54917 271.61603 564.54917 C
232.81115 564.54917 L
@c
200.40917 554.19619 m
200.40917 556.93899 202.63209 559.16220 205.37603 559.16220 C
244.74699 559.16220 L
247.48894 559.16220 249.71301 556.93899 249.71301 554.19619 C
249.71301 517.14510 L
249.71301 514.40202 247.48894 512.17909 244.74699 512.17909 C
205.37603 512.17909 L
202.63209 512.17909 200.40917 514.40202 200.40917 517.14510 C
200.40917 554.19619 L
@c
173.90098 606.56598 m
173.90098 609.30907 176.12504 611.53313 178.86699 611.53313 C
217.67216 611.53313 L
220.41496 611.53313 222.63902 609.30907 222.63902 606.56598 C
222.63902 569.51603 L
222.63902 566.77323 220.41496 564.54917 217.67216 564.54917 C
178.86699 564.54917 L
176.12504 564.54917 173.90098 566.77323 173.90098 569.51603 C
173.90098 606.56598 L
@c
236.30513 674.13713 m
236.30513 671.39405 234.08107 669.16998 231.33912 669.16998 C
192.25106 669.16998 L
189.50797 669.16998 187.28391 671.39405 187.28391 674.13713 C
187.28391 711.18822 L
187.28391 713.93102 189.50797 716.15509 192.25106 716.15509 C
231.33912 716.15509 L
234.08107 716.15509 236.30513 713.93102 236.30513 711.18822 C
236.30513 674.13713 L
@c
257.69197 663.77509 m
260.43506 663.77509 262.65912 661.55102 262.65912 658.80822 C
262.65912 621.75713 L
262.65912 619.01405 260.43506 616.79112 257.69197 616.79112 C
218.88794 616.79112 L
216.14513 616.79112 213.92192 619.01405 213.92192 621.75713 C
213.92192 658.80822 L
213.92192 661.55102 216.14513 663.77509 218.88794 663.77509 C
257.69197 663.77509 L
@c
290.28614 674.13713 m
290.28614 671.39405 288.06208 669.16998 285.31899 669.16998 C
246.23093 669.16998 L
243.48813 669.16998 241.26491 671.39405 241.26491 674.13713 C
241.26491 711.18822 L
241.26491 713.93102 243.48813 716.15509 246.23093 716.15509 C
285.31899 716.15509 L
288.06208 716.15509 290.28614 713.93102 290.28614 711.18822 C
290.28614 674.13713 L
@c
312.03808 663.77509 m
314.78003 663.77509 317.00409 661.55102 317.00409 658.80822 C
317.00409 621.75713 L
317.00409 619.01405 314.78003 616.79112 312.03808 616.79112 C
272.66598 616.79112 L
269.92318 616.79112 267.69912 619.01405 267.69912 621.75713 C
267.69912 658.80822 L
267.69912 661.55102 269.92318 663.77509 272.66598 663.77509 C
312.03808 663.77509 L
@c
344.03414 674.13713 m
344.03414 671.39405 341.81008 669.16998 339.06813 669.16998 C
299.98006 669.16998 L
297.23698 669.16998 295.01405 671.39405 295.01405 674.13713 C
295.01405 711.18822 L
295.01405 713.93102 297.23698 716.15509 299.98006 716.15509 C
339.06813 716.15509 L
341.81008 716.15509 344.03414 713.93102 344.03414 711.18822 C
344.03414 674.13713 L
@c
348.95509 674.13713 m
348.95509 711.18822 L
348.95509 713.93102 351.17915 716.15509 353.92195 716.15509 C
393.01002 716.15509 L
395.75197 716.15509 397.97518 713.93102 397.97518 711.18822 C
397.97518 674.13713 L
397.97518 671.39405 395.75197 669.16998 393.01002 669.16998 C
353.92195 669.16998 L
351.17915 669.16998 348.95509 671.39405 348.95509 674.13713 C
@c
365.86800 663.77509 m
368.61109 663.77509 370.83515 661.55102 370.83515 658.80822 C
370.83515 621.75713 L
370.83515 619.01405 368.61109 616.79112 365.86800 616.79112 C
326.77994 616.79112 L
324.03798 616.79112 321.81307 619.01405 321.81307 621.75713 C
321.81307 658.80822 L
321.81307 661.55102 324.03798 663.77509 326.77994 663.77509 C
365.86800 663.77509 L
@c
165.47811 616.79112 m
162.73616 616.79112 160.51294 619.01405 160.51294 621.75713 C
160.51294 658.80822 L
160.51294 661.55102 162.73616 663.77509 165.47811 663.77509 C
204.28413 663.77509 L
207.02608 663.77509 209.25014 661.55102 209.25014 658.80822 C
209.25014 621.75713 L
209.25014 619.01405 207.02608 616.79112 204.28413 616.79112 C
165.47811 616.79112 L
@c
119.95710 606.56598 m
119.95710 609.30907 122.18117 611.53313 124.92397 611.53313 C
164.01203 611.53313 L
166.75512 611.53313 168.97805 609.30907 168.97805 606.56598 C
168.97805 569.51603 L
168.97805 566.77323 166.75512 564.54917 164.01203 564.54917 C
124.92397 564.54917 L
122.18117 564.54917 119.95710 566.77323 119.95710 569.51603 C
119.95710 606.56598 L
@c
133.72413 674.13713 m
133.72413 711.18822 L
133.72413 713.93102 135.94706 716.15509 138.68901 716.15509 C
176.92809 716.15509 L
179.67005 716.15509 181.89298 713.93102 181.89298 711.18822 C
181.89298 674.13713 L
181.89298 671.39405 179.67005 669.16998 176.92809 669.16998 C
138.68901 669.16998 L
135.94706 669.16998 133.72413 671.39405 133.72413 674.13713 C
@c
111.26693 616.79112 m
108.52413 616.79112 106.30091 619.01405 106.30091 621.75713 C
106.30091 658.80822 L
106.30091 661.55102 108.52413 663.77509 111.26693 663.77509 C
150.35499 663.77509 L
153.09808 663.77509 155.32101 661.55102 155.32101 658.80822 C
155.32101 621.75713 L
155.32101 619.01405 153.09808 616.79112 150.35499 616.79112 C
111.26693 616.79112 L
@c
71.16094 564.54917 m
68.41814 564.54917 66.19408 566.77323 66.19408 569.51603 C
66.19408 606.56598 L
66.19408 609.30907 68.41814 611.53313 71.16094 611.53313 C
110.24901 611.53313 L
112.99209 611.53313 115.21616 609.30907 115.21616 606.56598 C
115.21616 569.51603 L
115.21616 566.77323 112.99209 564.54917 110.24901 564.54917 C
71.16094 564.54917 L
@c
39.27005 554.19619 m
39.27005 556.93899 41.49411 559.16220 44.23691 559.16220 C
83.04208 559.16220 L
85.78403 559.16220 88.00894 556.93899 88.00894 554.19619 C
88.00894 517.14510 L
88.00894 514.40202 85.78403 512.17909 83.04208 512.17909 C
44.23691 512.17909 L
41.49411 512.17909 39.27005 514.40202 39.27005 517.14510 C
39.27005 554.19619 L
@c
12.34998 606.56598 m
12.34998 609.30907 14.57405 611.53313 17.31713 611.53313 C
56.12117 611.53313 L
58.86397 611.53313 61.08803 609.30907 61.08803 606.56598 C
61.08803 569.51603 L
61.08803 566.77323 58.86397 564.54917 56.12117 564.54917 C
17.31713 564.54917 L
14.57405 564.54917 12.34998 566.77323 12.34998 569.51603 C
12.34998 606.56598 L
@c
74.48910 674.13713 m
74.48910 671.39405 72.26617 669.16998 69.52195 669.16998 C
30.71792 669.16998 L
27.97512 669.16998 25.75106 671.39405 25.75106 674.13713 C
25.75106 711.18822 L
25.75106 713.93102 27.97512 716.15509 30.71792 716.15509 C
69.52195 716.15509 L
72.26617 716.15509 74.48910 713.93102 74.48910 711.18822 C
74.48910 674.13713 L
@c
79.52712 674.13713 m
79.52712 711.18822 L
79.52712 713.93102 81.75118 716.15509 84.49398 716.15509 C
123.29802 716.15509 L
126.04110 716.15509 128.26517 713.93102 128.26517 711.18822 C
128.26517 674.13713 L
128.26517 671.39405 126.04110 669.16998 123.29802 669.16998 C
84.49398 669.16998 L
81.75118 669.16998 79.52712 671.39405 79.52712 674.13713 C
@c
96.29603 663.77509 m
99.03912 663.77509 101.26318 661.55102 101.26318 658.80822 C
101.26318 621.75713 L
101.26318 619.01405 99.03912 616.79112 96.29603 616.79112 C
57.49115 616.79112 L
54.74806 616.79112 52.52400 619.01405 52.52400 621.75713 C
52.52400 658.80822 L
52.52400 661.55102 54.74806 663.77509 57.49115 663.77509 C
96.29603 663.77509 L
@c
3.74995 616.79112 m
1.00715 616.79112 -1.21691 619.01405 -1.21691 621.75713 C
-1.21691 658.80822 L
-1.21691 661.55102 1.00715 663.77509 3.74995 663.77509 C
42.83802 663.77509 L
45.58110 663.77509 47.80517 661.55102 47.80517 658.80822 C
47.80517 621.75713 L
47.80517 619.01405 45.58110 616.79112 42.83802 616.79112 C
3.74995 616.79112 L
@c
-76.98302 611.72306 m
2.76208 611.72306 L
5.50517 611.72306 7.72809 609.49814 7.72809 606.75619 C
7.72809 569.32498 L
7.72809 566.58302 5.50517 564.36009 2.76208 564.36009 C
-76.98302 564.36009 L
-79.72583 564.36009 -81.94904 566.58302 -81.94904 569.32498 C
-81.94904 606.75619 L
-81.94904 609.49814 -79.72583 611.72306 -76.98302 611.72306 C
@c
-27.98702 674.13713 m
-27.98702 711.18822 L
-27.98702 713.93102 -25.76409 716.15509 -23.02101 716.15509 C
16.06706 716.15509 L
18.80901 716.15509 21.03392 713.93102 21.03392 711.18822 C
21.03392 674.13713 L
21.03392 671.39405 18.80901 669.16998 16.06706 669.16998 C
-23.02101 669.16998 L
-25.76409 669.16998 -27.98702 671.39405 -27.98702 674.13713 C
@c
-10.90488 663.77509 m
-8.16208 663.77509 -5.93887 661.55102 -5.93887 658.80822 C
-5.93887 621.75713 L
-5.93887 619.01405 -8.16208 616.79112 -10.90488 616.79112 C
-76.98302 616.79112 L
-79.72583 616.79112 -81.94904 619.01405 -81.94904 621.75713 C
-81.94904 658.80822 L
-81.94904 661.55102 -79.72583 663.77509 -76.98302 663.77509 C
-10.90488 663.77509 L
@c
590.05417 737.61222 m
590.05417 740.41200 592.32416 742.68312 595.12507 742.68312 C
634.14709 742.68312 L
636.94800 742.68312 639.21912 740.41200 639.21912 737.61222 C
639.21912 726.62202 L
639.21912 723.82110 636.94800 721.54998 634.14709 721.54998 C
595.12507 721.54998 L
592.32416 721.54998 590.05417 723.82110 590.05417 726.62202 C
590.05417 737.61222 L
@c
644.04709 737.61222 m
644.04709 740.41200 646.31707 742.68312 649.11798 742.68312 C
687.85597 742.68312 L
690.65802 742.68312 692.92913 740.41200 692.92913 737.61222 C
692.92913 726.62202 L
692.92913 723.82110 690.65802 721.54998 687.85597 721.54998 C
649.11798 721.54998 L
646.31707 721.54998 644.04709 723.82110 644.04709 726.62202 C
644.04709 737.61222 L
@c
689.67893 747.59613 m
-77.00598 747.59613 L
-82.37792 747.59613 -86.73194 743.24098 -86.73194 737.87017 C
-86.73194 463.94306 L
-86.73194 458.57197 -82.37792 454.21710 -77.00598 454.21710 C
689.67893 454.21710 L
694.07093 454.21710 697.63209 457.77798 697.63209 462.16998 C
697.63209 739.64296 L
697.63209 744.03496 694.07093 747.59613 689.67893 747.59613 C
@c
F

@rax %Note: Object
645.18094 722.68413 691.79499 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
649.11912 722.68413 m
687.85710 722.68413 L
690.02816 722.68413 691.79499 724.45096 691.79499 726.62202 C
691.79499 737.61194 L
691.79499 739.78413 690.02816 741.55011 687.85710 741.55011 C
649.11912 741.55011 L
646.94693 741.55011 645.18094 739.78413 645.18094 737.61194 C
645.18094 726.62202 L
645.18094 724.45096 646.94693 722.68413 649.11912 722.68413 C
@c
F

@rax %Note: Object
591.18690 722.68413 638.08498 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
595.12507 722.68413 m
634.14709 722.68413 L
636.31786 722.68413 638.08498 724.45096 638.08498 726.62202 C
638.08498 737.61194 L
638.08498 739.78413 636.31786 741.55011 634.14709 741.55011 C
595.12507 741.55011 L
592.95402 741.55011 591.18690 739.78413 591.18690 737.61194 C
591.18690 726.62202 L
591.18690 724.45096 592.95402 722.68413 595.12507 722.68413 C
@c
F

@rax %Note: Object
-80.81546 617.92498 -7.07244 662.64094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-80.81546 658.80794 m
-80.81546 621.75713 L
-80.81546 619.64391 -79.09540 617.92498 -76.98246 617.92498 C
-10.90545 617.92498 L
-8.79250 617.92498 -7.07244 619.64391 -7.07244 621.75713 C
-7.07244 658.80794 L
-7.07244 660.92088 -8.79250 662.64094 -10.90545 662.64094 C
-76.98246 662.64094 L
-79.09540 662.64094 -80.81546 660.92088 -80.81546 658.80794 C
@c
F

@rax %Note: Object
-26.85373 670.30413 19.90035 715.02123 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
16.06734 670.30413 m
18.18028 670.30413 19.90035 672.02419 19.90035 674.13713 C
19.90035 711.18822 L
19.90035 713.30117 18.18028 715.02123 16.06734 715.02123 C
-23.02072 715.02123 L
-25.13367 715.02123 -26.85373 713.30117 -26.85373 711.18822 C
-26.85373 674.13713 L
-26.85373 672.02419 -25.13367 670.30413 -23.02072 670.30413 C
16.06734 670.30413 L
@c
F

@rax %Note: Object
-80.81546 565.49339 6.59452 610.58948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-76.98246 565.49339 m
2.76151 565.49339 L
4.87446 565.49339 6.59452 567.21345 6.59452 569.32639 C
6.59452 606.75647 L
6.59452 608.86942 4.87446 610.58948 2.76151 610.58948 C
-76.98246 610.58948 L
-79.09540 610.58948 -80.81546 608.86942 -80.81546 606.75647 C
-80.81546 569.32639 L
-80.81546 567.21345 -79.09540 565.49339 -76.98246 565.49339 C
@c
F

@rax %Note: Object
-0.08306 617.92526 46.67074 662.64123 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
46.67074 621.75713 m
46.67074 658.80822 L
46.67074 660.92117 44.95096 662.64123 42.83773 662.64123 C
3.74995 662.64123 L
1.63672 662.64123 -0.08306 660.92117 -0.08306 658.80822 C
-0.08306 621.75713 L
-0.08306 619.64419 1.63672 617.92526 3.74995 617.92526 C
42.83773 617.92526 L
44.95096 617.92526 46.67074 619.64419 46.67074 621.75713 C
@c
F

@rax %Note: Object
53.65814 617.92498 100.12904 662.64094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
53.65814 658.80794 m
53.65814 621.75713 L
53.65814 619.64391 55.37820 617.92498 57.49115 617.92498 C
96.29603 617.92498 L
98.40926 617.92498 100.12904 619.64391 100.12904 621.75713 C
100.12904 658.80794 L
100.12904 660.92088 98.40926 662.64094 96.29603 662.64094 C
57.49115 662.64094 L
55.37820 662.64094 53.65814 660.92088 53.65814 658.80794 C
@c
F

@rax %Note: Object
80.66069 670.30413 127.13074 715.02123 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
123.29887 670.30413 m
125.41181 670.30413 127.13074 672.02419 127.13074 674.13713 C
127.13074 711.18822 L
127.13074 713.30117 125.41181 715.02123 123.29887 715.02123 C
84.49370 715.02123 L
82.38076 715.02123 80.66069 713.30117 80.66069 711.18822 C
80.66069 674.13713 L
80.66069 672.02419 82.38076 670.30413 84.49370 670.30413 C
123.29887 670.30413 L
@c
F

@rax %Note: Object
26.88548 670.30384 73.35524 715.02094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
69.52224 715.02094 m
30.71735 715.02094 L
28.60441 715.02094 26.88548 713.30088 26.88548 711.18794 C
26.88548 674.13685 L
26.88548 672.02391 28.60441 670.30384 30.71735 670.30384 C
69.52224 670.30384 L
71.63546 670.30384 73.35524 672.02391 73.35524 674.13685 C
73.35524 711.18794 L
73.35524 713.30088 71.63546 715.02094 69.52224 715.02094 C
@c
F

@rax %Note: Object
13.48441 565.68302 59.95446 610.39899 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
17.31742 565.68302 m
56.12145 565.68302 L
58.23439 565.68302 59.95446 567.40309 59.95446 569.51603 C
59.95446 606.56712 L
59.95446 608.68006 58.23439 610.39899 56.12145 610.39899 C
17.31742 610.39899 L
15.20447 610.39899 13.48441 608.68006 13.48441 606.56712 C
13.48441 569.51603 L
13.48441 567.40309 15.20447 565.68302 17.31742 565.68302 C
@c
F

@rax %Note: Object
40.40419 513.31294 86.87537 558.02891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
44.23720 513.31294 m
83.04236 513.31294 L
85.15531 513.31294 86.87537 515.03187 86.87537 517.14482 C
86.87537 554.19591 L
86.87537 556.30885 85.15531 558.02891 83.04236 558.02891 C
44.23720 558.02891 L
42.12425 558.02891 40.40419 556.30885 40.40419 554.19591 C
40.40419 517.14482 L
40.40419 515.03187 42.12425 513.31294 44.23720 513.31294 C
@c
F

@rax %Note: Object
67.32794 565.68302 114.08202 610.39899 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
114.08202 569.51603 m
114.08202 606.56712 L
114.08202 608.68006 112.36195 610.39899 110.24901 610.39899 C
71.16094 610.39899 L
69.04800 610.39899 67.32794 608.68006 67.32794 606.56712 C
67.32794 569.51603 L
67.32794 567.40309 69.04800 565.68302 71.16094 565.68302 C
110.24901 565.68302 L
112.36195 565.68302 114.08202 567.40309 114.08202 569.51603 C
@c
F

@rax %Note: Object
107.43449 617.92526 154.18857 662.64123 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
154.18857 621.75713 m
154.18857 658.80822 L
154.18857 660.92117 152.46850 662.64123 150.35556 662.64123 C
111.26750 662.64123 L
109.15455 662.64123 107.43449 660.92117 107.43449 658.80822 C
107.43449 621.75713 L
107.43449 619.64419 109.15455 617.92526 111.26750 617.92526 C
150.35556 617.92526 L
152.46850 617.92526 154.18857 619.64419 154.18857 621.75713 C
@c
F

@rax %Note: Object
134.85770 670.30413 180.76054 715.02123 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
176.92753 670.30413 m
179.04076 670.30413 180.76054 672.02419 180.76054 674.13713 C
180.76054 711.18822 L
180.76054 713.30117 179.04076 715.02123 176.92753 715.02123 C
138.69071 715.02123 L
136.57663 715.02123 134.85770 713.30117 134.85770 711.18822 C
134.85770 674.13713 L
134.85770 672.02419 136.57663 670.30413 138.69071 670.30413 C
176.92753 670.30413 L
@c
F

@rax %Note: Object
121.09068 565.68302 167.84476 610.39899 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
124.92369 565.68302 m
164.01175 565.68302 L
166.12469 565.68302 167.84476 567.40309 167.84476 569.51603 C
167.84476 606.56712 L
167.84476 608.68006 166.12469 610.39899 164.01175 610.39899 C
124.92369 610.39899 L
122.81074 610.39899 121.09068 608.68006 121.09068 606.56712 C
121.09068 569.51603 L
121.09068 567.40309 122.81074 565.68302 124.92369 565.68302 C
@c
F

@rax %Note: Object
161.64624 617.92526 208.11628 662.64123 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
208.11628 621.75713 m
208.11628 658.80822 L
208.11628 660.92117 206.39707 662.64123 204.28413 662.64123 C
165.47924 662.64123 L
163.36602 662.64123 161.64624 660.92117 161.64624 658.80822 C
161.64624 621.75713 L
161.64624 619.64419 163.36602 617.92526 165.47924 617.92526 C
204.28413 617.92526 L
206.39707 617.92526 208.11628 619.64419 208.11628 621.75713 C
@c
F

@rax %Note: Object
322.94806 617.92498 369.70101 662.64094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
322.94806 658.80794 m
322.94806 621.75713 L
322.94806 619.64391 324.66813 617.92498 326.78107 617.92498 C
365.86913 617.92498 L
367.98208 617.92498 369.70101 619.64391 369.70101 621.75713 C
369.70101 658.80794 L
369.70101 660.92088 367.98208 662.64094 365.86913 662.64094 C
326.78107 662.64094 L
324.66813 662.64094 322.94806 660.92088 322.94806 658.80794 C
@c
F

@rax %Note: Object
350.08866 670.30413 396.84161 715.02123 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
393.00973 670.30413 m
395.12268 670.30413 396.84161 672.02419 396.84161 674.13713 C
396.84161 711.18822 L
396.84161 713.30117 395.12268 715.02123 393.00973 715.02123 C
353.92167 715.02123 L
351.80872 715.02123 350.08866 713.30117 350.08866 711.18822 C
350.08866 674.13713 L
350.08866 672.02419 351.80872 670.30413 353.92167 670.30413 C
393.00973 670.30413 L
@c
F

@rax %Note: Object
296.14734 670.30384 342.90113 715.02094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
339.06813 715.02094 m
299.98035 715.02094 L
297.86712 715.02094 296.14734 713.30088 296.14734 711.18794 C
296.14734 674.13685 L
296.14734 672.02391 297.86712 670.30384 299.98035 670.30384 C
339.06813 670.30384 L
341.18135 670.30384 342.90113 672.02391 342.90113 674.13685 C
342.90113 711.18794 L
342.90113 713.30088 341.18135 715.02094 339.06813 715.02094 C
@c
F

@rax %Note: Object
268.83298 617.92498 315.86995 662.64094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
268.83298 658.80794 m
268.83298 621.75713 L
268.83298 619.64391 270.55304 617.92498 272.66598 617.92498 C
312.03808 617.92498 L
314.15102 617.92498 315.86995 619.64391 315.86995 621.75713 C
315.86995 658.80794 L
315.86995 660.92088 314.15102 662.64094 312.03808 662.64094 C
272.66598 662.64094 L
270.55304 662.64094 268.83298 660.92088 268.83298 658.80794 C
@c
F

@rax %Note: Object
242.39934 670.30384 289.15228 715.02094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
285.32013 715.02094 m
246.23235 715.02094 L
244.11912 715.02094 242.39934 713.30088 242.39934 711.18794 C
242.39934 674.13685 L
242.39934 672.02391 244.11912 670.30384 246.23235 670.30384 C
285.32013 670.30384 L
287.43335 670.30384 289.15228 672.02391 289.15228 674.13685 C
289.15228 711.18794 L
289.15228 713.30088 287.43335 715.02094 285.32013 715.02094 C
@c
F

@rax %Note: Object
215.05578 617.92498 261.52554 662.64094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
215.05578 658.80794 m
215.05578 621.75713 L
215.05578 619.64391 216.77556 617.92498 218.88879 617.92498 C
257.69254 617.92498 L
259.80576 617.92498 261.52554 619.64391 261.52554 621.75713 C
261.52554 658.80794 L
261.52554 660.92088 259.80576 662.64094 257.69254 662.64094 C
218.88879 662.64094 L
216.77556 662.64094 215.05578 660.92088 215.05578 658.80794 C
@c
F

@rax %Note: Object
188.41776 670.30384 235.17184 715.02094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
231.33883 715.02094 m
192.25077 715.02094 L
190.13783 715.02094 188.41776 713.30088 188.41776 711.18794 C
188.41776 674.13685 L
188.41776 672.02391 190.13783 670.30384 192.25077 670.30384 C
231.33883 670.30384 L
233.45178 670.30384 235.17184 672.02391 235.17184 674.13685 C
235.17184 711.18794 L
235.17184 713.30088 233.45178 715.02094 231.33883 715.02094 C
@c
F

@rax %Note: Object
175.03512 565.68302 221.50517 610.39899 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
178.86813 565.68302 m
217.67216 565.68302 L
219.78510 565.68302 221.50517 567.40309 221.50517 569.51603 C
221.50517 606.56712 L
221.50517 608.68006 219.78510 610.39899 217.67216 610.39899 C
178.86813 610.39899 L
176.75518 610.39899 175.03512 608.68006 175.03512 606.56712 C
175.03512 569.51603 L
175.03512 567.40309 176.75518 565.68302 178.86813 565.68302 C
@c
F

@rax %Note: Object
201.54302 513.31294 248.57887 558.02891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
205.37603 513.31294 m
244.74699 513.31294 L
246.85994 513.31294 248.57887 515.03187 248.57887 517.14482 C
248.57887 554.19591 L
248.57887 556.30885 246.85994 558.02891 244.74699 558.02891 C
205.37603 558.02891 L
203.26309 558.02891 201.54302 556.30885 201.54302 554.19591 C
201.54302 517.14482 L
201.54302 515.03187 203.26309 513.31294 205.37603 513.31294 C
@c
F

@rax %Note: Object
228.97928 565.68302 275.44904 610.39899 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
275.44904 569.51603 m
275.44904 606.56712 L
275.44904 608.68006 273.72926 610.39899 271.61603 610.39899 C
232.81228 610.39899 L
230.69906 610.39899 228.97928 608.68006 228.97928 606.56712 C
228.97928 569.51603 L
228.97928 567.40309 230.69906 565.68302 232.81228 565.68302 C
271.61603 565.68302 L
273.72926 565.68302 275.44904 567.40309 275.44904 569.51603 C
@c
F

@rax %Note: Object
255.05575 513.31294 302.09272 558.02891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
258.88876 513.31294 m
298.25972 513.31294 L
300.37266 513.31294 302.09272 515.03187 302.09272 517.14482 C
302.09272 554.19591 L
302.09272 556.30885 300.37266 558.02891 298.25972 558.02891 C
258.88876 558.02891 L
256.77553 558.02891 255.05575 556.30885 255.05575 554.19591 C
255.05575 517.14482 L
255.05575 515.03187 256.77553 513.31294 258.88876 513.31294 C
@c
F

@rax %Note: Object
282.39364 565.68302 329.43061 610.39899 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
329.43061 569.51603 m
329.43061 606.56712 L
329.43061 608.68006 327.71055 610.39899 325.59761 610.39899 C
286.22665 610.39899 L
284.11370 610.39899 282.39364 608.68006 282.39364 606.56712 C
282.39364 569.51603 L
282.39364 567.40309 284.11370 565.68302 286.22665 565.68302 C
325.59761 565.68302 L
327.71055 565.68302 329.43061 567.40309 329.43061 569.51603 C
@c
F

@rax %Note: Object
309.39732 513.31294 356.15140 558.02891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
313.23033 513.31294 m
352.31839 513.31294 L
354.43134 513.31294 356.15140 515.03187 356.15140 517.14482 C
356.15140 554.19591 L
356.15140 556.30885 354.43134 558.02891 352.31839 558.02891 C
313.23033 558.02891 L
311.11739 558.02891 309.39732 556.30885 309.39732 554.19591 C
309.39732 517.14482 L
309.39732 515.03187 311.11739 513.31294 313.23033 513.31294 C
@c
F

@rax %Note: Object
336.16885 565.68302 382.92180 610.39899 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
382.92180 569.51603 m
382.92180 606.56712 L
382.92180 608.68006 381.20173 610.39899 379.08879 610.39899 C
340.00072 610.39899 L
337.88778 610.39899 336.16885 608.68006 336.16885 606.56712 C
336.16885 569.51603 L
336.16885 567.40309 337.88778 565.68302 340.00072 565.68302 C
379.08879 565.68302 L
381.20173 565.68302 382.92180 567.40309 382.92180 569.51603 C
@c
F

@rax %Note: Object
376.15635 617.92526 423.19332 662.64123 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
423.19332 621.75713 m
423.19332 658.80822 L
423.19332 660.92117 421.47326 662.64123 419.36031 662.64123 C
379.98822 662.64123 L
377.87528 662.64123 376.15635 660.92117 376.15635 658.80822 C
376.15635 621.75713 L
376.15635 619.64419 377.87528 617.92526 379.98822 617.92526 C
419.36031 617.92526 L
421.47326 617.92526 423.19332 619.64419 423.19332 621.75713 C
@c
F

@rax %Note: Object
403.19518 670.30413 449.94813 715.02123 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
449.94813 674.13713 m
449.94813 711.18822 L
449.94813 713.30117 448.22806 715.02123 446.11512 715.02123 C
407.02706 715.02123 L
404.91411 715.02123 403.19518 713.30117 403.19518 711.18822 C
403.19518 674.13713 L
403.19518 672.02419 404.91411 670.30413 407.02706 670.30413 C
446.11512 670.30413 L
448.22806 670.30413 449.94813 672.02419 449.94813 674.13713 C
@c
F

@rax %Note: Object
389.86611 565.68302 436.05213 610.39899 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
393.69827 565.68302 m
432.21912 565.68302 L
434.33320 565.68302 436.05213 567.40309 436.05213 569.51603 C
436.05213 606.56712 L
436.05213 608.68006 434.33320 610.39899 432.21912 610.39899 C
393.69827 610.39899 L
391.58504 610.39899 389.86611 608.68006 389.86611 606.56712 C
389.86611 569.51603 L
389.86611 567.40309 391.58504 565.68302 393.69827 565.68302 C
@c
F

@rax %Note: Object
430.21928 617.92526 476.40614 662.64123 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
476.40614 621.75713 m
476.40614 658.80822 L
476.40614 660.92117 474.68608 662.64123 472.57313 662.64123 C
434.05228 662.64123 L
431.93820 662.64123 430.21928 660.92117 430.21928 658.80822 C
430.21928 621.75713 L
430.21928 619.64419 431.93820 617.92526 434.05228 617.92526 C
472.57313 617.92526 L
474.68608 617.92526 476.40614 619.64419 476.40614 621.75713 C
@c
F

@rax %Note: Object
510.49049 670.30384 557.81036 715.02094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
553.97735 715.02094 m
514.32236 715.02094 L
512.20857 715.02094 510.49049 713.30088 510.49049 711.18794 C
510.49049 674.13685 L
510.49049 672.02391 512.20857 670.30384 514.32236 670.30384 C
553.97735 670.30384 L
556.09058 670.30384 557.81036 672.02391 557.81036 674.13685 C
557.81036 711.18794 L
557.81036 713.30088 556.09058 715.02094 553.97735 715.02094 C
@c
F

@rax %Note: Object
537.35131 617.92498 584.38857 662.64094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
537.35131 658.80794 m
537.35131 621.75713 L
537.35131 619.64391 539.07137 617.92498 541.18431 617.92498 C
580.55556 617.92498 L
582.66850 617.92498 584.38857 619.64391 584.38857 621.75713 C
584.38857 658.80794 L
584.38857 660.92088 582.66850 662.64094 580.55556 662.64094 C
541.18431 662.64094 L
539.07137 662.64094 537.35131 660.92088 537.35131 658.80794 C
@c
F

@rax %Note: Object
483.49701 617.92498 530.53398 662.64094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
483.49701 658.80794 m
483.49701 621.75713 L
483.49701 619.64391 485.21707 617.92498 487.33002 617.92498 C
526.70098 617.92498 L
528.81392 617.92498 530.53398 619.64391 530.53398 621.75713 C
530.53398 658.80794 L
530.53398 660.92088 528.81392 662.64094 526.70098 662.64094 C
487.33002 662.64094 L
485.21707 662.64094 483.49701 660.92088 483.49701 658.80794 C
@c
F

@rax %Note: Object
457.15691 670.30384 503.62696 715.02094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
499.79395 715.02094 m
460.98992 715.02094 L
458.87698 715.02094 457.15691 713.30088 457.15691 711.18794 C
457.15691 674.13685 L
457.15691 672.02391 458.87698 670.30384 460.98992 670.30384 C
499.79395 670.30384 L
501.90690 670.30384 503.62696 672.02391 503.62696 674.13685 C
503.62696 711.18794 L
503.62696 713.30088 501.90690 715.02094 499.79395 715.02094 C
@c
F

@rax %Note: Object
443.21187 565.68302 489.68192 610.39899 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
447.04375 565.68302 m
485.84891 565.68302 L
487.96186 565.68302 489.68192 567.40309 489.68192 569.51603 C
489.68192 606.56712 L
489.68192 608.68006 487.96186 610.39899 485.84891 610.39899 C
447.04375 610.39899 L
444.93080 610.39899 443.21187 608.68006 443.21187 606.56712 C
443.21187 569.51603 L
443.21187 567.40309 444.93080 565.68302 447.04375 565.68302 C
@c
F

@rax %Note: Object
470.24787 513.31294 517.00195 558.02891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
474.08088 513.31294 m
513.16894 513.31294 L
515.28189 513.31294 517.00195 515.03187 517.00195 517.14482 C
517.00195 554.19591 L
517.00195 556.30885 515.28189 558.02891 513.16894 558.02891 C
474.08088 558.02891 L
471.96794 558.02891 470.24787 556.30885 470.24787 554.19591 C
470.24787 517.14482 L
470.24787 515.03187 471.96794 513.31294 474.08088 513.31294 C
@c
F

@rax %Note: Object
496.98680 565.68302 543.17367 610.39899 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
543.17367 569.51603 m
543.17367 606.56712 L
543.17367 608.68006 541.45474 610.39899 539.34180 610.39899 C
500.81981 610.39899 L
498.70687 610.39899 496.98680 608.68006 496.98680 606.56712 C
496.98680 569.51603 L
496.98680 567.40309 498.70687 565.68302 500.81981 565.68302 C
539.34180 565.68302 L
541.45474 565.68302 543.17367 567.40309 543.17367 569.51603 C
@c
F

@rax %Note: Object
524.05965 513.31294 570.81260 558.02891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
527.89153 513.31294 m
566.98044 513.31294 L
569.09367 513.31294 570.81260 515.03187 570.81260 517.14482 C
570.81260 554.19591 L
570.81260 556.30885 569.09367 558.02891 566.98044 558.02891 C
527.89153 558.02891 L
525.77858 558.02891 524.05965 556.30885 524.05965 554.19591 C
524.05965 517.14482 L
524.05965 515.03187 525.77858 513.31294 527.89153 513.31294 C
@c
F

@rax %Note: Object
550.54857 565.68302 597.01833 610.39899 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
597.01833 569.51603 m
597.01833 606.56712 L
597.01833 608.68006 595.29855 610.39899 593.18532 610.39899 C
554.38157 610.39899 L
552.26835 610.39899 550.54857 608.68006 550.54857 606.56712 C
550.54857 569.51603 L
550.54857 567.40309 552.26835 565.68302 554.38157 565.68302 C
593.18532 565.68302 L
595.29855 565.68302 597.01833 567.40309 597.01833 569.51603 C
@c
F

@rax %Note: Object
577.48535 513.31294 691.68444 558.02891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
581.31723 513.31294 m
687.85143 513.31294 L
689.96438 513.31294 691.68444 515.03187 691.68444 517.14482 C
691.68444 554.19591 L
691.68444 556.30885 689.96438 558.02891 687.85143 558.02891 C
581.31723 558.02891 L
579.20428 558.02891 577.48535 556.30885 577.48535 554.19591 C
577.48535 517.14482 L
577.48535 515.03187 579.20428 513.31294 581.31723 513.31294 C
@c
F

@rax %Note: Object
644.95672 617.92498 691.42762 662.64094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
687.59461 662.64094 m
648.78973 662.64094 L
646.67679 662.64094 644.95672 660.92088 644.95672 658.80794 C
644.95672 621.75713 L
644.95672 619.64391 646.67679 617.92498 648.78973 617.92498 C
687.59461 617.92498 L
689.70756 617.92498 691.42762 619.64391 691.42762 621.75713 C
691.42762 658.80794 L
691.42762 660.92088 689.70756 662.64094 687.59461 662.64094 C
@c
F

@rax %Note: Object
604.17184 565.68274 691.35987 610.39871 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
604.17184 606.56683 m
604.17184 569.51575 L
604.17184 567.40280 605.89191 565.68274 608.00485 565.68274 C
687.52573 565.68274 L
689.63981 565.68274 691.35987 567.40280 691.35987 569.51575 C
691.35987 606.56683 L
691.35987 608.67978 689.63981 610.39871 687.52573 610.39871 C
608.00485 610.39871 L
605.89191 610.39871 604.17184 608.67978 604.17184 606.56683 C
@c
F

@rax %Note: Object
591.16819 617.92498 638.48806 662.64094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
634.65619 662.64094 m
595.00120 662.64094 L
592.88712 662.64094 591.16819 660.92088 591.16819 658.80794 C
591.16819 621.75713 L
591.16819 619.64391 592.88712 617.92498 595.00120 617.92498 C
634.65619 617.92498 L
636.76913 617.92498 638.48806 619.64391 638.48806 621.75713 C
638.48806 658.80794 L
638.48806 660.92088 636.76913 662.64094 634.65619 662.64094 C
@c
F

@rax %Note: Object
564.30397 670.30384 611.62498 715.02094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
607.79197 715.02094 m
568.13698 715.02094 L
566.02290 715.02094 564.30397 713.30088 564.30397 711.18794 C
564.30397 674.13685 L
564.30397 672.02391 566.02290 670.30384 568.13698 670.30384 C
607.79197 670.30384 L
609.90491 670.30384 611.62498 672.02391 611.62498 674.13685 C
611.62498 711.18794 L
611.62498 713.30088 609.90491 715.02094 607.79197 715.02094 C
@c
F

@rax %Note: Object
537.71329 722.68413 584.32847 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
541.65146 722.68413 m
580.38945 722.68413 L
582.56135 722.68413 584.32847 724.45096 584.32847 726.62202 C
584.32847 737.61194 L
584.32847 739.78413 582.56135 741.55011 580.38945 741.55011 C
541.65146 741.55011 L
539.48041 741.55011 537.71329 739.78413 537.71329 737.61194 C
537.71329 726.62202 L
537.71329 724.45096 539.48041 722.68413 541.65146 722.68413 C
@c
F

@rax %Note: Object
483.77877 722.68413 530.67685 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
487.71666 722.68413 m
526.73783 722.68413 L
528.90973 722.68413 530.67685 724.45096 530.67685 726.62202 C
530.67685 737.61194 L
530.67685 739.78413 528.90973 741.55011 526.73783 741.55011 C
487.71666 741.55011 L
485.54476 741.55011 483.77877 739.78413 483.77877 737.61194 C
483.77877 726.62202 L
483.77877 724.45096 485.54476 722.68413 487.71666 722.68413 C
@c
F

@rax %Note: Object
430.33833 722.68413 477.23641 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
434.27622 722.68413 m
473.29824 722.68413 L
475.46929 722.68413 477.23641 724.45096 477.23641 726.62202 C
477.23641 737.61194 L
477.23641 739.78413 475.46929 741.55011 473.29824 741.55011 C
434.27622 741.55011 L
432.10545 741.55011 430.33833 739.78413 430.33833 737.61194 C
430.33833 726.62202 L
430.33833 724.45096 432.10545 722.68413 434.27622 722.68413 C
@c
F

@rax %Note: Object
376.40778 722.68413 423.30472 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
380.34567 722.68413 m
419.36655 722.68413 L
421.53761 722.68413 423.30472 724.45096 423.30472 726.62202 C
423.30472 737.61194 L
423.30472 739.78413 421.53761 741.55011 419.36655 741.55011 C
380.34567 741.55011 L
378.17376 741.55011 376.40778 739.78413 376.40778 737.61194 C
376.40778 726.62202 L
376.40778 724.45096 378.17376 722.68413 380.34567 722.68413 C
@c
F

@rax %Note: Object
322.75928 722.68413 369.65735 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
326.69717 722.68413 m
365.71918 722.68413 L
367.89024 722.68413 369.65735 724.45096 369.65735 726.62202 C
369.65735 737.61194 L
369.65735 739.78413 367.89024 741.55011 365.71918 741.55011 C
326.69717 741.55011 L
324.52611 741.55011 322.75928 739.78413 322.75928 737.61194 C
322.75928 726.62202 L
322.75928 724.45096 324.52611 722.68413 326.69717 722.68413 C
@c
F

@rax %Note: Object
269.10964 722.68413 316.00772 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
273.04781 722.68413 m
312.06869 722.68413 L
314.24088 722.68413 316.00772 724.45096 316.00772 726.62202 C
316.00772 737.61194 L
316.00772 739.78413 314.24088 741.55011 312.06869 741.55011 C
273.04781 741.55011 L
270.87562 741.55011 269.10964 739.78413 269.10964 737.61194 C
269.10964 726.62202 L
269.10964 724.45096 270.87562 722.68413 273.04781 722.68413 C
@c
F

@rax %Note: Object
215.45461 722.68413 262.06951 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
219.39250 722.68413 m
258.13049 722.68413 L
260.30268 722.68413 262.06951 724.45096 262.06951 726.62202 C
262.06951 737.61194 L
262.06951 739.78413 260.30268 741.55011 258.13049 741.55011 C
219.39250 741.55011 L
217.22145 741.55011 215.45461 739.78413 215.45461 737.61194 C
215.45461 726.62202 L
215.45461 724.45096 217.22145 722.68413 219.39250 722.68413 C
@c
F

@rax %Note: Object
161.90957 722.68413 208.24157 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
165.84746 722.68413 m
204.30255 722.68413 L
206.47446 722.68413 208.24157 724.45096 208.24157 726.62202 C
208.24157 737.61194 L
208.24157 739.78413 206.47446 741.55011 204.30255 741.55011 C
165.84746 741.55011 L
163.67641 741.55011 161.90957 739.78413 161.90957 737.61194 C
161.90957 726.62202 L
161.90957 724.45096 163.67641 722.68413 165.84746 722.68413 C
@c
F

@rax %Note: Object
108.13521 722.68413 153.89802 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
112.07310 722.68413 m
149.96126 722.68413 L
152.13203 722.68413 153.89802 724.45096 153.89802 726.62202 C
153.89802 737.61194 L
153.89802 739.78413 152.13203 741.55011 149.96126 741.55011 C
112.07310 741.55011 L
109.90120 741.55011 108.13521 739.78413 108.13521 737.61194 C
108.13521 726.62202 L
108.13521 724.45096 109.90120 722.68413 112.07310 722.68413 C
@c
F

@rax %Note: Object
54.13521 722.68413 100.18318 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
58.07310 722.68413 m
96.24501 722.68413 L
98.41720 722.68413 100.18318 724.45096 100.18318 726.62202 C
100.18318 737.61194 L
100.18318 739.78413 98.41720 741.55011 96.24501 741.55011 C
58.07310 741.55011 L
55.90205 741.55011 54.13521 739.78413 54.13521 737.61194 C
54.13521 726.62202 L
54.13521 724.45096 55.90205 722.68413 58.07310 722.68413 C
@c
F

@rax %Note: Object
0.61569 722.68413 46.66252 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
4.55357 722.68413 m
42.72576 722.68413 L
44.89654 722.68413 46.66252 724.45096 46.66252 726.62202 C
46.66252 737.61194 L
46.66252 739.78413 44.89654 741.55011 42.72576 741.55011 C
4.55357 741.55011 L
2.38252 741.55011 0.61569 739.78413 0.61569 737.61194 C
0.61569 726.62202 L
0.61569 724.45096 2.38252 722.68413 4.55357 722.68413 C
@c
F

@rax %Note: Object
-80.77493 722.68413 -6.95509 741.55011 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-76.83704 722.68413 m
-10.89298 722.68413 L
-8.72192 722.68413 -6.95509 724.45096 -6.95509 726.62202 C
-6.95509 737.61194 L
-6.95509 739.78413 -8.72192 741.55011 -10.89298 741.55011 C
-76.83704 741.55011 L
-79.00809 741.55011 -80.77493 739.78413 -80.77493 737.61194 C
-80.77493 726.62202 L
-80.77493 724.45096 -79.00809 722.68413 -76.83704 722.68413 C
@c
F

@rax %Note: Object
-80.86819 670.30413 -33.83915 715.02123 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-77.03518 670.30413 m
-37.67216 670.30413 L
-35.55836 670.30413 -33.83915 672.02419 -33.83915 674.13713 C
-33.83915 711.18822 L
-33.83915 713.30117 -35.55836 715.02123 -37.67216 715.02123 C
-77.03518 715.02123 L
-79.14813 715.02123 -80.86819 713.30117 -80.86819 711.18822 C
-80.86819 674.13713 L
-80.86819 672.02419 -79.14813 670.30413 -77.03518 670.30413 C
@c
F

@rax %Note: Object
-80.89852 513.31294 33.03950 558.02891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-77.06551 513.31294 m
29.20649 513.31294 L
31.32057 513.31294 33.03950 515.03187 33.03950 517.14482 C
33.03950 554.19591 L
33.03950 556.30885 31.32057 558.02891 29.20649 558.02891 C
-77.06551 558.02891 L
-79.17846 558.02891 -80.89852 556.30885 -80.89852 554.19591 C
-80.89852 517.14482 L
-80.89852 515.03187 -79.17846 513.31294 -77.06551 513.31294 C
@c
F

@rax %Note: Object
-80.88520 460.33427 -34.12318 506.16737 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-37.95619 506.16737 m
-77.05304 506.16737 L
-79.16627 506.16737 -80.88520 504.44731 -80.88520 502.33436 C
-80.88520 464.16728 L
-80.88520 462.05433 -79.16627 460.33427 -77.05304 460.33427 C
-37.95619 460.33427 L
-35.84324 460.33427 -34.12318 462.05433 -34.12318 464.16728 C
-34.12318 502.33436 L
-34.12318 504.44731 -35.84324 506.16737 -37.95619 506.16737 C
@c
F

@rax %Note: Object
-26.57169 460.89269 19.89921 505.60866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
16.06649 505.60866 m
-22.73868 505.60866 L
-24.85162 505.60866 -26.57169 503.88888 -26.57169 501.77565 C
-26.57169 464.72485 L
-26.57169 462.61191 -24.85162 460.89269 -22.73868 460.89269 C
16.06649 460.89269 L
18.17943 460.89269 19.89921 462.61191 19.89921 464.72485 C
19.89921 501.77565 L
19.89921 503.88888 18.17943 505.60866 16.06649 505.60866 C
@c
F

@rax %Note: Object
27.16753 460.89269 73.63757 505.60866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
69.80457 505.60866 m
31.00054 505.60866 L
28.88759 505.60866 27.16753 503.88888 27.16753 501.77565 C
27.16753 464.72485 L
27.16753 462.61191 28.88759 460.89269 31.00054 460.89269 C
69.80457 460.89269 L
71.91751 460.89269 73.63757 462.61191 73.63757 464.72485 C
73.63757 501.77565 L
73.63757 503.88888 71.91751 505.60866 69.80457 505.60866 C
@c
F

@rax %Note: Object
80.59861 460.75351 140.78750 505.74841 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
137.05965 505.74841 m
84.32646 505.74841 L
82.27049 505.74841 80.59861 504.07625 80.59861 502.02028 C
80.59861 464.48050 L
80.59861 462.42539 82.27049 460.75351 84.32646 460.75351 C
137.05965 460.75351 L
139.11562 460.75351 140.78750 462.42539 140.78750 464.48050 C
140.78750 502.02028 L
140.78750 504.07625 139.11562 505.74841 137.05965 505.74841 C
@c
F

@rax %Note: Object
94.60006 513.31266 140.78693 558.02863 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
136.95392 558.02863 m
98.43307 558.02863 L
96.32013 558.02863 94.60006 556.30857 94.60006 554.19562 C
94.60006 517.14482 L
94.60006 515.03159 96.32013 513.31266 98.43307 513.31266 C
136.95392 513.31266 L
139.06715 513.31266 140.78693 515.03159 140.78693 517.14482 C
140.78693 554.19562 L
140.78693 556.30857 139.06715 558.02863 136.95392 558.02863 C
@c
F

@rax %Note: Object
147.74598 513.31294 194.50006 558.02891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
151.57899 513.31294 m
190.66706 513.31294 L
192.78000 513.31294 194.50006 515.03187 194.50006 517.14482 C
194.50006 554.19591 L
194.50006 556.30885 192.78000 558.02891 190.66706 558.02891 C
151.57899 558.02891 L
149.46605 558.02891 147.74598 556.30885 147.74598 554.19591 C
147.74598 517.14482 L
147.74598 515.03187 149.46605 513.31294 151.57899 513.31294 C
@c
F

@rax %Note: Object
147.74655 460.89269 410.17776 505.60866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
406.34476 505.60866 m
151.57956 505.60866 L
149.46661 505.60866 147.74655 503.88888 147.74655 501.77565 C
147.74655 464.72485 L
147.74655 462.61191 149.46661 460.89269 151.57956 460.89269 C
406.34476 460.89269 L
408.45770 460.89269 410.17776 462.61191 410.17776 464.72485 C
410.17776 501.77565 L
410.17776 503.88888 408.45770 505.60866 406.34476 505.60866 C
@c
F

@rax %Note: Object
362.94350 513.31266 410.26365 558.02863 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
406.43150 558.02863 m
366.77650 558.02863 L
364.66243 558.02863 362.94350 556.30857 362.94350 554.19562 C
362.94350 517.14482 L
362.94350 515.03159 364.66243 513.31266 366.77650 513.31266 C
406.43150 513.31266 L
408.54444 513.31266 410.26365 515.03159 410.26365 517.14482 C
410.26365 554.19562 L
410.26365 556.30857 408.54444 558.02863 406.43150 558.02863 C
@c
F

@rax %Note: Object
416.43751 513.31294 463.47449 558.02891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
420.27052 513.31294 m
459.64148 513.31294 L
461.75443 513.31294 463.47449 515.03187 463.47449 517.14482 C
463.47449 554.19591 L
463.47449 556.30885 461.75443 558.02891 459.64148 558.02891 C
420.27052 558.02891 L
418.15757 558.02891 416.43751 556.30885 416.43751 554.19591 C
416.43751 517.14482 L
416.43751 515.03187 418.15757 513.31294 420.27052 513.31294 C
@c
F

@rax %Note: Object
417.07956 460.75351 477.20268 505.74841 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
473.47455 505.74841 m
420.80769 505.74841 L
418.75143 505.74841 417.07956 504.07625 417.07956 502.02028 C
417.07956 464.48050 L
417.07956 462.42539 418.75143 460.75351 420.80769 460.75351 C
473.47455 460.75351 L
475.53052 460.75351 477.20268 462.42539 477.20268 464.48050 C
477.20268 502.02028 L
477.20268 504.07625 475.53052 505.74841 473.47455 505.74841 C
@c
F

@rax %Note: Object
484.03644 460.89269 530.22359 505.60866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
526.39058 505.60866 m
487.86945 505.60866 L
485.75565 505.60866 484.03644 503.88888 484.03644 501.77565 C
484.03644 464.72485 L
484.03644 462.61191 485.75565 460.89269 487.86945 460.89269 C
526.39058 460.89269 L
528.50353 460.89269 530.22359 462.61191 530.22359 464.72485 C
530.22359 501.77565 L
530.22359 503.88888 528.50353 505.60866 526.39058 505.60866 C
@c
F

@rax %Note: Object
537.63364 460.89269 584.38772 505.60866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
580.55471 505.60866 m
541.46665 505.60866 L
539.35370 505.60866 537.63364 503.88888 537.63364 501.77565 C
537.63364 464.72485 L
537.63364 462.61191 539.35370 460.89269 541.46665 460.89269 C
580.55471 460.89269 L
582.66765 460.89269 584.38772 462.61191 584.38772 464.72485 C
584.38772 501.77565 L
584.38772 503.88888 582.66765 505.60866 580.55471 505.60866 C
@c
F

@rax %Note: Object
591.23934 460.53213 637.57020 505.96809 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
633.73720 505.96809 m
595.07235 505.96809 L
592.95912 505.96809 591.23934 504.24803 591.23934 502.13509 C
591.23934 464.36513 L
591.23934 462.25219 592.95912 460.53213 595.07235 460.53213 C
633.73720 460.53213 L
635.85014 460.53213 637.57020 462.25219 637.57020 464.36513 C
637.57020 502.13509 L
637.57020 504.24803 635.85014 505.96809 633.73720 505.96809 C
@c
F

@rax %Note: Object
644.74271 460.53213 691.92482 505.96809 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
688.09181 505.96809 m
648.57572 505.96809 L
646.46277 505.96809 644.74271 504.24803 644.74271 502.13509 C
644.74271 464.36513 L
644.74271 462.25219 646.46277 460.53213 648.57572 460.53213 C
688.09181 460.53213 L
690.20476 460.53213 691.92482 462.25219 691.92482 464.36513 C
691.92482 502.13509 L
691.92482 504.24803 690.20476 505.96809 688.09181 505.96809 C
@c
F

@rax %Note: Object
617.99131 670.30384 692.36220 715.02094 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
688.52920 715.02094 m
621.82431 715.02094 L
619.71137 715.02094 617.99131 713.30088 617.99131 711.18794 C
617.99131 674.13685 L
617.99131 672.02391 619.71137 670.30384 621.82431 670.30384 C
688.52920 670.30384 L
690.64214 670.30384 692.36220 672.02391 692.36220 674.13685 C
692.36220 711.18794 L
692.36220 713.30088 690.64214 715.02094 688.52920 715.02094 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
