%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -53 97 809 711 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: Pro 13 2018 Панель Full Vecto...
%%CreationDate: Thu May 30 19:27:26 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
-52.38142 110.66627 808.08180 710.76076 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
802.65345 375.19483 m
773.74035 375.19483 L
773.74035 659.22576 L
802.65345 659.22576 L
802.65345 375.19483 L
@c
765.70526 590.49184 m
765.70526 587.74876 763.48233 585.52469 760.73839 585.52469 C
694.03323 585.52469 L
691.29043 585.52469 689.06721 587.74876 689.06721 590.49184 C
689.06721 627.54180 L
689.06721 630.28488 691.29043 632.50866 694.03323 632.50866 C
760.73839 632.50866 L
763.48233 632.50866 765.70526 630.28488 765.70526 627.54180 C
765.70526 590.49184 L
@c
765.26844 380.72069 m
765.26844 377.97676 763.04438 375.75383 760.30129 375.75383 C
720.78520 375.75383 L
718.04239 375.75383 715.81918 377.97676 715.81918 380.72069 C
715.81918 418.48980 L
715.81918 421.23175 718.04239 423.45581 720.78520 423.45581 C
760.30129 423.45581 L
763.04438 423.45581 765.26844 421.23175 765.26844 418.48980 C
765.26844 380.72069 L
@c
710.91326 380.72069 m
710.91326 377.97676 708.69033 375.75383 705.94639 375.75383 C
667.28126 375.75383 L
664.53846 375.75383 662.31524 377.97676 662.31524 380.72069 C
662.31524 418.48980 L
662.31524 421.23175 664.53846 423.45581 667.28126 423.45581 C
705.94639 423.45581 L
708.69033 423.45581 710.91326 421.23175 710.91326 418.48980 C
710.91326 380.72069 L
@c
657.73134 381.07984 m
657.73134 378.33676 655.50728 376.11269 652.76419 376.11269 C
613.67641 376.11269 L
610.93332 376.11269 608.70926 378.33676 608.70926 381.07984 C
608.70926 418.12980 L
608.70926 420.87373 610.93332 423.09666 613.67641 423.09666 C
652.76419 423.09666 L
655.50728 423.09666 657.73134 420.87373 657.73134 418.12980 C
657.73134 381.07984 L
@c
603.56721 381.07984 m
603.56721 378.33676 601.34343 376.11269 598.60035 376.11269 C
560.07836 376.11269 L
557.33641 376.11269 555.11235 378.33676 555.11235 381.07984 C
555.11235 418.12980 L
555.11235 420.87373 557.33641 423.09666 560.07836 423.09666 C
598.60035 423.09666 L
601.34343 423.09666 603.56721 420.87373 603.56721 418.12980 C
603.56721 381.07984 L
@c
569.59342 134.00674 m
569.59342 128.90891 565.42025 124.76183 560.29238 124.76183 C
195.46044 124.76069 L
190.33228 124.76069 186.15940 128.90778 186.15940 134.00674 C
186.15940 354.51468 L
186.15940 359.61279 190.33143 363.76072 195.46044 363.76072 C
560.29238 363.76072 L
565.42025 363.76072 569.59342 359.61279 569.59342 354.51468 C
569.59342 134.00674 L
@c
156.53537 375.97380 m
153.86230 375.97380 151.67424 378.16072 151.67424 380.83465 C
151.67424 418.37471 L
151.67424 421.04891 153.86230 423.23584 156.53537 423.23584 C
209.26942 423.23584 L
211.94334 423.23584 214.13027 421.04891 214.13027 418.37471 C
214.13027 380.83465 L
214.13027 378.16072 211.94334 375.97380 209.26942 375.97380 C
156.53537 375.97380 L
@c
146.98120 381.07984 m
146.98120 378.33676 144.75742 376.11269 142.01433 376.11269 C
103.21030 376.11269 L
100.46721 376.11269 98.24343 378.33676 98.24343 381.07984 C
98.24343 418.12980 L
98.24343 420.87373 100.46721 423.09666 103.21030 423.09666 C
142.01433 423.09666 L
144.75742 423.09666 146.98120 420.87373 146.98120 418.12980 C
146.98120 381.07984 L
@c
93.24227 381.07984 m
93.24227 378.33676 91.01934 376.11269 88.27625 376.11269 C
49.47137 376.11269 L
46.72828 376.11269 44.50422 378.33676 44.50422 381.07984 C
44.50422 418.12980 L
44.50422 420.87373 46.72828 423.09666 49.47137 423.09666 C
88.27625 423.09666 L
91.01934 423.09666 93.24227 420.87373 93.24227 418.12980 C
93.24227 381.07984 L
@c
39.22044 380.52085 m
39.22044 377.77776 36.99638 375.55483 34.25329 375.55483 C
-4.84356 375.55483 L
-7.58580 375.55483 -9.80872 377.77776 -9.80872 380.52085 C
-9.80872 418.68765 L
-9.80872 421.43187 -7.58580 423.65480 -4.84356 423.65480 C
34.25329 423.65480 L
36.99638 423.65480 39.22044 421.43187 39.22044 418.68765 C
39.22044 380.52085 L
@c
-9.82261 470.54976 m
-9.82261 473.29285 -7.59855 475.51578 -4.85575 475.51578 C
101.41625 475.51578 L
104.15934 475.51578 106.38340 473.29285 106.38340 470.54976 C
106.38340 433.49981 L
106.38340 430.75672 104.15934 428.53266 101.41625 428.53266 C
-4.85575 428.53266 L
-7.59855 428.53266 -9.82261 430.75672 -9.82261 433.49981 C
-9.82261 470.54976 L
@c
-9.79257 627.54180 m
-9.79257 630.28488 -7.56879 632.50866 -4.82570 632.50866 C
34.53732 632.50866 L
37.28041 632.50866 39.50419 630.28488 39.50419 627.54180 C
39.50419 590.49184 L
39.50419 587.74876 37.28041 585.52469 34.53732 585.52469 C
-4.82570 585.52469 L
-7.56879 585.52469 -9.79257 587.74876 -9.79257 590.49184 C
-9.79257 627.54180 L
@c
-9.69874 653.96580 m
-9.69874 656.76671 -7.42876 659.03783 -4.62756 659.03783 C
61.31735 659.03783 L
64.11742 659.03783 66.38825 656.76671 66.38825 653.96580 C
66.38825 642.97587 L
66.38825 640.17581 64.11742 637.90384 61.31735 637.90384 C
-4.62756 637.90384 L
-7.42876 637.90384 -9.69874 640.17581 -9.69874 642.97587 C
-9.69874 653.96580 L
@c
71.69244 653.96580 m
71.69244 656.76671 73.96243 659.03783 76.76334 659.03783 C
114.93524 659.03783 L
117.73644 659.03783 120.00643 656.76671 120.00643 653.96580 C
120.00643 642.97587 L
120.00643 640.17581 117.73644 637.90384 114.93524 637.90384 C
76.76334 637.90384 L
73.96243 637.90384 71.69244 640.17581 71.69244 642.97587 C
71.69244 653.96580 L
@c
125.21140 653.96580 m
125.21140 656.76671 127.48224 659.03783 130.28230 659.03783 C
168.45420 659.03783 L
171.25540 659.03783 173.52737 656.76671 173.52737 653.96580 C
173.52737 642.97587 L
173.52737 640.17581 171.25540 637.90384 168.45420 637.90384 C
130.28230 637.90384 L
127.48224 637.90384 125.21140 640.17581 125.21140 642.97587 C
125.21140 653.96580 L
@c
179.21027 653.96580 m
179.21027 656.76671 181.48139 659.03783 184.28230 659.03783 C
222.17046 659.03783 L
224.97137 659.03783 227.24135 656.76671 227.24135 653.96580 C
227.24135 642.97587 L
227.24135 640.17581 224.97137 637.90384 222.17046 637.90384 C
184.28230 637.90384 L
181.48139 637.90384 179.21027 640.17581 179.21027 642.97587 C
179.21027 653.96580 L
@c
232.98633 653.96580 m
232.98633 656.76671 235.25631 659.03783 238.05723 659.03783 C
276.51231 659.03783 L
279.31323 659.03783 281.58435 656.76671 281.58435 653.96580 C
281.58435 642.97587 L
281.58435 640.17581 279.31323 637.90384 276.51231 637.90384 C
238.05723 637.90384 L
235.25631 637.90384 232.98633 640.17581 232.98633 642.97587 C
232.98633 653.96580 L
@c
286.53024 653.96580 m
286.53024 656.76671 288.80135 659.03783 291.60227 659.03783 C
330.34025 659.03783 L
333.14145 659.03783 335.41228 656.76671 335.41228 653.96580 C
335.41228 642.97587 L
335.41228 640.17581 333.14145 637.90384 330.34025 637.90384 C
291.60227 637.90384 L
288.80135 637.90384 286.53024 640.17581 286.53024 642.97587 C
286.53024 653.96580 L
@c
340.18526 653.96580 m
340.18526 656.76671 342.45524 659.03783 345.25729 659.03783 C
384.27846 659.03783 L
387.07937 659.03783 389.35134 656.76671 389.35134 653.96580 C
389.35134 642.97587 L
389.35134 640.17581 387.07937 637.90384 384.27846 637.90384 C
345.25729 637.90384 L
342.45524 637.90384 340.18526 640.17581 340.18526 642.97587 C
340.18526 653.96580 L
@c
393.83518 653.96580 m
393.83518 656.76671 396.10630 659.03783 398.90636 659.03783 C
437.92923 659.03783 L
440.73043 659.03783 443.00041 656.76671 443.00041 653.96580 C
443.00041 642.97587 L
443.00041 640.17581 440.73043 637.90384 437.92923 637.90384 C
398.90636 637.90384 L
396.10630 637.90384 393.83518 640.17581 393.83518 642.97587 C
393.83518 653.96580 L
@c
447.48340 653.96580 m
447.48340 656.76671 449.75339 659.03783 452.55543 659.03783 C
491.57631 659.03783 L
494.37723 659.03783 496.64835 656.76671 496.64835 653.96580 C
496.64835 642.97587 L
496.64835 640.17581 494.37723 637.90384 491.57631 637.90384 C
452.55543 637.90384 L
449.75339 637.90384 447.48340 640.17581 447.48340 642.97587 C
447.48340 653.96580 L
@c
501.41424 653.96580 m
501.41424 656.76671 503.68535 659.03783 506.48627 659.03783 C
545.50828 659.03783 L
548.30920 659.03783 550.57918 656.76671 550.57918 653.96580 C
550.57918 642.97587 L
550.57918 640.17581 548.30920 637.90384 545.50828 637.90384 C
506.48627 637.90384 L
503.68535 637.90384 501.41424 640.17581 501.41424 642.97587 C
501.41424 653.96580 L
@c
554.85439 653.96580 m
554.85439 656.76671 557.12438 659.03783 559.92643 659.03783 C
598.94731 659.03783 L
601.74822 659.03783 604.02019 656.76671 604.02019 653.96580 C
604.02019 642.97587 L
604.02019 640.17581 601.74822 637.90384 598.94731 637.90384 C
559.92643 637.90384 L
557.12438 637.90384 554.85439 640.17581 554.85439 642.97587 C
554.85439 653.96580 L
@c
608.78835 653.96580 m
608.78835 656.76671 611.06031 659.03783 613.86123 659.03783 C
652.59921 659.03783 L
655.40041 659.03783 657.67124 656.76671 657.67124 653.96580 C
657.67124 642.97587 L
657.67124 640.17581 655.40041 637.90384 652.59921 637.90384 C
613.86123 637.90384 L
611.06031 637.90384 608.78835 640.17581 608.78835 642.97587 C
608.78835 653.96580 L
@c
684.96831 590.49184 m
684.96831 587.74876 682.74425 585.52469 680.00145 585.52469 C
640.34646 585.52469 L
637.60337 585.52469 635.37931 587.74876 635.37931 590.49184 C
635.37931 627.54180 L
635.37931 630.28488 637.60337 632.50866 640.34646 632.50866 C
680.00145 632.50866 L
682.74425 632.50866 684.96831 630.28488 684.96831 627.54180 C
684.96831 590.49184 L
@c
711.83140 538.11184 m
711.83140 535.36876 709.60819 533.14469 706.86539 533.14469 C
667.21039 533.14469 L
664.46731 533.14469 662.24324 535.36876 662.24324 538.11184 C
662.24324 575.16180 L
662.24324 577.90488 664.46731 580.12866 667.21039 580.12866 C
706.86539 580.12866 L
709.60819 580.12866 711.83140 577.90488 711.83140 575.16180 C
711.83140 538.11184 L
@c
759.73635 527.88784 m
762.47943 527.88784 764.70236 525.66378 764.70236 522.92069 C
764.70236 485.86989 L
764.70236 483.12680 762.47943 480.90387 759.73635 480.90387 C
680.21433 480.90387 L
677.47124 480.90387 675.24718 483.12680 675.24718 485.86989 C
675.24718 522.92069 L
675.24718 525.66378 677.47124 527.88784 680.21433 527.88784 C
759.73635 527.88784 L
@c
764.77124 538.11184 m
764.77124 535.36876 762.54633 533.14469 759.80438 533.14469 C
720.99921 533.14469 L
718.25641 533.14469 716.03235 535.36876 716.03235 538.11184 C
716.03235 575.16180 L
716.03235 577.90488 718.25641 580.12866 720.99921 580.12866 C
759.80438 580.12866 L
762.54633 580.12866 764.77124 577.90488 764.77124 575.16180 C
764.77124 538.11184 L
@c
648.56126 470.54976 m
648.56126 473.29285 650.78419 475.51578 653.52728 475.51578 C
760.06120 475.51578 L
762.80428 475.51578 765.02835 473.29285 765.02835 470.54976 C
765.02835 433.49981 L
765.02835 430.75672 762.80428 428.53266 760.06120 428.53266 C
653.52728 428.53266 L
650.78419 428.53266 648.56126 430.75672 648.56126 433.49981 C
648.56126 470.54976 L
@c
626.59134 480.90387 m
623.84825 480.90387 621.62419 483.12680 621.62419 485.86989 C
621.62419 522.92069 L
621.62419 525.66378 623.84825 527.88784 626.59134 527.88784 C
665.39537 527.88784 L
668.13846 527.88784 670.36224 525.66378 670.36224 522.92069 C
670.36224 485.86989 L
670.36224 483.12680 668.13846 480.90387 665.39537 480.90387 C
626.59134 480.90387 L
@c
595.13528 470.54976 m
595.13528 473.29285 597.35934 475.51578 600.10129 475.51578 C
639.19020 475.51578 L
641.93244 475.51578 644.15537 473.29285 644.15537 470.54976 C
644.15537 433.49981 L
644.15537 430.75672 641.93244 428.53266 639.19020 428.53266 C
600.10129 428.53266 L
597.35934 428.53266 595.13528 430.75672 595.13528 433.49981 C
595.13528 470.54976 L
@c
573.02929 480.90387 m
570.28620 480.90387 568.06328 483.12680 568.06328 485.86989 C
568.06328 522.92069 L
568.06328 525.66378 570.28620 527.88784 573.02929 527.88784 C
611.55128 527.88784 L
614.29323 527.88784 616.51729 525.66378 616.51729 522.92069 C
616.51729 485.86989 L
616.51729 483.12680 614.29323 480.90387 611.55128 480.90387 C
573.02929 480.90387 L
@c
546.29036 428.53266 m
543.54728 428.53266 541.32321 430.75672 541.32321 433.49981 C
541.32321 470.54976 L
541.32321 473.29285 543.54728 475.51578 546.29036 475.51578 C
585.37843 475.51578 L
588.12123 475.51578 590.34529 473.29285 590.34529 470.54976 C
590.34529 433.49981 L
590.34529 430.75672 588.12123 428.53266 585.37843 428.53266 C
546.29036 428.53266 L
@c
488.15518 418.37471 m
488.15518 421.04891 490.34324 423.23584 493.01745 423.23584 C
545.68431 423.23584 L
548.35824 423.23584 550.54545 421.04891 550.54545 418.37471 C
550.54545 380.83465 L
550.54545 378.16072 548.35824 375.97380 545.68431 375.97380 C
493.01745 375.97380 L
490.34324 375.97380 488.15518 378.16072 488.15518 380.83465 C
488.15518 418.37471 L
@c
487.51342 470.54976 m
487.51342 473.29285 489.73720 475.51578 492.48028 475.51578 C
531.85124 475.51578 L
534.59433 475.51578 536.81839 473.29285 536.81839 470.54976 C
536.81839 433.49981 L
536.81839 430.75672 534.59433 428.53266 531.85124 428.53266 C
492.48028 428.53266 L
489.73720 428.53266 487.51342 430.75672 487.51342 433.49981 C
487.51342 470.54976 L
@c
465.90718 480.90387 m
463.16523 480.90387 460.94230 483.12680 460.94230 485.86989 C
460.94230 522.92069 L
460.94230 525.66378 463.16523 527.88784 465.90718 527.88784 C
504.42945 527.88784 L
507.17225 527.88784 509.39631 525.66378 509.39631 522.92069 C
509.39631 485.86989 L
509.39631 483.12680 507.17225 480.90387 504.42945 480.90387 C
465.90718 480.90387 L
@c
478.64126 428.53266 m
438.98627 428.53266 L
436.24233 428.53266 434.01940 430.75672 434.01940 433.49981 C
434.01940 470.54976 L
434.01940 473.29285 436.24233 475.51578 438.98627 475.51578 C
478.64126 475.51578 L
481.38321 475.51578 483.60728 473.29285 483.60728 470.54976 C
483.60728 433.49981 L
483.60728 430.75672 481.38321 428.53266 478.64126 428.53266 C
@c
218.82246 418.12980 m
218.82246 420.87373 221.04624 423.09666 223.78932 423.09666 C
478.55424 423.09666 L
481.29732 423.09666 483.52139 420.87373 483.52139 418.12980 C
483.52139 381.07984 L
483.52139 378.33676 481.29732 376.11269 478.55424 376.11269 C
223.78932 376.11269 L
221.04624 376.11269 218.82246 378.33676 218.82246 381.07984 C
218.82246 418.12980 L
@c
218.82132 470.54976 m
218.82132 473.29285 221.04539 475.51578 223.78819 475.51578 C
262.87625 475.51578 L
265.61934 475.51578 267.84340 473.29285 267.84340 470.54976 C
267.84340 433.49981 L
267.84340 430.75672 265.61934 428.53266 262.87625 428.53266 C
223.78819 428.53266 L
221.04539 428.53266 218.82132 430.75672 218.82132 433.49981 C
218.82132 470.54976 L
@c
197.13345 480.90387 m
194.39036 480.90387 192.16630 483.12680 192.16630 485.86989 C
192.16630 522.92069 L
192.16630 525.66378 194.39036 527.88784 197.13345 527.88784 C
236.22123 527.88784 L
238.96431 527.88784 241.18838 525.66378 241.18838 522.92069 C
241.18838 485.86989 L
241.18838 483.12680 238.96431 480.90387 236.22123 480.90387 C
197.13345 480.90387 L
@c
165.67625 470.54976 m
165.67625 473.29285 167.90031 475.51578 170.64340 475.51578 C
209.16340 475.51578 L
211.90620 475.51578 214.13027 473.29285 214.13027 470.54976 C
214.13027 433.49981 L
214.13027 430.75672 211.90620 428.53266 209.16340 428.53266 C
170.64340 428.53266 L
167.90031 428.53266 165.67625 430.75672 165.67625 433.49981 C
165.67625 470.54976 L
@c
143.37043 480.90387 m
140.62734 480.90387 138.40328 483.12680 138.40328 485.86989 C
138.40328 522.92069 L
138.40328 525.66378 140.62734 527.88784 143.37043 527.88784 C
182.45820 527.88784 L
185.20129 527.88784 187.42535 525.66378 187.42535 522.92069 C
187.42535 485.86989 L
187.42535 483.12680 185.20129 480.90387 182.45820 480.90387 C
143.37043 480.90387 L
@c
111.48038 470.54976 m
111.48038 473.29285 113.70331 475.51578 116.44639 475.51578 C
155.25128 475.51578 L
157.99436 475.51578 160.21843 473.29285 160.21843 470.54976 C
160.21843 433.49981 L
160.21843 430.75672 157.99436 428.53266 155.25128 428.53266 C
116.44639 428.53266 L
113.70331 428.53266 111.48038 430.75672 111.48038 433.49981 C
111.48038 470.54976 L
@c
84.56031 522.92069 m
84.56031 525.66378 86.78324 527.88784 89.52718 527.88784 C
128.33036 527.88784 L
131.07345 527.88784 133.29723 525.66378 133.29723 522.92069 C
133.29723 485.86989 L
133.29723 483.12680 131.07345 480.90387 128.33036 480.90387 C
89.52718 480.90387 L
86.78324 480.90387 84.56031 483.12680 84.56031 485.86989 C
84.56031 522.92069 L
@c
146.69830 590.49184 m
146.69830 587.74876 144.47537 585.52469 141.73228 585.52469 C
102.92740 585.52469 L
100.18545 585.52469 97.96139 587.74876 97.96139 590.49184 C
97.96139 627.54180 L
97.96139 630.28488 100.18545 632.50866 102.92740 632.50866 C
141.73228 632.50866 L
144.47537 632.50866 146.69830 630.28488 146.69830 627.54180 C
146.69830 590.49184 L
@c
168.50523 580.12866 m
171.24831 580.12866 173.47238 577.90488 173.47238 575.16180 C
173.47238 538.11184 L
173.47238 535.36876 171.24831 533.14469 168.50523 533.14469 C
129.70035 533.14469 L
126.95726 533.14469 124.73433 535.36876 124.73433 538.11184 C
124.73433 575.16180 L
124.73433 577.90488 126.95726 580.12866 129.70035 580.12866 C
168.50523 580.12866 L
@c
200.47436 590.49184 m
200.47436 587.74876 198.25030 585.52469 195.50835 585.52469 C
156.70318 585.52469 L
153.96038 585.52469 151.73745 587.74876 151.73745 590.49184 C
151.73745 627.54180 L
151.73745 630.28488 153.96038 632.50866 156.70318 632.50866 C
195.50835 632.50866 L
198.25030 632.50866 200.47436 630.28488 200.47436 627.54180 C
200.47436 590.49184 L
@c
222.56532 580.12866 m
225.30841 580.12866 227.53134 577.90488 227.53134 575.16180 C
227.53134 538.11184 L
227.53134 535.36876 225.30841 533.14469 222.56532 533.14469 C
183.47726 533.14469 L
180.73446 533.14469 178.51039 535.36876 178.51039 538.11184 C
178.51039 575.16180 L
178.51039 577.90488 180.73446 580.12866 183.47726 580.12866 C
222.56532 580.12866 L
@c
254.10444 590.49184 m
254.10444 587.74876 251.88038 585.52469 249.13729 585.52469 C
210.90019 585.52469 L
208.15625 585.52469 205.93332 587.74876 205.93332 590.49184 C
205.93332 627.54180 L
205.93332 630.28488 208.15625 632.50866 210.90019 632.50866 C
249.13729 632.50866 L
251.88038 632.50866 254.10444 630.28488 254.10444 627.54180 C
254.10444 590.49184 L
@c
276.49332 580.12866 m
279.23641 580.12866 281.45934 577.90488 281.45934 575.16180 C
281.45934 538.11184 L
281.45934 535.36876 279.23641 533.14469 276.49332 533.14469 C
237.68929 533.14469 L
234.94535 533.14469 232.72243 535.36876 232.72243 538.11184 C
232.72243 575.16180 L
232.72243 577.90488 234.94535 580.12866 237.68929 580.12866 C
276.49332 580.12866 L
@c
308.51518 590.49184 m
308.51518 587.74876 306.29140 585.52469 303.54831 585.52469 C
264.46025 585.52469 L
261.71745 585.52469 259.49339 587.74876 259.49339 590.49184 C
259.49339 627.54180 L
259.49339 630.28488 261.71745 632.50866 264.46025 632.50866 C
303.54831 632.50866 L
306.29140 632.50866 308.51518 630.28488 308.51518 627.54180 C
308.51518 590.49184 L
@c
329.90230 580.12866 m
332.64539 580.12866 334.86831 577.90488 334.86831 575.16180 C
334.86831 538.11184 L
334.86831 535.36876 332.64539 533.14469 329.90230 533.14469 C
291.09827 533.14469 L
288.35518 533.14469 286.13140 535.36876 286.13140 538.11184 C
286.13140 575.16180 L
286.13140 577.90488 288.35518 580.12866 291.09827 580.12866 C
329.90230 580.12866 L
@c
362.49534 590.49184 m
362.49534 587.74876 360.27241 585.52469 357.52932 585.52469 C
318.44239 585.52469 L
315.69846 585.52469 313.47524 587.74876 313.47524 590.49184 C
313.47524 627.54180 L
313.47524 630.28488 315.69846 632.50866 318.44239 632.50866 C
357.52932 632.50866 L
360.27241 632.50866 362.49534 630.28488 362.49534 627.54180 C
362.49534 590.49184 L
@c
384.24728 580.12866 m
386.98923 580.12866 389.21329 577.90488 389.21329 575.16180 C
389.21329 538.11184 L
389.21329 535.36876 386.98923 533.14469 384.24728 533.14469 C
344.87518 533.14469 L
342.13238 533.14469 339.90831 535.36876 339.90831 538.11184 C
339.90831 575.16180 L
339.90831 577.90488 342.13238 580.12866 344.87518 580.12866 C
384.24728 580.12866 L
@c
416.24419 590.49184 m
416.24419 587.74876 414.02126 585.52469 411.27846 585.52469 C
372.19039 585.52469 L
369.44646 585.52469 367.22324 587.74876 367.22324 590.49184 C
367.22324 627.54180 L
367.22324 630.28488 369.44646 632.50866 372.19039 632.50866 C
411.27846 632.50866 L
414.02126 632.50866 416.24419 630.28488 416.24419 627.54180 C
416.24419 590.49184 L
@c
438.07833 580.12866 m
440.82028 580.12866 443.04435 577.90488 443.04435 575.16180 C
443.04435 538.11184 L
443.04435 535.36876 440.82028 533.14469 438.07833 533.14469 C
398.99027 533.14469 L
396.24718 533.14469 394.02425 535.36876 394.02425 538.11184 C
394.02425 575.16180 L
394.02425 577.90488 396.24718 580.12866 398.99027 580.12866 C
438.07833 580.12866 L
@c
470.18523 590.49184 m
470.18523 587.74876 467.96145 585.52469 465.21921 585.52469 C
426.13143 585.52469 L
423.38835 585.52469 421.16428 587.74876 421.16428 590.49184 C
421.16428 627.54180 L
421.16428 630.28488 423.38835 632.50866 426.13143 632.50866 C
465.21921 632.50866 L
467.96145 632.50866 470.18523 630.28488 470.18523 627.54180 C
470.18523 590.49184 L
@c
412.21020 480.90387 m
409.46825 480.90387 407.24419 483.12680 407.24419 485.86989 C
407.24419 522.92069 L
407.24419 525.66378 409.46825 527.88784 412.21020 527.88784 C
451.29827 527.88784 L
454.04135 527.88784 456.26542 525.66378 456.26542 522.92069 C
456.26542 485.86989 L
456.26542 483.12680 454.04135 480.90387 451.29827 480.90387 C
412.21020 480.90387 L
@c
380.47323 470.54976 m
380.47323 473.29285 382.69644 475.51578 385.44038 475.51578 C
424.52844 475.51578 L
427.27124 475.51578 429.49446 473.29285 429.49446 470.54976 C
429.49446 433.49981 L
429.49446 430.75672 427.27124 428.53266 424.52844 428.53266 C
385.44038 428.53266 L
382.69644 428.53266 380.47323 430.75672 380.47323 433.49981 C
380.47323 470.54976 L
@c
358.43641 480.90387 m
355.69332 480.90387 353.46926 483.12680 353.46926 485.86989 C
353.46926 522.92069 L
353.46926 525.66378 355.69332 527.88784 358.43641 527.88784 C
397.80737 527.88784 L
400.55046 527.88784 402.77424 525.66378 402.77424 522.92069 C
402.77424 485.86989 L
402.77424 483.12680 400.55046 480.90387 397.80737 480.90387 C
358.43641 480.90387 L
@c
326.13137 470.54976 m
326.13137 473.29285 328.35543 475.51578 331.09824 475.51578 C
370.46920 475.51578 L
373.21228 475.51578 375.43635 473.29285 375.43635 470.54976 C
375.43635 433.49981 L
375.43635 430.75672 373.21228 428.53266 370.46920 428.53266 C
331.09824 428.53266 L
328.35543 428.53266 326.13137 430.75672 326.13137 433.49981 C
326.13137 470.54976 L
@c
305.02233 480.90387 m
302.27839 480.90387 300.05518 483.12680 300.05518 485.86989 C
300.05518 522.92069 L
300.05518 525.66378 302.27839 527.88784 305.02233 527.88784 C
343.82523 527.88784 L
346.56945 527.88784 348.79238 525.66378 348.79238 522.92069 C
348.79238 485.86989 L
348.79238 483.12680 346.56945 480.90387 343.82523 480.90387 C
305.02233 480.90387 L
@c
251.07732 480.90387 m
248.33424 480.90387 246.11131 483.12680 246.11131 485.86989 C
246.11131 522.92069 L
246.11131 525.66378 248.33424 527.88784 251.07732 527.88784 C
289.88135 527.88784 L
292.62444 527.88784 294.84822 525.66378 294.84822 522.92069 C
294.84822 485.86989 L
294.84822 483.12680 292.62444 480.90387 289.88135 480.90387 C
251.07732 480.90387 L
@c
272.61836 470.54976 m
272.61836 473.29285 274.84243 475.51578 277.58523 475.51578 C
316.95619 475.51578 L
319.69843 475.51578 321.92220 473.29285 321.92220 470.54976 C
321.92220 433.49981 L
321.92220 430.75672 319.69843 428.53266 316.95619 428.53266 C
277.58523 428.53266 L
274.84243 428.53266 272.61836 430.75672 272.61836 433.49981 C
272.61836 470.54976 L
@c
491.57036 580.12866 m
494.31345 580.12866 496.53638 577.90488 496.53638 575.16180 C
496.53638 538.11184 L
496.53638 535.36876 494.31345 533.14469 491.57036 533.14469 C
452.19742 533.14469 L
449.45518 533.14469 447.23225 535.36876 447.23225 538.11184 C
447.23225 575.16180 L
447.23225 577.90488 449.45518 580.12866 452.19742 580.12866 C
491.57036 580.12866 L
@c
523.29118 590.49184 m
523.29118 587.74876 521.06825 585.52469 518.32431 585.52469 C
479.23739 585.52469 L
476.49430 585.52469 474.27137 587.74876 474.27137 590.49184 C
474.27137 627.54180 L
474.27137 630.28488 476.49430 632.50866 479.23739 632.50866 C
518.32431 632.50866 L
521.06825 632.50866 523.29118 630.28488 523.29118 627.54180 C
523.29118 590.49184 L
@c
544.78233 580.12866 m
547.52627 580.12866 549.74920 577.90488 549.74920 575.16180 C
549.74920 538.11184 L
549.74920 535.36876 547.52627 533.14469 544.78233 533.14469 C
506.26120 533.14469 L
503.51924 533.14469 501.29518 535.36876 501.29518 538.11184 C
501.29518 575.16180 L
501.29518 577.90488 503.51924 580.12866 506.26120 580.12866 C
544.78233 580.12866 L
@c
576.97030 590.49184 m
576.97030 587.74876 574.74624 585.52469 572.00343 585.52469 C
533.19940 585.52469 L
530.45631 585.52469 528.23339 587.74876 528.23339 590.49184 C
528.23339 627.54180 L
528.23339 630.28488 530.45631 632.50866 533.19940 632.50866 C
572.00343 632.50866 L
574.74624 632.50866 576.97030 630.28488 576.97030 627.54180 C
576.97030 590.49184 L
@c
563.02526 522.92069 m
563.02526 485.86989 L
563.02526 483.12680 560.80120 480.90387 558.05839 480.90387 C
519.25323 480.90387 L
516.51128 480.90387 514.28721 483.12680 514.28721 485.86989 C
514.28721 522.92069 L
514.28721 525.66378 516.51128 527.88784 519.25323 527.88784 C
558.05839 527.88784 L
560.80120 527.88784 563.02526 525.66378 563.02526 522.92069 C
@c
598.91046 580.12866 m
601.65326 580.12866 603.87732 577.90488 603.87732 575.16180 C
603.87732 538.11184 L
603.87732 535.36876 601.65326 533.14469 598.91046 533.14469 C
559.53921 533.14469 L
556.79641 533.14469 554.57235 535.36876 554.57235 538.11184 C
554.57235 575.16180 L
554.57235 577.90488 556.79641 580.12866 559.53921 580.12866 C
598.91046 580.12866 L
@c
652.76532 580.12866 m
655.50841 580.12866 657.73219 577.90488 657.73219 575.16180 C
657.73219 538.11184 L
657.73219 535.36876 655.50841 533.14469 652.76532 533.14469 C
613.39436 533.14469 L
610.65128 533.14469 608.42721 535.36876 608.42721 538.11184 C
608.42721 575.16180 L
608.42721 577.90488 610.65128 580.12866 613.39436 580.12866 C
652.76532 580.12866 L
@c
631.15342 590.49184 m
631.15342 587.74876 628.93020 585.52469 626.18740 585.52469 C
586.53128 585.52469 L
583.78932 585.52469 581.56639 587.74876 581.56639 590.49184 C
581.56639 627.54180 L
581.56639 630.28488 583.78932 632.50866 586.53128 632.50866 C
626.18740 632.50866 L
628.93020 632.50866 631.15342 630.28488 631.15342 627.54180 C
631.15342 590.49184 L
@c
75.95943 533.14469 m
73.21635 533.14469 70.99228 535.36876 70.99228 538.11184 C
70.99228 575.16180 L
70.99228 577.90488 73.21635 580.12866 75.95943 580.12866 C
115.04721 580.12866 L
117.79030 580.12866 120.01436 577.90488 120.01436 575.16180 C
120.01436 538.11184 L
120.01436 535.36876 117.79030 533.14469 115.04721 533.14469 C
75.95943 533.14469 L
@c
-4.77269 528.07691 m
74.97128 528.07691 L
77.71436 528.07691 79.93843 525.85285 79.93843 523.10976 C
79.93843 485.68082 L
79.93843 482.93688 77.71436 480.71367 74.97128 480.71367 C
-4.77269 480.71367 L
-7.51465 480.71367 -9.73956 482.93688 -9.73956 485.68082 C
-9.73956 523.10976 L
-9.73956 525.85285 -7.51465 528.07691 -4.77269 528.07691 C
@c
44.22246 590.49184 m
44.22246 627.54180 L
44.22246 630.28488 46.44539 632.50866 49.18932 632.50866 C
88.27739 632.50866 L
91.02019 632.50866 93.24340 630.28488 93.24340 627.54180 C
93.24340 590.49184 L
93.24340 587.74876 91.02019 585.52469 88.27739 585.52469 C
49.18932 585.52469 L
46.44539 585.52469 44.22246 587.74876 44.22246 590.49184 C
@c
61.30431 580.12866 m
64.04740 580.12866 66.27118 577.90488 66.27118 575.16180 C
66.27118 538.11184 L
66.27118 535.36876 64.04740 533.14469 61.30431 533.14469 C
-4.77269 533.14469 L
-7.51465 533.14469 -9.73956 535.36876 -9.73956 538.11184 C
-9.73956 575.16180 L
-9.73956 577.90488 -7.51465 580.12866 -4.77269 580.12866 C
61.30431 580.12866 L
@c
662.26337 653.96580 m
662.26337 656.76671 664.53335 659.03783 667.33427 659.03783 C
706.35742 659.03783 L
709.15720 659.03783 711.42831 656.76671 711.42831 653.96580 C
711.42831 642.97587 L
711.42831 640.17581 709.15720 637.90384 706.35742 637.90384 C
667.33427 637.90384 L
664.53335 637.90384 662.26337 640.17581 662.26337 642.97587 C
662.26337 653.96580 L
@c
716.25628 653.96580 m
716.25628 656.76671 718.52740 659.03783 721.32831 659.03783 C
760.06743 659.03783 L
762.86721 659.03783 765.13833 656.76671 765.13833 653.96580 C
765.13833 642.97587 L
765.13833 640.17581 762.86721 637.90384 760.06743 637.90384 C
721.32831 637.90384 L
718.52740 637.90384 716.25628 640.17581 716.25628 642.97587 C
716.25628 653.96580 L
@c
-17.81660 375.19483 m
-46.72970 375.19483 L
-46.72970 659.22576 L
-17.81660 659.22576 L
-17.81660 375.19483 L
@c
808.05543 676.25065 m
807.51543 688.32680 803.73118 710.18476 780.19739 710.73184 C
779.86545 710.73978 779.73335 710.76076 779.73335 710.76076 C
714.14646 710.76076 L
714.14646 700.76069 L
41.74044 700.76069 L
41.74044 710.76076 L
-21.07474 710.76076 L
-22.24261 710.76076 -23.40879 710.70066 -24.57581 710.65474 C
-24.57581 710.65474 -24.58573 710.65389 -24.58970 710.65389 C
-27.38976 710.55269 -30.19380 710.12268 -32.93972 709.32586 C
-35.57282 708.56079 -38.48655 707.40765 -40.66469 705.69269 C
-42.67361 704.12287 -44.41266 702.21175 -45.85068 700.08378 C
-47.26063 698.00769 -48.39959 695.74479 -49.30866 693.38976 C
-50.19874 691.08576 -50.58482 688.41581 -51.09477 685.98765 C
-51.57354 683.72476 -51.90378 681.43181 -52.13480 679.13972 C
-52.56369 674.65474 -52.33380 670.19272 -52.18356 665.70973 C
-52.15380 664.80066 -52.12375 663.90066 -52.12375 662.99187 C
-52.12375 163.19083 L
-52.12375 163.19083 -51.87373 147.54076 -51.82356 145.42072 C
-51.58375 136.44085 -50.33367 126.96066 -44.04359 120.03080 C
-38.89361 114.38079 -31.62359 112.15077 -24.26372 111.18189 C
-23.77361 111.00076 -23.22369 110.88085 -22.61367 110.86072 C
-22.61367 110.86072 -19.63474 110.50072 -14.89380 110.76066 C
16.32019 110.76066 L
122.61033 110.91090 L
180.76025 110.76066 L
307.92926 110.76066 L
308.43241 111.85087 308.84740 113.11880 309.53820 114.08882 C
310.39824 115.29581 311.66022 116.17767 313.00441 116.77068 C
315.71433 117.96690 318.57024 117.91077 321.48737 117.91077 C
438.15118 117.91077 L
441.18737 117.91077 445.44444 115.11978 446.73335 112.36876 C
446.98139 111.85285 447.15543 111.31880 447.26627 110.77682 C
574.52939 110.91090 L
632.68044 110.76066 L
739.26028 110.76066 L
764.69641 110.76066 L
764.93735 110.78079 765.16639 110.82076 765.40620 110.87065 C
771.12624 110.90069 774.39742 110.93187 774.88724 110.96079 C
783.90624 111.57080 793.52731 113.32091 799.89732 120.32079 C
804.51723 125.41068 806.41644 131.88076 807.19625 138.51071 C
807.32636 139.15077 807.41622 139.81068 807.43720 140.48079 C
807.72718 146.66088 L
807.72718 146.66088 807.72718 664.76069 807.74646 664.76069 C
807.76630 667.50690 807.95537 670.85887 807.96529 671.25685 C
808.01518 672.56986 808.13424 674.28085 808.05543 676.25065 C
@c
F

@rax %Note: Object
717.39071 639.03855 764.00476 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
721.32860 639.03855 m
760.06658 639.03855 L
762.23764 639.03855 764.00476 640.80567 764.00476 642.97672 C
764.00476 653.96580 L
764.00476 656.13770 762.23764 657.90369 760.06658 657.90369 C
721.32860 657.90369 L
719.15669 657.90369 717.39071 656.13770 717.39071 653.96580 C
717.39071 642.97672 L
717.39071 640.80567 719.15669 639.03855 721.32860 639.03855 C
@c
F

@rax %Note: Object
663.39638 639.03855 710.29446 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
667.33455 639.03855 m
706.35657 639.03855 L
708.52762 639.03855 710.29446 640.80567 710.29446 642.97672 C
710.29446 653.96580 L
710.29446 656.13770 708.52762 657.90369 706.35657 657.90369 C
667.33455 657.90369 L
665.16350 657.90369 663.39638 656.13770 663.39638 653.96580 C
663.39638 642.97672 L
663.39638 640.80567 665.16350 639.03855 667.33455 639.03855 C
@c
F

@rax %Note: Object
-8.60598 534.27883 65.13704 578.99565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-8.60598 575.16265 m
-8.60598 538.11184 L
-8.60598 535.99890 -6.88592 534.27883 -4.77298 534.27883 C
61.30488 534.27883 L
63.41811 534.27883 65.13704 535.99890 65.13704 538.11184 C
65.13704 575.16265 L
65.13704 577.27587 63.41811 578.99565 61.30488 578.99565 C
-4.77298 578.99565 L
-6.88592 578.99565 -8.60598 577.27587 -8.60598 575.16265 C
@c
F

@rax %Note: Object
45.35575 586.65883 92.10983 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
92.10983 590.49184 m
92.10983 627.54293 L
92.10983 629.65587 90.38976 631.37480 88.27682 631.37480 C
49.18876 631.37480 L
47.07581 631.37480 45.35575 629.65587 45.35575 627.54293 C
45.35575 590.49184 L
45.35575 588.37890 47.07581 586.65883 49.18876 586.65883 C
88.27682 586.65883 L
90.38976 586.65883 92.10983 588.37890 92.10983 590.49184 C
@c
F

@rax %Note: Object
-8.60598 481.84724 78.80400 526.94334 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-4.77298 481.84724 m
74.97099 481.84724 L
77.08394 481.84724 78.80400 483.56731 78.80400 485.68025 C
78.80400 523.11033 L
78.80400 525.22328 77.08394 526.94334 74.97099 526.94334 C
-4.77298 526.94334 L
-6.88592 526.94334 -8.60598 525.22328 -8.60598 523.11033 C
-8.60598 485.68025 L
-8.60598 483.56731 -6.88592 481.84724 -4.77298 481.84724 C
@c
F

@rax %Note: Object
72.12643 534.27912 118.88050 578.99594 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
118.88050 538.11184 m
118.88050 575.16293 L
118.88050 577.27587 117.16044 578.99594 115.04750 578.99594 C
75.95943 578.99594 L
73.84649 578.99594 72.12643 577.27587 72.12643 575.16293 C
72.12643 538.11184 L
72.12643 535.99890 73.84649 534.27912 75.95943 534.27912 C
115.04750 534.27912 L
117.16044 534.27912 118.88050 535.99890 118.88050 538.11184 C
@c
F

@rax %Note: Object
582.69997 586.65855 630.02013 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
626.18712 631.37480 m
586.53213 631.37480 L
584.41805 631.37480 582.69997 629.65559 582.69997 627.54265 C
582.69997 590.49156 L
582.69997 588.37861 584.41805 586.65855 586.53213 586.65855 C
626.18712 586.65855 L
628.30006 586.65855 630.02013 588.37861 630.02013 590.49156 C
630.02013 627.54265 L
630.02013 629.65559 628.30006 631.37480 626.18712 631.37480 C
@c
F

@rax %Note: Object
609.56107 534.27883 656.59805 578.99565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
609.56107 575.16265 m
609.56107 538.11184 L
609.56107 535.99890 611.28113 534.27883 613.39408 534.27883 C
652.76504 534.27883 L
654.87798 534.27883 656.59805 535.99890 656.59805 538.11184 C
656.59805 575.16265 L
656.59805 577.27587 654.87798 578.99565 652.76504 578.99565 C
613.39408 578.99565 L
611.28113 578.99565 609.56107 577.27587 609.56107 575.16265 C
@c
F

@rax %Note: Object
555.70649 534.27883 602.74346 578.99565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
555.70649 575.16265 m
555.70649 538.11184 L
555.70649 535.99890 557.42655 534.27883 559.53950 534.27883 C
598.91046 534.27883 L
601.02340 534.27883 602.74346 535.99890 602.74346 538.11184 C
602.74346 575.16265 L
602.74346 577.27587 601.02340 578.99565 598.91046 578.99565 C
559.53950 578.99565 L
557.42655 578.99565 555.70649 577.27587 555.70649 575.16265 C
@c
F

@rax %Note: Object
515.42135 482.03745 561.89140 526.75370 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
519.25436 526.75370 m
517.14142 526.75370 515.42135 525.03364 515.42135 522.92069 C
515.42135 485.86961 L
515.42135 483.75666 517.14142 482.03745 519.25436 482.03745 C
558.05839 482.03745 L
560.17134 482.03745 561.89140 483.75666 561.89140 485.86961 C
561.89140 522.92069 L
561.89140 525.03364 560.17134 526.75370 558.05839 526.75370 C
519.25436 526.75370 L
@c
F

@rax %Note: Object
529.36639 586.65855 575.83644 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
572.00428 631.37480 m
533.19940 631.37480 L
531.08646 631.37480 529.36639 629.65559 529.36639 627.54265 C
529.36639 590.49156 L
529.36639 588.37861 531.08646 586.65855 533.19940 586.65855 C
572.00428 586.65855 L
574.11751 586.65855 575.83644 588.37861 575.83644 590.49156 C
575.83644 627.54265 L
575.83644 629.65559 574.11751 631.37480 572.00428 631.37480 C
@c
F

@rax %Note: Object
502.42932 534.27883 548.61619 578.99565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
502.42932 575.16265 m
502.42932 538.11184 L
502.42932 535.99890 504.14910 534.27883 506.26233 534.27883 C
544.78318 534.27883 L
546.89613 534.27883 548.61619 535.99890 548.61619 538.11184 C
548.61619 575.16265 L
548.61619 577.27587 546.89613 578.99565 544.78318 578.99565 C
506.26233 578.99565 L
504.14910 578.99565 502.42932 577.27587 502.42932 575.16265 C
@c
F

@rax %Note: Object
475.40466 586.65855 522.15761 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
518.32460 631.37480 m
479.23682 631.37480 L
477.12359 631.37480 475.40466 629.65559 475.40466 627.54265 C
475.40466 590.49156 L
475.40466 588.37861 477.12359 586.65855 479.23682 586.65855 C
518.32460 586.65855 L
520.43783 586.65855 522.15761 588.37861 522.15761 590.49156 C
522.15761 627.54265 L
522.15761 629.65559 520.43783 631.37480 518.32460 631.37480 C
@c
F

@rax %Note: Object
448.36583 534.27883 495.40280 578.99565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
448.36583 575.16265 m
448.36583 538.11184 L
448.36583 535.99890 450.08476 534.27883 452.19770 534.27883 C
491.56980 534.27883 L
493.68274 534.27883 495.40280 535.99890 495.40280 538.11184 C
495.40280 575.16265 L
495.40280 577.27587 493.68274 578.99565 491.56980 578.99565 C
452.19770 578.99565 L
450.08476 578.99565 448.36583 577.27587 448.36583 575.16265 C
@c
F

@rax %Note: Object
273.75250 429.66680 320.78835 474.38362 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
277.58551 429.66680 m
316.95647 429.66680 L
319.06942 429.66680 320.78835 431.38658 320.78835 433.49981 C
320.78835 470.55061 L
320.78835 472.66356 319.06942 474.38362 316.95647 474.38362 C
277.58551 474.38362 L
275.47228 474.38362 273.75250 472.66356 273.75250 470.55061 C
273.75250 433.49981 L
273.75250 431.38658 275.47228 429.66680 277.58551 429.66680 C
@c
F

@rax %Note: Object
247.24431 482.03773 293.71436 526.75370 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
293.71436 485.86989 m
293.71436 522.92069 L
293.71436 525.03364 291.99430 526.75370 289.88135 526.75370 C
251.07732 526.75370 L
248.96438 526.75370 247.24431 525.03364 247.24431 522.92069 C
247.24431 485.86989 L
247.24431 483.75666 248.96438 482.03773 251.07732 482.03773 C
289.88135 482.03773 L
291.99430 482.03773 293.71436 483.75666 293.71436 485.86989 C
@c
F

@rax %Note: Object
301.18876 482.03773 347.65880 526.75370 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
347.65880 485.86989 m
347.65880 522.92069 L
347.65880 525.03364 345.93959 526.75370 343.82665 526.75370 C
305.02176 526.75370 L
302.90882 526.75370 301.18876 525.03364 301.18876 522.92069 C
301.18876 485.86989 L
301.18876 483.75666 302.90882 482.03773 305.02176 482.03773 C
343.82665 482.03773 L
345.93959 482.03773 347.65880 483.75666 347.65880 485.86989 C
@c
F

@rax %Note: Object
327.26523 429.66680 374.30220 474.38362 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
331.09824 429.66680 m
370.46920 429.66680 L
372.58214 429.66680 374.30220 431.38658 374.30220 433.49981 C
374.30220 470.55061 L
374.30220 472.66356 372.58214 474.38362 370.46920 474.38362 C
331.09824 474.38362 L
328.98501 474.38362 327.26523 472.66356 327.26523 470.55061 C
327.26523 433.49981 L
327.26523 431.38658 328.98501 429.66680 331.09824 429.66680 C
@c
F

@rax %Note: Object
354.60312 482.03773 401.64009 526.75370 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
401.64009 485.86989 m
401.64009 522.92069 L
401.64009 525.03364 399.92003 526.75370 397.80709 526.75370 C
358.43613 526.75370 L
356.32318 526.75370 354.60312 525.03364 354.60312 522.92069 C
354.60312 485.86989 L
354.60312 483.75666 356.32318 482.03773 358.43613 482.03773 C
397.80709 482.03773 L
399.92003 482.03773 401.64009 483.75666 401.64009 485.86989 C
@c
F

@rax %Note: Object
381.60680 429.66680 428.36088 474.38362 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
385.43981 429.66680 m
424.52787 429.66680 L
426.64082 429.66680 428.36088 431.38658 428.36088 433.49981 C
428.36088 470.55061 L
428.36088 472.66356 426.64082 474.38362 424.52787 474.38362 C
385.43981 474.38362 L
383.32687 474.38362 381.60680 472.66356 381.60680 470.55061 C
381.60680 433.49981 L
381.60680 431.38658 383.32687 429.66680 385.43981 429.66680 C
@c
F

@rax %Note: Object
408.37833 482.03773 455.13128 526.75370 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
455.13128 485.86989 m
455.13128 522.92069 L
455.13128 525.03364 453.41121 526.75370 451.29827 526.75370 C
412.21020 526.75370 L
410.09726 526.75370 408.37833 525.03364 408.37833 522.92069 C
408.37833 485.86989 L
408.37833 483.75666 410.09726 482.03773 412.21020 482.03773 C
451.29827 482.03773 L
453.41121 482.03773 455.13128 483.75666 455.13128 485.86989 C
@c
F

@rax %Note: Object
422.29814 586.65855 469.05222 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
465.21921 631.37480 m
426.13115 631.37480 L
424.01820 631.37480 422.29814 629.65559 422.29814 627.54265 C
422.29814 590.49156 L
422.29814 588.37861 424.01820 586.65855 426.13115 586.65855 C
465.21921 586.65855 L
467.33216 586.65855 469.05222 588.37861 469.05222 590.49156 C
469.05222 627.54265 L
469.05222 629.65559 467.33216 631.37480 465.21921 631.37480 C
@c
F

@rax %Note: Object
395.15783 534.27883 441.91077 578.99565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
395.15783 575.16265 m
395.15783 538.11184 L
395.15783 535.99890 396.87761 534.27883 398.99083 534.27883 C
438.07861 534.27883 L
440.19184 534.27883 441.91077 535.99890 441.91077 538.11184 C
441.91077 575.16265 L
441.91077 577.27587 440.19184 578.99565 438.07861 578.99565 C
398.99083 578.99565 L
396.87761 578.99565 395.15783 577.27587 395.15783 575.16265 C
@c
F

@rax %Note: Object
368.35682 586.65855 415.11090 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
411.27789 631.37480 m
372.18983 631.37480 L
370.07688 631.37480 368.35682 629.65559 368.35682 627.54265 C
368.35682 590.49156 L
368.35682 588.37861 370.07688 586.65855 372.18983 586.65855 C
411.27789 586.65855 L
413.39083 586.65855 415.11090 588.37861 415.11090 590.49156 C
415.11090 627.54265 L
415.11090 629.65559 413.39083 631.37480 411.27789 631.37480 C
@c
F

@rax %Note: Object
341.04246 534.27883 388.07943 578.99565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
341.04246 575.16265 m
341.04246 538.11184 L
341.04246 535.99890 342.76252 534.27883 344.87546 534.27883 C
384.24756 534.27883 L
386.36050 534.27883 388.07943 535.99890 388.07943 538.11184 C
388.07943 575.16265 L
388.07943 577.27587 386.36050 578.99565 384.24756 578.99565 C
344.87546 578.99565 L
342.76252 578.99565 341.04246 577.27587 341.04246 575.16265 C
@c
F

@rax %Note: Object
314.60882 586.65855 361.36176 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
357.52989 631.37480 m
318.44183 631.37480 L
316.32888 631.37480 314.60882 629.65559 314.60882 627.54265 C
314.60882 590.49156 L
314.60882 588.37861 316.32888 586.65855 318.44183 586.65855 C
357.52989 586.65855 L
359.64283 586.65855 361.36176 588.37861 361.36176 590.49156 C
361.36176 627.54265 L
361.36176 629.65559 359.64283 631.37480 357.52989 631.37480 C
@c
F

@rax %Note: Object
287.26498 534.27883 333.73616 578.99565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
287.26498 575.16265 m
287.26498 538.11184 L
287.26498 535.99890 288.98504 534.27883 291.09798 534.27883 C
329.90315 534.27883 L
332.01609 534.27883 333.73616 535.99890 333.73616 538.11184 C
333.73616 575.16265 L
333.73616 577.27587 332.01609 578.99565 329.90315 578.99565 C
291.09798 578.99565 L
288.98504 578.99565 287.26498 577.27587 287.26498 575.16265 C
@c
F

@rax %Note: Object
260.62724 586.65855 307.38132 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
303.54831 631.37480 m
264.46025 631.37480 L
262.34731 631.37480 260.62724 629.65559 260.62724 627.54265 C
260.62724 590.49156 L
260.62724 588.37861 262.34731 586.65855 264.46025 586.65855 C
303.54831 586.65855 L
305.66126 586.65855 307.38132 588.37861 307.38132 590.49156 C
307.38132 627.54265 L
307.38132 629.65559 305.66126 631.37480 303.54831 631.37480 C
@c
F

@rax %Note: Object
233.85600 534.27883 280.32605 578.99565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
233.85600 575.16265 m
233.85600 538.11184 L
233.85600 535.99890 235.57578 534.27883 237.68901 534.27883 C
276.49389 534.27883 L
278.60683 534.27883 280.32605 535.99890 280.32605 538.11184 C
280.32605 575.16265 L
280.32605 577.27587 278.60683 578.99565 276.49389 578.99565 C
237.68901 578.99565 L
235.57578 578.99565 233.85600 577.27587 233.85600 575.16265 C
@c
F

@rax %Note: Object
207.06718 586.65855 252.97030 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
249.13729 631.37480 m
210.90019 631.37480 L
208.78611 631.37480 207.06718 629.65559 207.06718 627.54265 C
207.06718 590.49156 L
207.06718 588.37861 208.78611 586.65855 210.90019 586.65855 C
249.13729 586.65855 L
251.25024 586.65855 252.97030 588.37861 252.97030 590.49156 C
252.97030 627.54265 L
252.97030 629.65559 251.25024 631.37480 249.13729 631.37480 C
@c
F

@rax %Note: Object
179.64397 534.27883 226.39805 578.99565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
179.64397 575.16265 m
179.64397 538.11184 L
179.64397 535.99890 181.36403 534.27883 183.47698 534.27883 C
222.56504 534.27883 L
224.67798 534.27883 226.39805 535.99890 226.39805 538.11184 C
226.39805 575.16265 L
226.39805 577.27587 224.67798 578.99565 222.56504 578.99565 C
183.47698 578.99565 L
181.36403 578.99565 179.64397 577.27587 179.64397 575.16265 C
@c
F

@rax %Note: Object
152.87046 586.65855 199.34135 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
195.50835 631.37480 m
156.70318 631.37480 L
154.59024 631.37480 152.87046 629.65559 152.87046 627.54265 C
152.87046 590.49156 L
152.87046 588.37861 154.59024 586.65855 156.70318 586.65855 C
195.50835 586.65855 L
197.62129 586.65855 199.34135 588.37861 199.34135 590.49156 C
199.34135 627.54265 L
199.34135 629.65559 197.62129 631.37480 195.50835 631.37480 C
@c
F

@rax %Note: Object
125.86876 534.27883 172.33852 578.99565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
125.86876 575.16265 m
125.86876 538.11184 L
125.86876 535.99890 127.58854 534.27883 129.70148 534.27883 C
168.50551 534.27883 L
170.61874 534.27883 172.33852 535.99890 172.33852 538.11184 C
172.33852 575.16265 L
172.33852 577.27587 170.61874 578.99565 168.50551 578.99565 C
129.70148 578.99565 L
127.58854 578.99565 125.86876 577.27587 125.86876 575.16265 C
@c
F

@rax %Note: Object
99.09496 586.65855 145.56501 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
141.73200 631.37480 m
102.92797 631.37480 L
100.81502 631.37480 99.09496 629.65559 99.09496 627.54265 C
99.09496 590.49156 L
99.09496 588.37861 100.81502 586.65855 102.92797 586.65855 C
141.73200 586.65855 L
143.84494 586.65855 145.56501 588.37861 145.56501 590.49156 C
145.56501 627.54265 L
145.56501 629.65559 143.84494 631.37480 141.73200 631.37480 C
@c
F

@rax %Note: Object
85.69389 482.03773 132.16394 526.75370 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
89.52690 482.03773 m
128.33093 482.03773 L
130.44387 482.03773 132.16394 483.75666 132.16394 485.86989 C
132.16394 522.92069 L
132.16394 525.03364 130.44387 526.75370 128.33093 526.75370 C
89.52690 526.75370 L
87.41395 526.75370 85.69389 525.03364 85.69389 522.92069 C
85.69389 485.86989 L
85.69389 483.75666 87.41395 482.03773 89.52690 482.03773 C
@c
F

@rax %Note: Object
112.61480 429.66680 159.08485 474.38362 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
116.44668 429.66680 m
155.25184 429.66680 L
157.36479 429.66680 159.08485 431.38658 159.08485 433.49981 C
159.08485 470.55061 L
159.08485 472.66356 157.36479 474.38362 155.25184 474.38362 C
116.44668 474.38362 L
114.33373 474.38362 112.61480 472.66356 112.61480 470.55061 C
112.61480 433.49981 L
112.61480 431.38658 114.33373 429.66680 116.44668 429.66680 C
@c
F

@rax %Note: Object
139.53855 482.03773 186.29150 526.75370 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
186.29150 485.86989 m
186.29150 522.92069 L
186.29150 525.03364 184.57143 526.75370 182.45849 526.75370 C
143.37043 526.75370 L
141.25748 526.75370 139.53855 525.03364 139.53855 522.92069 C
139.53855 485.86989 L
139.53855 483.75666 141.25748 482.03773 143.37043 482.03773 C
182.45849 482.03773 L
184.57143 482.03773 186.29150 483.75666 186.29150 485.86989 C
@c
F

@rax %Note: Object
166.81011 429.66680 212.99698 474.38362 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
170.64312 429.66680 m
209.16425 429.66680 L
211.27720 429.66680 212.99698 431.38658 212.99698 433.49981 C
212.99698 470.55061 L
212.99698 472.66356 211.27720 474.38362 209.16425 474.38362 C
170.64312 474.38362 L
168.53017 474.38362 166.81011 472.66356 166.81011 470.55061 C
166.81011 433.49981 L
166.81011 431.38658 168.53017 429.66680 170.64312 429.66680 C
@c
F

@rax %Note: Object
193.30016 482.03773 240.05424 526.75370 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
240.05424 485.86989 m
240.05424 522.92069 L
240.05424 525.03364 238.33417 526.75370 236.22123 526.75370 C
197.13317 526.75370 L
195.02022 526.75370 193.30016 525.03364 193.30016 522.92069 C
193.30016 485.86989 L
193.30016 483.75666 195.02022 482.03773 197.13317 482.03773 C
236.22123 482.03773 L
238.33417 482.03773 240.05424 483.75666 240.05424 485.86989 C
@c
F

@rax %Note: Object
219.95660 429.66680 266.70954 474.38362 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
223.78876 429.66680 m
262.87767 429.66680 L
264.99061 429.66680 266.70954 431.38658 266.70954 433.49981 C
266.70954 470.55061 L
266.70954 472.66356 264.99061 474.38362 262.87767 474.38362 C
223.78876 474.38362 L
221.67553 474.38362 219.95660 472.66356 219.95660 470.55061 C
219.95660 433.49981 L
219.95660 431.38658 221.67553 429.66680 223.78876 429.66680 C
@c
F

@rax %Note: Object
219.95660 377.24655 482.38753 421.96365 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
223.78961 377.24655 m
478.55452 377.24655 L
480.66746 377.24655 482.38753 378.96661 482.38753 381.07956 C
482.38753 418.13065 L
482.38753 420.24359 480.66746 421.96365 478.55452 421.96365 C
223.78961 421.96365 L
221.67638 421.96365 219.95660 420.24359 219.95660 418.13065 C
219.95660 381.07956 L
219.95660 378.96661 221.67638 377.24655 223.78961 377.24655 C
@c
F

@rax %Note: Object
435.15298 429.66652 482.47313 474.38334 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
478.64098 474.38334 m
438.98598 474.38334 L
436.87219 474.38334 435.15298 472.66356 435.15298 470.55061 C
435.15298 433.49953 L
435.15298 431.38658 436.87219 429.66652 438.98598 429.66652 C
478.64098 429.66652 L
480.75420 429.66652 482.47313 431.38658 482.47313 433.49953 C
482.47313 470.55061 L
482.47313 472.66356 480.75420 474.38334 478.64098 474.38334 C
@c
F

@rax %Note: Object
462.07531 482.03773 508.26217 526.75370 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
508.26217 485.86989 m
508.26217 522.92069 L
508.26217 525.03364 506.54211 526.75370 504.42917 526.75370 C
465.90831 526.75370 L
463.79509 526.75370 462.07531 525.03364 462.07531 522.92069 C
462.07531 485.86989 L
462.07531 483.75666 463.79509 482.03773 465.90831 482.03773 C
504.42917 482.03773 L
506.54211 482.03773 508.26217 483.75666 508.26217 485.86989 C
@c
F

@rax %Note: Object
488.64699 429.66680 535.68397 474.38362 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
492.48000 429.66680 m
531.85096 429.66680 L
533.96391 429.66680 535.68397 431.38658 535.68397 433.49981 C
535.68397 470.55061 L
535.68397 472.66356 533.96391 474.38362 531.85096 474.38362 C
492.48000 474.38362 L
490.36706 474.38362 488.64699 472.66356 488.64699 470.55061 C
488.64699 433.49981 L
488.64699 431.38658 490.36706 429.66680 492.48000 429.66680 C
@c
F

@rax %Note: Object
489.28904 377.10709 549.41216 422.10198 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
493.01717 377.10709 m
545.68403 377.10709 L
547.74000 377.10709 549.41216 378.77896 549.41216 380.83521 C
549.41216 418.37499 L
549.41216 420.43011 547.74000 422.10198 545.68403 422.10198 C
493.01717 422.10198 L
490.96120 422.10198 489.28904 420.43011 489.28904 418.37499 C
489.28904 380.83521 L
489.28904 378.77896 490.96120 377.10709 493.01717 377.10709 C
@c
F

@rax %Note: Object
542.45849 429.66680 589.21143 474.38362 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
589.21143 433.49981 m
589.21143 470.55061 L
589.21143 472.66356 587.49250 474.38362 585.37928 474.38362 C
546.29150 474.38362 L
544.17855 474.38362 542.45849 472.66356 542.45849 470.55061 C
542.45849 433.49981 L
542.45849 431.38658 544.17855 429.66680 546.29150 429.66680 C
585.37928 429.66680 L
587.49250 429.66680 589.21143 431.38658 589.21143 433.49981 C
@c
F

@rax %Note: Object
569.19628 482.03773 615.38428 526.75370 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
615.38428 485.86989 m
615.38428 522.92069 L
615.38428 525.03364 613.66422 526.75370 611.55128 526.75370 C
573.03043 526.75370 L
570.91635 526.75370 569.19628 525.03364 569.19628 522.92069 C
569.19628 485.86989 L
569.19628 483.75666 570.91635 482.03773 573.03043 482.03773 C
611.55128 482.03773 L
613.66422 482.03773 615.38428 483.75666 615.38428 485.86989 C
@c
F

@rax %Note: Object
596.26913 429.66680 643.02293 474.38362 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
600.10214 429.66680 m
639.18992 429.66680 L
641.30315 429.66680 643.02293 431.38658 643.02293 433.49981 C
643.02293 470.55061 L
643.02293 472.66356 641.30315 474.38362 639.18992 474.38362 C
600.10214 474.38362 L
597.98891 474.38362 596.26913 472.66356 596.26913 470.55061 C
596.26913 433.49981 L
596.26913 431.38658 597.98891 429.66680 600.10214 429.66680 C
@c
F

@rax %Note: Object
622.75805 482.03773 669.22809 526.75370 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
669.22809 485.86989 m
669.22809 522.92069 L
669.22809 525.03364 667.50803 526.75370 665.39509 526.75370 C
626.59106 526.75370 L
624.47811 526.75370 622.75805 525.03364 622.75805 522.92069 C
622.75805 485.86989 L
622.75805 483.75666 624.47811 482.03773 626.59106 482.03773 C
665.39509 482.03773 L
667.50803 482.03773 669.22809 483.75666 669.22809 485.86989 C
@c
F

@rax %Note: Object
649.69483 429.66680 763.89392 474.38362 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
653.52784 429.66680 m
760.06091 429.66680 L
762.17386 429.66680 763.89392 431.38658 763.89392 433.49981 C
763.89392 470.55061 L
763.89392 472.66356 762.17386 474.38362 760.06091 474.38362 C
653.52784 474.38362 L
651.41490 474.38362 649.69483 472.66356 649.69483 470.55061 C
649.69483 433.49981 L
649.69483 431.38658 651.41490 429.66680 653.52784 429.66680 C
@c
F

@rax %Note: Object
717.16620 534.27883 763.63710 578.99565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
759.80409 578.99565 m
720.99921 578.99565 L
718.88627 578.99565 717.16620 577.27587 717.16620 575.16265 C
717.16620 538.11184 L
717.16620 535.99890 718.88627 534.27883 720.99921 534.27883 C
759.80409 534.27883 L
761.91732 534.27883 763.63710 535.99890 763.63710 538.11184 C
763.63710 575.16265 L
763.63710 577.27587 761.91732 578.99565 759.80409 578.99565 C
@c
F

@rax %Note: Object
676.38132 482.03745 763.56935 526.75370 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
676.38132 522.92069 m
676.38132 485.86961 L
676.38132 483.75666 678.10139 482.03745 680.21433 482.03745 C
759.73521 482.03745 L
761.84929 482.03745 763.56935 483.75666 763.56935 485.86961 C
763.56935 522.92069 L
763.56935 525.03364 761.84929 526.75370 759.73521 526.75370 C
680.21433 526.75370 L
678.10139 526.75370 676.38132 525.03364 676.38132 522.92069 C
@c
F

@rax %Note: Object
663.37880 534.27883 710.69868 578.99565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
706.86567 578.99565 m
667.21068 578.99565 L
665.09660 578.99565 663.37880 577.27587 663.37880 575.16265 C
663.37880 538.11184 L
663.37880 535.99890 665.09660 534.27883 667.21068 534.27883 C
706.86567 534.27883 L
708.97861 534.27883 710.69868 535.99890 710.69868 538.11184 C
710.69868 575.16265 L
710.69868 577.27587 708.97861 578.99565 706.86567 578.99565 C
@c
F

@rax %Note: Object
636.51345 586.65855 683.83446 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
680.00145 631.37480 m
640.34646 631.37480 L
638.23238 631.37480 636.51345 629.65559 636.51345 627.54265 C
636.51345 590.49156 L
636.51345 588.37861 638.23238 586.65855 640.34646 586.65855 C
680.00145 586.65855 L
682.11439 586.65855 683.83446 588.37861 683.83446 590.49156 C
683.83446 627.54265 L
683.83446 629.65559 682.11439 631.37480 680.00145 631.37480 C
@c
F

@rax %Note: Object
609.92277 639.03855 656.53795 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
613.86094 639.03855 m
652.59893 639.03855 L
654.77083 639.03855 656.53795 640.80567 656.53795 642.97672 C
656.53795 653.96580 L
656.53795 656.13770 654.77083 657.90369 652.59893 657.90369 C
613.86094 657.90369 L
611.68989 657.90369 609.92277 656.13770 609.92277 653.96580 C
609.92277 642.97672 L
609.92277 640.80567 611.68989 639.03855 613.86094 639.03855 C
@c
F

@rax %Note: Object
555.98825 639.03855 602.88633 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
559.92643 639.03855 m
598.94731 639.03855 L
601.11921 639.03855 602.88633 640.80567 602.88633 642.97672 C
602.88633 653.96580 L
602.88633 656.13770 601.11921 657.90369 598.94731 657.90369 C
559.92643 657.90369 L
557.75424 657.90369 555.98825 656.13770 555.98825 653.96580 C
555.98825 642.97672 L
555.98825 640.80567 557.75424 639.03855 559.92643 639.03855 C
@c
F

@rax %Note: Object
502.54781 639.03855 549.44589 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
506.48570 639.03855 m
545.50772 639.03855 L
547.67877 639.03855 549.44589 640.80567 549.44589 642.97672 C
549.44589 653.96580 L
549.44589 656.13770 547.67877 657.90369 545.50772 657.90369 C
506.48570 657.90369 L
504.31493 657.90369 502.54781 656.13770 502.54781 653.96580 C
502.54781 642.97672 L
502.54781 640.80567 504.31493 639.03855 506.48570 639.03855 C
@c
F

@rax %Note: Object
448.61726 639.03855 495.51534 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
452.55515 639.03855 m
491.57631 639.03855 L
493.74822 639.03855 495.51534 640.80567 495.51534 642.97672 C
495.51534 653.96580 L
495.51534 656.13770 493.74822 657.90369 491.57631 657.90369 C
452.55515 657.90369 L
450.38324 657.90369 448.61726 656.13770 448.61726 653.96580 C
448.61726 642.97672 L
448.61726 640.80567 450.38324 639.03855 452.55515 639.03855 C
@c
F

@rax %Note: Object
394.96876 639.03855 441.86683 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
398.90665 639.03855 m
437.92866 639.03855 L
440.09972 639.03855 441.86683 640.80567 441.86683 642.97672 C
441.86683 653.96580 L
441.86683 656.13770 440.09972 657.90369 437.92866 657.90369 C
398.90665 657.90369 L
396.73559 657.90369 394.96876 656.13770 394.96876 653.96580 C
394.96876 642.97672 L
394.96876 640.80567 396.73559 639.03855 398.90665 639.03855 C
@c
F

@rax %Note: Object
341.31940 639.03855 388.21720 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
345.25729 639.03855 m
384.27846 639.03855 L
386.45036 639.03855 388.21720 640.80567 388.21720 642.97672 C
388.21720 653.96580 L
388.21720 656.13770 386.45036 657.90369 384.27846 657.90369 C
345.25729 657.90369 L
343.08624 657.90369 341.31940 656.13770 341.31940 653.96580 C
341.31940 642.97672 L
341.31940 640.80567 343.08624 639.03855 345.25729 639.03855 C
@c
F

@rax %Note: Object
287.66409 639.03855 334.27899 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
291.60198 639.03855 m
330.33997 639.03855 L
332.51187 639.03855 334.27899 640.80567 334.27899 642.97672 C
334.27899 653.96580 L
334.27899 656.13770 332.51187 657.90369 330.33997 657.90369 C
291.60198 657.90369 L
289.43093 657.90369 287.66409 656.13770 287.66409 653.96580 C
287.66409 642.97672 L
287.66409 640.80567 289.43093 639.03855 291.60198 639.03855 C
@c
F

@rax %Note: Object
234.11906 639.03855 280.45106 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
238.05723 639.03855 m
276.51203 639.03855 L
278.68422 639.03855 280.45106 640.80567 280.45106 642.97672 C
280.45106 653.96580 L
280.45106 656.13770 278.68422 657.90369 276.51203 657.90369 C
238.05723 657.90369 L
235.88617 657.90369 234.11906 656.13770 234.11906 653.96580 C
234.11906 642.97672 L
234.11906 640.80567 235.88617 639.03855 238.05723 639.03855 C
@c
F

@rax %Note: Object
180.34469 639.03855 226.10863 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
184.28258 639.03855 m
222.17074 639.03855 L
224.34265 639.03855 226.10863 640.80567 226.10863 642.97672 C
226.10863 653.96580 L
226.10863 656.13770 224.34265 657.90369 222.17074 657.90369 C
184.28258 657.90369 L
182.11068 657.90369 180.34469 656.13770 180.34469 653.96580 C
180.34469 642.97672 L
180.34469 640.80567 182.11068 639.03855 184.28258 639.03855 C
@c
F

@rax %Note: Object
126.34583 639.03855 172.39266 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
130.28372 639.03855 m
168.45477 639.03855 L
170.62668 639.03855 172.39266 640.80567 172.39266 642.97672 C
172.39266 653.96580 L
172.39266 656.13770 170.62668 657.90369 168.45477 657.90369 C
130.28372 657.90369 L
128.11181 657.90369 126.34583 656.13770 126.34583 653.96580 C
126.34583 642.97672 L
126.34583 640.80567 128.11181 639.03855 130.28372 639.03855 C
@c
F

@rax %Note: Object
72.82517 639.03855 118.87228 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
76.76334 639.03855 m
114.93524 639.03855 L
117.10630 639.03855 118.87228 640.80567 118.87228 642.97672 C
118.87228 653.96580 L
118.87228 656.13770 117.10630 657.90369 114.93524 657.90369 C
76.76334 657.90369 L
74.59228 657.90369 72.82517 656.13770 72.82517 653.96580 C
72.82517 642.97672 L
72.82517 640.80567 74.59228 639.03855 76.76334 639.03855 C
@c
F

@rax %Note: Object
-8.56545 639.03855 65.25553 657.90369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-4.62756 639.03855 m
61.31650 639.03855 L
63.48841 639.03855 65.25553 640.80567 65.25553 642.97672 C
65.25553 653.96580 L
65.25553 656.13770 63.48841 657.90369 61.31650 657.90369 C
-4.62756 657.90369 L
-6.79861 657.90369 -8.56545 656.13770 -8.56545 653.96580 C
-8.56545 642.97672 L
-8.56545 640.80567 -6.79861 639.03855 -4.62756 639.03855 C
@c
F

@rax %Note: Object
-8.65871 586.65883 38.37033 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-4.82570 586.65883 m
34.53732 586.65883 L
36.65140 586.65883 38.37033 588.37890 38.37033 590.49184 C
38.37033 627.54293 L
38.37033 629.65587 36.65140 631.37480 34.53732 631.37480 C
-4.82570 631.37480 L
-6.93865 631.37480 -8.65871 629.65587 -8.65871 627.54293 C
-8.65871 590.49184 L
-8.65871 588.37890 -6.93865 586.65883 -4.82570 586.65883 C
@c
F

@rax %Note: Object
-8.68904 429.66680 105.24898 474.38362 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-4.85603 429.66680 m
101.41597 429.66680 L
103.53005 429.66680 105.24898 431.38658 105.24898 433.49981 C
105.24898 470.55061 L
105.24898 472.66356 103.53005 474.38362 101.41597 474.38362 C
-4.85603 474.38362 L
-6.96898 474.38362 -8.68904 472.66356 -8.68904 470.55061 C
-8.68904 433.49981 L
-8.68904 431.38658 -6.96898 429.66680 -4.85603 429.66680 C
@c
F

@rax %Note: Object
-8.67572 376.68813 38.08630 422.52123 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
34.25329 422.52123 m
-4.84271 422.52123 L
-6.95565 422.52123 -8.67572 420.80230 -8.67572 418.68907 C
-8.67572 380.52113 L
-8.67572 378.40819 -6.95565 376.68813 -4.84271 376.68813 C
34.25329 376.68813 L
36.36652 376.68813 38.08630 378.40819 38.08630 380.52113 C
38.08630 418.68907 L
38.08630 420.80230 36.36652 422.52123 34.25329 422.52123 C
@c
F

@rax %Note: Object
45.63780 377.24655 92.10898 421.96337 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
88.27597 421.96337 m
49.47080 421.96337 L
47.35786 421.96337 45.63780 420.24359 45.63780 418.13036 C
45.63780 381.07956 L
45.63780 378.96661 47.35786 377.24655 49.47080 377.24655 C
88.27597 377.24655 L
90.38891 377.24655 92.10898 378.96661 92.10898 381.07956 C
92.10898 418.13036 L
92.10898 420.24359 90.38891 421.96337 88.27597 421.96337 C
@c
F

@rax %Note: Object
99.37701 377.24655 145.84706 421.96337 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
142.01405 421.96337 m
103.21002 421.96337 L
101.09707 421.96337 99.37701 420.24359 99.37701 418.13036 C
99.37701 381.07956 L
99.37701 378.96661 101.09707 377.24655 103.21002 377.24655 C
142.01405 377.24655 L
144.12699 377.24655 145.84706 378.96661 145.84706 381.07956 C
145.84706 418.13036 L
145.84706 420.24359 144.12699 421.96337 142.01405 421.96337 C
@c
F

@rax %Note: Object
152.80866 377.10652 212.99669 422.10255 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
212.99669 380.83465 m
212.99669 418.37471 L
212.99669 420.43068 211.32454 422.10255 209.26857 422.10255 C
156.53565 422.10255 L
154.47969 422.10255 152.80866 420.43068 152.80866 418.37471 C
152.80866 380.83465 L
152.80866 378.77868 154.47969 377.10652 156.53565 377.10652 C
209.26857 377.10652 L
211.32454 377.10652 212.99669 378.77868 212.99669 380.83465 C
@c
F

@rax %Note: Object
556.24620 377.24655 602.43307 421.96337 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
598.60006 421.96337 m
560.07921 421.96337 L
557.96513 421.96337 556.24620 420.24359 556.24620 418.13036 C
556.24620 381.07956 L
556.24620 378.96661 557.96513 377.24655 560.07921 377.24655 C
598.60006 377.24655 L
600.71301 377.24655 602.43307 378.96661 602.43307 381.07956 C
602.43307 418.13036 L
602.43307 420.24359 600.71301 421.96337 598.60006 421.96337 C
@c
F

@rax %Note: Object
609.84312 377.24655 656.59720 421.96337 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
652.76419 421.96337 m
613.67613 421.96337 L
611.56318 421.96337 609.84312 420.24359 609.84312 418.13036 C
609.84312 381.07956 L
609.84312 378.96661 611.56318 377.24655 613.67613 377.24655 C
652.76419 377.24655 L
654.87713 377.24655 656.59720 378.96661 656.59720 381.07956 C
656.59720 418.13036 L
656.59720 420.24359 654.87713 421.96337 652.76419 421.96337 C
@c
F

@rax %Note: Object
663.44882 376.88683 709.77969 422.32280 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
705.94668 422.32280 m
667.28183 422.32280 L
665.16888 422.32280 663.44882 420.60274 663.44882 418.48980 C
663.44882 380.71984 L
663.44882 378.60690 665.16888 376.88683 667.28183 376.88683 C
705.94668 376.88683 L
708.05991 376.88683 709.77969 378.60690 709.77969 380.71984 C
709.77969 418.48980 L
709.77969 420.60274 708.05991 422.32280 705.94668 422.32280 C
@c
F

@rax %Note: Object
716.95219 376.88683 764.13430 422.32280 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
760.30129 422.32280 m
720.78520 422.32280 L
718.67225 422.32280 716.95219 420.60274 716.95219 418.48980 C
716.95219 380.71984 L
716.95219 378.60690 718.67225 376.88683 720.78520 376.88683 C
760.30129 376.88683 L
762.41424 376.88683 764.13430 378.60690 764.13430 380.71984 C
764.13430 418.48980 L
764.13430 420.60274 762.41424 422.32280 760.30129 422.32280 C
@c
F

@rax %Note: Object
690.20079 586.65855 764.57169 631.37480 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
760.73868 631.37480 m
694.03380 631.37480 L
691.92085 631.37480 690.20079 629.65559 690.20079 627.54265 C
690.20079 590.49156 L
690.20079 588.37861 691.92085 586.65855 694.03380 586.65855 C
760.73868 586.65855 L
762.85191 586.65855 764.57169 588.37861 764.57169 590.49156 C
764.57169 627.54265 L
764.57169 629.65559 762.85191 631.37480 760.73868 631.37480 C
@c
F

@rax %Note: Object
187.16003 125.76047 568.59279 362.76038 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
560.15093 362.76038 m
195.60189 362.76038 L
190.94003 362.76038 187.16003 359.00731 187.16003 354.37635 C
187.16003 134.14450 L
187.16003 129.51439 190.94003 125.76047 195.60189 125.76047 C
560.15093 125.76132 L
564.81279 125.76132 568.59279 129.51439 568.59279 134.14535 C
568.59194 354.37635 L
568.59194 359.00731 564.81279 362.76038 560.15093 362.76038 C
@c
F

@rax %Note: Object
306.27581 97.72498 449.42485 110.75584 @E
/$fm 1 def
 0 O 0 @g
0.0078 0.0078 0.0078  create_rgb_color set_solid_fill
306.27581 107.36306 m
306.27581 101.23597 314.06003 97.72498 320.16501 97.72498 C
377.28283 97.72498 L
435.25191 97.72498 L
441.35688 97.72498 449.42485 101.25808 449.42485 107.36306 C
449.42485 107.36306 445.59694 110.47209 442.89099 110.47209 C
376.56482 110.75584 L
312.40885 110.47209 L
309.29584 110.15093 306.27581 107.36306 306.27581 107.36306 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
