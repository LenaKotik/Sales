%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -107 447 679 752 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: MacBook Pro 15 Клава Vector.eps
%%CreationDate: Thu May 30 18:05:29 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
-106.55660 447.15798 678.17537 751.15786 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
673.39247 615.23291 m
673.39247 612.02381 670.79055 609.42189 667.58060 609.42189 C
629.24655 609.42189 L
626.03745 609.42189 623.43439 612.02381 623.43439 615.23291 C
623.43439 651.70602 L
623.43439 654.91483 626.03745 657.51676 629.24655 657.51676 C
667.58060 657.51676 L
670.79055 657.51676 673.39247 654.91483 673.39247 651.70602 C
673.39247 615.23291 L
@c
673.10957 562.96800 m
673.10957 559.75776 670.50652 557.15698 667.29742 557.15698 C
589.09039 557.15698 L
585.88044 557.15698 583.27937 559.75776 583.27937 562.96800 C
583.27937 599.43997 L
583.27937 602.64992 585.88044 605.25184 589.09039 605.25184 C
667.29742 605.25184 L
670.50652 605.25184 673.10957 602.64992 673.10957 599.43997 C
673.10957 562.96800 L
@c
673.10957 458.10879 m
673.10957 454.89997 670.50652 452.29776 667.29742 452.29776 C
629.52945 452.29776 L
626.32063 452.29776 623.71843 454.89997 623.71843 458.10879 C
623.71843 494.31685 L
623.71843 497.52595 626.32063 500.12787 629.52945 500.12787 C
667.29742 500.12787 L
670.50652 500.12787 673.10957 497.52595 673.10957 494.31685 C
673.10957 458.10879 L
@c
619.23345 458.10879 m
619.23345 454.89997 616.63153 452.29776 613.42157 452.29776 C
575.65446 452.29776 L
572.44450 452.29776 569.84258 454.89997 569.84258 458.10879 C
569.84258 494.31685 L
569.84258 497.52595 572.44450 500.12787 575.65446 500.12787 C
613.42157 500.12787 L
616.63153 500.12787 619.23345 497.52595 619.23345 494.31685 C
619.23345 458.10879 L
@c
565.63540 458.10879 m
565.63540 454.89997 563.03348 452.29776 559.82438 452.29776 C
522.05556 452.29776 L
518.84646 452.29776 516.24539 454.89997 516.24539 458.10879 C
516.24539 494.31685 L
516.24539 497.52595 518.84646 500.12787 522.05556 500.12787 C
559.82438 500.12787 L
563.03348 500.12787 565.63540 497.52595 565.63540 494.31685 C
565.63540 458.10879 L
@c
511.97443 458.10879 m
511.97443 454.89997 509.37250 452.29776 506.16340 452.29776 C
468.39543 452.29776 L
465.18548 452.29776 462.58356 454.89997 462.58356 458.10879 C
462.58356 494.31685 L
462.58356 497.52595 465.18548 500.12787 468.39543 500.12787 C
506.16340 500.12787 L
509.37250 500.12787 511.97443 497.52595 511.97443 494.31685 C
511.97443 458.10879 L
@c
458.00759 458.18192 m
458.00759 454.97282 455.40652 452.36976 452.19657 452.36976 C
401.19959 452.36976 L
397.99049 452.36976 395.38857 454.97282 395.38857 458.18192 C
395.38857 494.24485 L
395.38857 497.45395 397.99049 500.05587 401.19959 500.05587 C
452.19657 500.05587 L
455.40652 500.05587 458.00759 497.45395 458.00759 494.24485 C
458.00759 458.18192 L
@c
391.30951 510.66794 m
391.30951 507.45883 388.70759 504.85691 385.49849 504.85691 C
347.73052 504.85691 L
344.52057 504.85691 341.91836 507.45883 341.91836 510.66794 C
341.91836 547.13991 L
341.91836 550.34901 344.52057 552.95093 347.73052 552.95093 C
385.49849 552.95093 L
388.70759 552.95093 391.30951 550.34901 391.30951 547.13991 C
391.30951 510.66794 L
@c
390.74343 457.87294 m
390.74343 454.94391 388.36857 452.56876 385.43953 452.56876 C
131.43061 452.56876 L
128.50157 452.56876 126.12756 454.94391 126.12756 457.87294 C
126.12756 494.55383 L
126.12756 497.48287 128.50157 499.85688 131.43061 499.85688 C
385.43953 499.85688 L
388.36857 499.85688 390.74343 497.48287 390.74343 494.55383 C
390.74343 457.87294 L
@c
122.16841 510.66794 m
122.16841 507.45883 119.56649 504.85691 116.35739 504.85691 C
78.30652 504.85691 L
75.09657 504.85691 72.49436 507.45883 72.49436 510.66794 C
72.49436 547.13991 L
72.49436 550.34901 75.09657 552.95093 78.30652 552.95093 C
116.35739 552.95093 L
119.56649 552.95093 122.16841 550.34901 122.16841 547.13991 C
122.16841 510.66794 L
@c
122.16841 458.14989 m
122.16841 454.94079 119.56649 452.33887 116.35739 452.33887 C
65.06957 452.33887 L
61.86047 452.33887 59.25855 454.94079 59.25855 458.14989 C
59.25855 494.27575 L
59.25855 497.48485 61.86047 500.08677 65.06957 500.08677 C
116.35739 500.08677 L
119.56649 500.08677 122.16841 497.48485 122.16841 494.27575 C
122.16841 458.14989 L
@c
55.17156 458.10482 m
55.17156 454.89487 52.56964 452.29380 49.35940 452.29380 C
11.02450 452.29380 L
7.81540 452.29380 5.21348 454.89487 5.21348 458.10482 C
5.21348 494.32195 L
5.21348 497.53077 7.81540 500.13298 11.02450 500.13298 C
49.35940 500.13298 L
52.56964 500.13298 55.17156 497.53077 55.17156 494.32195 C
55.17156 458.10482 L
@c
1.41052 458.10482 m
1.41052 454.89487 -1.19140 452.29380 -4.40050 452.29380 C
-42.55342 452.29380 L
-45.76252 452.29380 -48.36444 454.89487 -48.36444 458.10482 C
-48.36444 494.32195 L
-48.36444 497.53077 -45.76252 500.13298 -42.55342 500.13298 C
-4.40050 500.13298 L
-1.19140 500.13298 1.41052 497.53077 1.41052 494.32195 C
1.41052 458.10482 L
@c
-52.51861 458.10482 m
-52.51861 454.89487 -55.12054 452.29380 -58.32964 452.29380 C
-96.74561 452.29380 L
-99.95443 452.29380 -102.55663 454.89487 -102.55663 458.10482 C
-102.55663 494.32195 L
-102.55663 497.53077 -99.95443 500.13298 -96.74561 500.13298 C
-58.32964 500.13298 L
-55.12054 500.13298 -52.51861 497.53077 -52.51861 494.32195 C
-52.51861 458.10482 L
@c
-102.55663 547.22381 m
-102.55663 550.43291 -99.95443 553.03483 -96.74561 553.03483 C
8.89143 553.03483 L
12.10054 553.03483 14.70359 550.43291 14.70359 547.22381 C
14.70359 510.58488 L
14.70359 507.37493 12.10054 504.77301 8.89143 504.77301 C
-96.74561 504.77301 L
-99.95443 504.77301 -102.55663 507.37493 -102.55663 510.58488 C
-102.55663 547.22381 L
@c
-102.37436 599.48901 m
-102.37436 602.69783 -99.77244 605.29975 -96.56362 605.29975 C
-18.22337 605.29975 L
-15.01342 605.29975 -12.41150 602.69783 -12.41150 599.48901 C
-12.41150 562.91896 L
-12.41150 559.70986 -15.01342 557.10794 -18.22337 557.10794 C
-96.56362 557.10794 L
-99.77244 557.10794 -102.37436 559.70986 -102.37436 562.91896 C
-102.37436 599.48901 L
@c
-102.37436 651.75392 m
-102.37436 654.96387 -99.77244 657.56580 -96.56362 657.56580 C
-31.64939 657.56580 L
-28.44057 657.56580 -25.83836 654.96387 -25.83836 651.75392 C
-25.83836 615.18501 L
-25.83836 611.97477 -28.44057 609.37285 -31.64939 609.37285 C
-96.56362 609.37285 L
-99.77244 609.37285 -102.37436 611.97477 -102.37436 615.18501 C
-102.37436 651.75392 L
@c
-102.30151 704.20592 m
-102.30151 707.41474 -99.69959 710.01694 -96.48964 710.01694 C
-58.15446 710.01694 L
-54.94564 710.01694 -52.34343 707.41474 -52.34343 704.20592 C
-52.34343 667.73282 L
-52.34343 664.52400 -54.94564 661.92180 -58.15446 661.92180 C
-96.48964 661.92180 L
-99.69959 661.92180 -102.30151 664.52400 -102.30151 667.73282 C
-102.30151 704.20592 L
@c
-102.01748 740.39981 m
-102.01748 743.60891 -99.41641 746.49487 -96.20646 746.49487 C
667.01452 746.21083 L
670.22362 746.21083 672.82554 743.60891 672.82554 740.39981 C
672.82554 719.79591 L
672.82554 716.58595 670.22362 713.98375 667.01452 713.98375 C
-96.20646 713.98375 L
-99.41641 713.98375 -102.01748 716.58595 -102.01748 719.79591 C
-102.01748 740.39981 L
@c
602.71257 661.92180 m
599.50261 661.92180 596.90154 664.52400 596.90154 667.73282 C
596.90154 704.20592 L
596.90154 707.41474 599.50261 710.01694 602.71257 710.01694 C
667.29742 710.01694 L
670.50652 710.01694 673.10957 707.41474 673.10957 704.20592 C
673.10957 667.73282 L
673.10957 664.52400 670.50652 661.92180 667.29742 661.92180 C
602.71257 661.92180 L
@c
575.27660 609.42189 m
572.06750 609.42189 569.46444 612.02381 569.46444 615.23291 C
569.46444 651.70602 L
569.46444 654.91483 572.06750 657.51676 575.27660 657.51676 C
613.61150 657.51676 L
616.82145 657.51676 619.42252 654.91483 619.42252 651.70602 C
619.42252 615.23291 L
619.42252 612.02381 616.82145 609.42189 613.61150 609.42189 C
575.27660 609.42189 L
@c
503.06854 547.13991 m
503.06854 550.34901 505.67046 552.95093 508.87956 552.95093 C
546.36463 552.95093 L
549.57458 552.95093 552.17537 550.34901 552.17537 547.13991 C
552.17537 510.66794 L
552.17537 507.45883 549.57458 504.85691 546.36463 504.85691 C
508.87956 504.85691 L
505.67046 504.85691 503.06854 507.45883 503.06854 510.66794 C
503.06854 547.13991 L
@c
481.34863 557.15698 m
478.13953 557.15698 475.53846 559.75776 475.53846 562.96800 C
475.53846 599.43997 L
475.53846 602.64992 478.13953 605.25184 481.34863 605.25184 C
519.11745 605.25184 L
522.32740 605.25184 524.92847 602.64992 524.92847 599.43997 C
524.92847 562.96800 L
524.92847 559.75776 522.32740 557.15698 519.11745 557.15698 C
481.34863 557.15698 L
@c
448.97556 547.13991 m
448.97556 550.34901 451.57748 552.95093 454.78743 552.95093 C
492.55455 552.95093 L
495.76450 552.95093 498.36643 550.34901 498.36643 547.13991 C
498.36643 510.66794 L
498.36643 507.45883 495.76450 504.85691 492.55455 504.85691 C
454.78743 504.85691 L
451.57748 504.85691 448.97556 507.45883 448.97556 510.66794 C
448.97556 547.13991 L
@c
427.53940 557.15698 m
424.33058 557.15698 421.72753 559.75776 421.72753 562.96800 C
421.72753 599.43997 L
421.72753 602.64992 424.33058 605.25184 427.53940 605.25184 C
465.59055 605.25184 L
468.80050 605.25184 471.40243 602.64992 471.40243 599.43997 C
471.40243 562.96800 L
471.40243 559.75776 468.80050 557.15698 465.59055 557.15698 C
427.53940 557.15698 L
@c
395.95550 547.13991 m
395.95550 550.34901 398.55742 552.95093 401.76652 552.95093 C
438.96756 552.95093 L
442.17751 552.95093 444.77943 550.34901 444.77943 547.13991 C
444.77943 510.66794 L
444.77943 507.45883 442.17751 504.85691 438.96756 504.85691 C
401.76652 504.85691 L
398.55742 504.85691 395.95550 507.45883 395.95550 510.66794 C
395.95550 547.13991 L
@c
368.14054 599.43997 m
368.14054 602.64992 370.74246 605.25184 373.95241 605.25184 C
411.72038 605.25184 L
414.92948 605.25184 417.53140 602.64992 417.53140 599.43997 C
417.53140 562.96800 L
417.53140 559.75776 414.92948 557.15698 411.72038 557.15698 C
373.95241 557.15698 L
370.74246 557.15698 368.14054 559.75776 368.14054 562.96800 C
368.14054 599.43997 L
@c
431.53540 667.73282 m
431.53540 664.52400 428.93348 661.92180 425.72353 661.92180 C
387.38863 661.92180 L
384.17839 661.92180 381.57761 664.52400 381.57761 667.73282 C
381.57761 704.20592 L
381.57761 707.41474 384.17839 710.01694 387.38863 710.01694 C
425.72353 710.01694 L
428.93348 710.01694 431.53540 707.41474 431.53540 704.20592 C
431.53540 667.73282 L
@c
452.31250 657.51676 m
455.52161 657.51676 458.12353 654.91483 458.12353 651.70602 C
458.12353 615.23291 L
458.12353 612.02381 455.52161 609.42189 452.31250 609.42189 C
414.26050 609.42189 L
411.05140 609.42189 408.44948 612.02381 408.44948 615.23291 C
408.44948 651.70602 L
408.44948 654.91483 411.05140 657.51676 414.26050 657.51676 C
452.31250 657.51676 L
@c
485.12948 667.73282 m
485.12948 664.52400 482.52756 661.92180 479.31846 661.92180 C
440.98356 661.92180 L
437.77361 661.92180 435.17140 664.52400 435.17140 667.73282 C
435.17140 704.20592 L
435.17140 707.41474 437.77361 710.01694 440.98356 710.01694 C
479.31846 710.01694 L
482.52756 710.01694 485.12948 707.41474 485.12948 704.20592 C
485.12948 667.73282 L
@c
505.90063 657.51676 m
509.10945 657.51676 511.71137 654.91483 511.71137 651.70602 C
511.71137 615.23291 L
511.71137 612.02381 509.10945 609.42189 505.90063 609.42189 C
467.56545 609.42189 L
464.35550 609.42189 461.75357 612.02381 461.75357 615.23291 C
461.75357 651.70602 L
461.75357 654.91483 464.35550 657.51676 467.56545 657.51676 C
505.90063 657.51676 L
@c
538.96252 667.73282 m
538.96252 664.52400 536.36145 661.92180 533.15150 661.92180 C
494.81660 661.92180 L
491.60636 661.92180 489.00444 664.52400 489.00444 667.73282 C
489.00444 704.20592 L
489.00444 707.41474 491.60636 710.01694 494.81660 710.01694 C
533.15150 710.01694 L
536.36145 710.01694 538.96252 707.41474 538.96252 704.20592 C
538.96252 667.73282 L
@c
542.69150 667.73282 m
542.69150 704.20592 L
542.69150 707.41474 545.29257 710.01694 548.50252 710.01694 C
586.55452 710.01694 L
589.76362 710.01694 592.36554 707.41474 592.36554 704.20592 C
592.36554 667.73282 L
592.36554 664.52400 589.76362 661.92180 586.55452 661.92180 C
548.50252 661.92180 L
545.29257 661.92180 542.69150 664.52400 542.69150 667.73282 C
@c
559.77846 657.51676 m
562.98841 657.51676 565.58948 654.91483 565.58948 651.70602 C
565.58948 615.23291 L
565.58948 612.02381 562.98841 609.42189 559.77846 609.42189 C
521.44356 609.42189 L
518.23361 609.42189 515.63140 612.02381 515.63140 615.23291 C
515.63140 651.70602 L
515.63140 654.91483 518.23361 657.51676 521.44356 657.51676 C
559.77846 657.51676 L
@c
360.45156 609.42189 m
357.24161 609.42189 354.63940 612.02381 354.63940 615.23291 C
354.63940 651.70602 L
354.63940 654.91483 357.24161 657.51676 360.45156 657.51676 C
398.50243 657.51676 L
401.71238 657.51676 404.31345 654.91483 404.31345 651.70602 C
404.31345 615.23291 L
404.31345 612.02381 401.71238 609.42189 398.50243 609.42189 C
360.45156 609.42189 L
@c
320.19959 557.15698 m
316.98964 557.15698 314.38857 559.75776 314.38857 562.96800 C
314.38857 599.43997 L
314.38857 602.64992 316.98964 605.25184 320.19959 605.25184 C
358.25046 605.25184 L
361.46041 605.25184 364.06261 602.64992 364.06261 599.43997 C
364.06261 562.96800 L
364.06261 559.75776 361.46041 557.15698 358.25046 557.15698 C
320.19959 557.15698 L
@c
288.20750 547.13991 m
288.20750 550.34901 290.80942 552.95093 294.01852 552.95093 C
331.50359 552.95093 L
334.71241 552.95093 337.31461 550.34901 337.31461 547.13991 C
337.31461 510.66794 L
337.31461 507.45883 334.71241 504.85691 331.50359 504.85691 C
294.01852 504.85691 L
290.80942 504.85691 288.20750 507.45883 288.20750 510.66794 C
288.20750 547.13991 L
@c
266.48759 557.15698 m
263.27849 557.15698 260.67657 559.75776 260.67657 562.96800 C
260.67657 599.43997 L
260.67657 602.64992 263.27849 605.25184 266.48759 605.25184 C
304.53959 605.25184 L
307.74841 605.25184 310.35061 602.64992 310.35061 599.43997 C
310.35061 562.96800 L
310.35061 559.75776 307.74841 557.15698 304.53959 557.15698 C
266.48759 557.15698 L
@c
233.88151 547.13991 m
233.88151 550.34901 236.48343 552.95093 239.69254 552.95093 C
277.74454 552.95093 L
280.95449 552.95093 283.55641 550.34901 283.55641 547.13991 C
283.55641 510.66794 L
283.55641 507.45883 280.95449 504.85691 277.74454 504.85691 C
239.69254 504.85691 L
236.48343 504.85691 233.88151 507.45883 233.88151 510.66794 C
233.88151 547.13991 L
@c
212.72854 557.15698 m
209.51943 557.15698 206.91751 559.75776 206.91751 562.96800 C
206.91751 599.43997 L
206.91751 602.64992 209.51943 605.25184 212.72854 605.25184 C
250.78054 605.25184 L
253.99049 605.25184 256.59156 602.64992 256.59156 599.43997 C
256.59156 562.96800 L
256.59156 559.75776 253.99049 557.15698 250.78054 557.15698 C
212.72854 557.15698 L
@c
180.40649 547.13991 m
180.40649 550.34901 183.00756 552.95093 186.21751 552.95093 C
224.26838 552.95093 L
227.47861 552.95093 230.08054 550.34901 230.08054 547.13991 C
230.08054 510.66794 L
230.08054 507.45883 227.47861 504.85691 224.26838 504.85691 C
186.21751 504.85691 L
183.00756 504.85691 180.40649 507.45883 180.40649 510.66794 C
180.40649 547.13991 L
@c
158.97061 557.15698 m
155.76038 557.15698 153.15846 559.75776 153.15846 562.96800 C
153.15846 599.43997 L
153.15846 602.64992 155.76038 605.25184 158.97061 605.25184 C
197.02148 605.25184 L
200.23058 605.25184 202.83250 602.64992 202.83250 599.43997 C
202.83250 562.96800 L
202.83250 559.75776 200.23058 557.15698 197.02148 557.15698 C
158.97061 557.15698 L
@c
126.41159 547.13991 m
126.41159 550.34901 129.01351 552.95093 132.22261 552.95093 C
170.27461 552.95093 L
173.48343 552.95093 176.08564 550.34901 176.08564 547.13991 C
176.08564 510.66794 L
176.08564 507.45883 173.48343 504.85691 170.27461 504.85691 C
132.22261 504.85691 L
129.01351 504.85691 126.41159 507.45883 126.41159 510.66794 C
126.41159 547.13991 L
@c
99.44759 599.43997 m
99.44759 602.64992 102.04951 605.25184 105.25861 605.25184 C
143.30948 605.25184 L
146.51943 605.25184 149.12164 602.64992 149.12164 599.43997 C
149.12164 562.96800 L
149.12164 559.75776 146.51943 557.15698 143.30948 557.15698 C
105.25861 557.15698 L
102.04951 557.15698 99.44759 559.75776 99.44759 562.96800 C
99.44759 599.43997 L
@c
162.51846 667.73282 m
162.51846 664.52400 159.91654 661.92180 156.70743 661.92180 C
118.37254 661.92180 L
115.16343 661.92180 112.56151 664.52400 112.56151 667.73282 C
112.56151 704.20592 L
112.56151 707.41474 115.16343 710.01694 118.37254 710.01694 C
156.70743 710.01694 L
159.91654 710.01694 162.51846 707.41474 162.51846 704.20592 C
162.51846 667.73282 L
@c
183.69241 657.51676 m
186.90151 657.51676 189.50343 654.91483 189.50343 651.70602 C
189.50343 615.23291 L
189.50343 612.02381 186.90151 609.42189 183.69241 609.42189 C
145.64041 609.42189 L
142.43159 609.42189 139.82939 612.02381 139.82939 615.23291 C
139.82939 651.70602 L
139.82939 654.91483 142.43159 657.51676 145.64041 657.51676 C
183.69241 657.51676 L
@c
216.51449 667.73282 m
216.51449 664.52400 213.91257 661.92180 210.70261 661.92180 C
172.36743 661.92180 L
169.15861 661.92180 166.55641 664.52400 166.55641 667.73282 C
166.55641 704.20592 L
166.55641 707.41474 169.15861 710.01694 172.36743 710.01694 C
210.70261 710.01694 L
213.91257 710.01694 216.51449 707.41474 216.51449 704.20592 C
216.51449 667.73282 L
@c
237.16743 657.51676 m
240.37739 657.51676 242.97846 654.91483 242.97846 651.70602 C
242.97846 615.23291 L
242.97846 612.02381 240.37739 609.42189 237.16743 609.42189 C
199.11657 609.42189 L
195.90661 609.42189 193.30554 612.02381 193.30554 615.23291 C
193.30554 651.70602 L
193.30554 654.91483 195.90661 657.51676 199.11657 657.51676 C
237.16743 657.51676 L
@c
270.26646 667.73282 m
270.26646 664.52400 267.66454 661.92180 264.45543 661.92180 C
226.12054 661.92180 L
222.91058 661.92180 220.30951 664.52400 220.30951 667.73282 C
220.30951 704.20592 L
220.30951 707.41474 222.91058 710.01694 226.12054 710.01694 C
264.45543 710.01694 L
267.66454 710.01694 270.26646 707.41474 270.26646 704.20592 C
270.26646 667.73282 L
@c
291.16261 657.51676 m
294.37143 657.51676 296.97449 654.91483 296.97449 651.70602 C
296.97449 615.23291 L
296.97449 612.02381 294.37143 609.42189 291.16261 609.42189 C
253.11146 609.42189 L
249.90151 609.42189 247.29959 612.02381 247.29959 615.23291 C
247.29959 651.70602 L
247.29959 654.91483 249.90151 657.51676 253.11146 657.51676 C
291.16261 657.51676 L
@c
323.85345 667.73282 m
323.85345 664.52400 321.25153 661.92180 318.04243 661.92180 C
279.70753 661.92180 L
276.49757 661.92180 273.89537 664.52400 273.89537 667.73282 C
273.89537 704.20592 L
273.89537 707.41474 276.49757 710.01694 279.70753 710.01694 C
318.04243 710.01694 L
321.25153 710.01694 323.85345 707.41474 323.85345 704.20592 C
323.85345 667.73282 L
@c
327.70545 667.73282 m
327.70545 704.20592 L
327.70545 707.41474 330.30737 710.01694 333.51761 710.01694 C
371.85137 710.01694 L
375.06161 710.01694 377.66353 707.41474 377.66353 704.20592 C
377.66353 667.73282 L
377.66353 664.52400 375.06161 661.92180 371.85137 661.92180 C
333.51761 661.92180 L
330.30737 661.92180 327.70545 664.52400 327.70545 667.73282 C
@c
344.91543 657.51676 m
348.12454 657.51676 350.72646 654.91483 350.72646 651.70602 C
350.72646 615.23291 L
350.72646 612.02381 348.12454 609.42189 344.91543 609.42189 C
306.86343 609.42189 L
303.65461 609.42189 301.05241 612.02381 301.05241 615.23291 C
301.05241 651.70602 L
301.05241 654.91483 303.65461 657.51676 306.86343 657.51676 C
344.91543 657.51676 L
@c
91.59846 609.42189 m
88.38850 609.42189 85.78743 612.02381 85.78743 615.23291 C
85.78743 651.70602 L
85.78743 654.91483 88.38850 657.51676 91.59846 657.51676 C
129.64961 657.51676 L
132.85956 657.51676 135.46148 654.91483 135.46148 651.70602 C
135.46148 615.23291 L
135.46148 612.02381 132.85956 609.42189 129.64961 609.42189 C
91.59846 609.42189 L
@c
51.34139 557.15698 m
48.13257 557.15698 45.53036 559.75776 45.53036 562.96800 C
45.53036 599.43997 L
45.53036 602.64992 48.13257 605.25184 51.34139 605.25184 C
89.39339 605.25184 L
92.60249 605.25184 95.20554 602.64992 95.20554 599.43997 C
95.20554 562.96800 L
95.20554 559.75776 92.60249 557.15698 89.39339 557.15698 C
51.34139 557.15698 L
@c
18.64658 547.18894 m
18.64658 550.39890 21.24850 552.99997 24.45761 552.99997 C
62.50961 552.99997 L
65.71956 552.99997 68.32063 550.39890 68.32063 547.18894 C
68.32063 510.61890 L
68.32063 507.40980 65.71956 504.80674 62.50961 504.80674 C
24.45761 504.80674 L
21.24850 504.80674 18.64658 507.40980 18.64658 510.61890 C
18.64658 547.18894 L
@c
-8.13543 599.43997 m
-8.13543 602.64992 -5.53436 605.25184 -2.32441 605.25184 C
35.72646 605.25184 L
38.93641 605.25184 41.53861 602.64992 41.53861 599.43997 C
41.53861 562.96800 L
41.53861 559.75776 38.93641 557.15698 35.72646 557.15698 C
-2.32441 557.15698 L
-5.53436 557.15698 -8.13543 559.75776 -8.13543 562.96800 C
-8.13543 599.43997 L
@c
55.00063 667.73282 m
55.00063 664.52400 52.39956 661.92180 49.18961 661.92180 C
10.85443 661.92180 L
7.64447 661.92180 5.04340 664.52400 5.04340 667.73282 C
5.04340 704.20592 L
5.04340 707.41474 7.64447 710.01694 10.85443 710.01694 C
49.18961 710.01694 L
52.39956 710.01694 55.00063 707.41474 55.00063 704.20592 C
55.00063 667.73282 L
@c
58.80246 667.73282 m
58.80246 704.20592 L
58.80246 707.41474 61.40438 710.01694 64.61348 710.01694 C
102.94838 710.01694 L
106.15861 710.01694 108.76054 707.41474 108.76054 704.20592 C
108.76054 667.73282 L
108.76054 664.52400 106.15861 661.92180 102.94838 661.92180 C
64.61348 661.92180 L
61.40438 661.92180 58.80246 664.52400 58.80246 667.73282 C
@c
75.93846 657.51676 m
79.14756 657.51676 81.74948 654.91483 81.74948 651.70602 C
81.74948 615.23291 L
81.74948 612.02381 79.14756 609.42189 75.93846 609.42189 C
37.88646 609.42189 L
34.67764 609.42189 32.07543 612.02381 32.07543 615.23291 C
32.07543 651.70602 L
32.07543 654.91483 34.67764 657.51676 37.88646 657.51676 C
75.93846 657.51676 L
@c
-42.85757 661.92180 m
-46.06639 661.92180 -48.66860 664.52400 -48.66860 667.73282 C
-48.66860 704.20592 L
-48.66860 707.41474 -46.06639 710.01694 -42.85757 710.01694 C
-4.52154 710.01694 L
-1.31244 710.01694 1.28948 707.41474 1.28948 704.20592 C
1.28948 667.73282 L
1.28948 664.52400 -1.31244 661.92180 -4.52154 661.92180 C
-42.85757 661.92180 L
@c
-21.55748 651.70602 m
-21.55748 654.91483 -18.95556 657.51676 -15.74646 657.51676 C
22.30554 657.51676 L
25.51436 657.51676 28.11657 654.91483 28.11657 651.70602 C
28.11657 615.23291 L
28.11657 612.02381 25.51436 609.42189 22.30554 609.42189 C
-15.74646 609.42189 L
-18.95556 609.42189 -21.55748 612.02381 -21.55748 615.23291 C
-21.55748 651.70602 L
@c
667.01452 552.95093 m
670.22362 552.95093 672.82554 550.34901 672.82554 547.13991 C
672.82554 510.66794 L
672.82554 507.45883 670.22362 504.85691 667.01452 504.85691 C
562.31348 504.85691 L
559.10353 504.85691 556.50161 507.45883 556.50161 510.66794 C
556.50161 547.13991 L
556.50161 550.34901 559.10353 552.95093 562.31348 552.95093 C
667.01452 552.95093 L
@c
578.79950 562.96800 m
578.79950 559.75776 576.19843 557.15698 572.98847 557.15698 C
535.22050 557.15698 L
532.01055 557.15698 529.40948 559.75776 529.40948 562.96800 C
529.40948 599.43997 L
529.40948 602.64992 532.01055 605.25184 535.22050 605.25184 C
572.98847 605.25184 L
576.19843 605.25184 578.79950 602.64992 578.79950 599.43997 C
578.79950 562.96800 L
@c
668.11663 751.15786 m
-96.49162 751.15786 L
-102.05036 751.15786 -106.55660 746.65191 -106.55660 741.09288 C
-106.55660 457.21786 L
-106.55660 451.66195 -102.05263 447.15798 -96.49644 447.15798 C
668.11663 447.15798 L
673.67140 447.15798 678.17537 451.66195 678.17537 457.21786 C
678.17537 741.09798 L
678.17537 746.65389 673.67140 751.15786 668.11663 751.15786 C
@c
F

@rax %Note: Object
-101.13874 453.70970 -53.93565 498.71565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-58.32964 498.71565 m
-96.74561 498.71565 L
-99.16753 498.71565 -101.13874 496.74472 -101.13874 494.32167 C
-101.13874 458.10369 L
-101.13874 455.68176 -99.16753 453.70970 -96.74561 453.70970 C
-58.32964 453.70970 L
-55.90658 453.70970 -53.93565 455.68176 -53.93565 458.10369 C
-53.93565 494.32167 L
-53.93565 496.74472 -55.90658 498.71565 -58.32964 498.71565 C
@c
F

@rax %Note: Object
-101.13931 506.19033 13.28485 551.61836 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-96.74532 506.19033 m
8.89172 506.19033 L
11.31477 506.19033 13.28485 508.16126 13.28485 510.58431 C
13.28485 547.22324 L
13.28485 549.64630 11.31477 551.61836 8.89172 551.61836 C
-96.74532 551.61836 L
-99.16809 551.61836 -101.13931 549.64630 -101.13931 547.22324 C
-101.13931 510.58431 L
-101.13931 508.16126 -99.16809 506.19033 -96.74532 506.19033 C
@c
F

@rax %Note: Object
-46.94627 453.70970 -0.00737 498.71565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-4.40135 498.71565 m
-42.55342 498.71565 L
-44.97647 498.71565 -46.94627 496.74472 -46.94627 494.32167 C
-46.94627 458.10369 L
-46.94627 455.68176 -44.97647 453.70970 -42.55342 453.70970 C
-4.40135 453.70970 L
-1.97830 453.70970 -0.00737 455.68176 -0.00737 458.10369 C
-0.00737 494.32167 L
-0.00737 496.74472 -1.97830 498.71565 -4.40135 498.71565 C
@c
F

@rax %Note: Object
6.63080 453.70970 53.75367 498.71565 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
49.35969 498.71565 m
11.02479 498.71565 L
8.60173 498.71565 6.63080 496.74472 6.63080 494.32167 C
6.63080 458.10369 L
6.63080 455.68176 8.60173 453.70970 11.02479 453.70970 C
49.35969 453.70970 L
51.78274 453.70970 53.75367 455.68176 53.75367 458.10369 C
53.75367 494.32167 L
53.75367 496.74472 51.78274 498.71565 49.35969 498.71565 C
@c
F

@rax %Note: Object
20.06391 506.22406 66.90302 551.58208 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
24.45789 506.22406 m
62.50989 506.22406 L
64.93294 506.22406 66.90302 508.19613 66.90302 510.61918 C
66.90302 547.18809 L
66.90302 549.61115 64.93294 551.58208 62.50989 551.58208 C
24.45789 551.58208 L
22.03512 551.58208 20.06391 549.61115 20.06391 547.18809 C
20.06391 510.61918 L
20.06391 508.19613 22.03512 506.22406 24.45789 506.22406 C
@c
F

@rax %Note: Object
73.91254 506.27310 120.75137 551.53417 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
116.35739 551.53417 m
78.30652 551.53417 L
75.88346 551.53417 73.91254 549.56211 73.91254 547.13906 C
73.91254 510.66822 L
73.91254 508.24431 75.88346 506.27310 78.30652 506.27310 C
116.35739 506.27310 L
118.78044 506.27310 120.75137 508.24431 120.75137 510.66822 C
120.75137 547.13906 L
120.75137 549.56211 118.78044 551.53417 116.35739 551.53417 C
@c
F

@rax %Note: Object
127.82863 506.27339 174.66746 551.53446 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
132.22261 506.27339 m
170.27348 506.27339 L
172.69654 506.27339 174.66746 508.24431 174.66746 510.66850 C
174.66746 547.13934 L
174.66746 549.56239 172.69654 551.53446 170.27348 551.53446 C
132.22261 551.53446 L
129.79956 551.53446 127.82863 549.56239 127.82863 547.13934 C
127.82863 510.66850 L
127.82863 508.24431 129.79956 506.27339 132.22261 506.27339 C
@c
F

@rax %Note: Object
181.82324 506.27339 228.66321 551.53446 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
186.21723 506.27339 m
224.26923 506.27339 L
226.69228 506.27339 228.66321 508.24431 228.66321 510.66850 C
228.66321 547.13934 L
228.66321 549.56239 226.69228 551.53446 224.26923 551.53446 C
186.21723 551.53446 L
183.79417 551.53446 181.82324 549.56239 181.82324 547.13934 C
181.82324 510.66850 L
181.82324 508.24431 183.79417 506.27339 186.21723 506.27339 C
@c
F

@rax %Note: Object
235.29883 506.27339 282.13767 551.53446 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
239.69282 506.27339 m
277.74482 506.27339 L
280.16787 506.27339 282.13767 508.24431 282.13767 510.66850 C
282.13767 547.13934 L
282.13767 549.56239 280.16787 551.53446 277.74482 551.53446 C
239.69282 551.53446 L
237.26976 551.53446 235.29883 549.56239 235.29883 547.13934 C
235.29883 510.66850 L
235.29883 508.24431 237.26976 506.27339 239.69282 506.27339 C
@c
F

@rax %Note: Object
289.62510 506.27339 335.89701 551.53446 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
294.01909 506.27339 m
331.50302 506.27339 L
333.92608 506.27339 335.89701 508.24431 335.89701 510.66850 C
335.89701 547.13934 L
335.89701 549.56239 333.92608 551.53446 331.50302 551.53446 C
294.01909 551.53446 L
291.59603 551.53446 289.62510 549.56239 289.62510 547.13934 C
289.62510 510.66850 L
289.62510 508.24431 291.59603 506.27339 294.01909 506.27339 C
@c
F

@rax %Note: Object
343.33654 506.27310 389.89247 551.53417 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
385.49849 551.53417 m
347.73052 551.53417 L
345.30746 551.53417 343.33654 549.56211 343.33654 547.13906 C
343.33654 510.66822 L
343.33654 508.24431 345.30746 506.27310 347.73052 506.27310 C
385.49849 506.27310 L
387.92154 506.27310 389.89247 508.24431 389.89247 510.66822 C
389.89247 547.13906 L
389.89247 549.56211 387.92154 551.53417 385.49849 551.53417 C
@c
F

@rax %Note: Object
397.37254 506.27339 443.36154 551.53446 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
401.76652 506.27339 m
438.96756 506.27339 L
441.39061 506.27339 443.36154 508.24431 443.36154 510.66850 C
443.36154 547.13934 L
443.36154 549.56239 441.39061 551.53446 438.96756 551.53446 C
401.76652 551.53446 L
399.34346 551.53446 397.37254 549.56239 397.37254 547.13934 C
397.37254 510.66850 L
397.37254 508.24431 399.34346 506.27339 401.76652 506.27339 C
@c
F

@rax %Note: Object
450.39317 506.27339 496.94910 551.53446 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
454.78715 506.27339 m
492.55597 506.27339 L
494.97817 506.27339 496.94910 508.24431 496.94910 510.66850 C
496.94910 547.13934 L
496.94910 549.56239 494.97817 551.53446 492.55597 551.53446 C
454.78715 551.53446 L
452.36409 551.53446 450.39317 549.56239 450.39317 547.13934 C
450.39317 510.66850 L
450.39317 508.24431 452.36409 506.27339 454.78715 506.27339 C
@c
F

@rax %Note: Object
504.48586 506.27339 550.75890 551.53446 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
508.87984 506.27339 m
546.36491 506.27339 L
548.78769 506.27339 550.75890 508.24431 550.75890 510.66850 C
550.75890 547.13934 L
550.75890 549.56239 548.78769 551.53446 546.36491 551.53446 C
508.87984 551.53446 L
506.45679 551.53446 504.48586 549.56239 504.48586 547.13934 C
504.48586 510.66850 L
504.48586 508.24431 506.45679 506.27339 508.87984 506.27339 C
@c
F

@rax %Note: Object
-100.95704 558.52384 -13.82910 603.88299 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-96.56306 558.52384 m
-18.22309 558.52384 L
-15.80003 558.52384 -13.82910 560.49591 -13.82910 562.91896 C
-13.82910 599.48901 L
-13.82910 601.91178 -15.80003 603.88299 -18.22309 603.88299 C
-96.56306 603.88299 L
-98.98611 603.88299 -100.95704 601.91178 -100.95704 599.48901 C
-100.95704 562.91896 L
-100.95704 560.49591 -98.98611 558.52384 -96.56306 558.52384 C
@c
F

@rax %Note: Object
-100.95704 610.78989 -27.25597 656.14791 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-96.56306 610.78989 m
-31.64995 610.78989 L
-29.22690 610.78989 -27.25597 612.76110 -27.25597 615.18501 C
-27.25597 651.75506 L
-27.25597 654.17811 -29.22690 656.14791 -31.64995 656.14791 C
-96.56306 656.14791 L
-98.98611 656.14791 -100.95704 654.17811 -100.95704 651.75506 C
-100.95704 615.18501 L
-100.95704 612.76110 -98.98611 610.78989 -96.56306 610.78989 C
@c
F

@rax %Note: Object
46.94854 558.57260 93.78765 603.83367 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
93.78765 562.96772 m
93.78765 599.44054 L
93.78765 601.86359 91.81672 603.83367 89.39367 603.83367 C
51.34167 603.83367 L
48.91861 603.83367 46.94854 601.86359 46.94854 599.44054 C
46.94854 562.96772 L
46.94854 560.54466 48.91861 558.57260 51.34167 558.57260 C
89.39367 558.57260 L
91.81672 558.57260 93.78765 560.54466 93.78765 562.96772 C
@c
F

@rax %Note: Object
-6.71868 558.57317 40.12129 603.83424 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-2.32469 558.57317 m
35.72731 558.57317 L
38.15036 558.57317 40.12129 560.54409 40.12129 562.96828 C
40.12129 599.44025 L
40.12129 601.86331 38.15036 603.83424 35.72731 603.83424 C
-2.32469 603.83424 L
-4.74775 603.83424 -6.71868 601.86331 -6.71868 599.44025 C
-6.71868 562.96828 L
-6.71868 560.54409 -4.74775 558.57317 -2.32469 558.57317 C
@c
F

@rax %Note: Object
100.86435 558.57317 147.70431 603.83424 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
105.25833 558.57317 m
143.31033 558.57317 L
145.73339 558.57317 147.70431 560.54409 147.70431 562.96828 C
147.70431 599.44025 L
147.70431 601.86331 145.73339 603.83424 143.31033 603.83424 C
105.25833 603.83424 L
102.83528 603.83424 100.86435 601.86331 100.86435 599.44025 C
100.86435 562.96828 L
100.86435 560.54409 102.83528 558.57317 105.25833 558.57317 C
@c
F

@rax %Note: Object
154.57663 558.57260 201.41546 603.83367 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
201.41546 562.96772 m
201.41546 599.44054 L
201.41546 601.86359 199.44454 603.83367 197.02148 603.83367 C
158.96948 603.83367 L
156.54643 603.83367 154.57663 601.86359 154.57663 599.44054 C
154.57663 562.96772 L
154.57663 560.54466 156.54643 558.57260 158.96948 558.57260 C
197.02148 558.57260 L
199.44454 558.57260 201.41546 560.54466 201.41546 562.96772 C
@c
F

@rax %Note: Object
208.33540 558.57260 255.17424 603.83367 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
255.17424 562.96772 m
255.17424 599.44054 L
255.17424 601.86359 253.20331 603.83367 250.78025 603.83367 C
212.72939 603.83367 L
210.30633 603.83367 208.33540 601.86359 208.33540 599.44054 C
208.33540 562.96772 L
208.33540 560.54466 210.30633 558.57260 212.72939 558.57260 C
250.78025 558.57260 L
253.20331 558.57260 255.17424 560.54466 255.17424 562.96772 C
@c
F

@rax %Note: Object
262.09474 558.57260 308.93357 603.83367 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
308.93357 562.96772 m
308.93357 599.44054 L
308.93357 601.86359 306.96265 603.83367 304.53959 603.83367 C
266.48759 603.83367 L
264.06454 603.83367 262.09474 601.86359 262.09474 599.44054 C
262.09474 562.96772 L
262.09474 560.54466 264.06454 558.57260 266.48759 558.57260 C
304.53959 558.57260 L
306.96265 558.57260 308.93357 560.54466 308.93357 562.96772 C
@c
F

@rax %Note: Object
315.80589 558.57260 362.64501 603.83367 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
362.64501 562.96772 m
362.64501 599.44054 L
362.64501 601.86359 360.67408 603.83367 358.25102 603.83367 C
320.19902 603.83367 L
317.77597 603.83367 315.80589 601.86359 315.80589 599.44054 C
315.80589 562.96772 L
315.80589 560.54466 317.77597 558.57260 320.19902 558.57260 C
358.25102 558.57260 L
360.67408 558.57260 362.64501 560.54466 362.64501 562.96772 C
@c
F

@rax %Note: Object
369.55814 558.57317 416.11408 603.83424 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
373.95213 558.57317 m
411.72009 558.57317 L
414.14315 558.57317 416.11408 560.54409 416.11408 562.96828 C
416.11408 599.44025 L
416.11408 601.86331 414.14315 603.83424 411.72009 603.83424 C
373.95213 603.83424 L
371.52907 603.83424 369.55814 601.86331 369.55814 599.44025 C
369.55814 562.96828 L
369.55814 560.54409 371.52907 558.57317 373.95213 558.57317 C
@c
F

@rax %Note: Object
423.14542 558.57260 469.98539 603.83367 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
469.98539 562.96772 m
469.98539 599.44054 L
469.98539 601.86359 468.01332 603.83367 465.59027 603.83367 C
427.53940 603.83367 L
425.11635 603.83367 423.14542 601.86359 423.14542 599.44054 C
423.14542 562.96772 L
423.14542 560.54466 425.11635 558.57260 427.53940 558.57260 C
465.59027 558.57260 L
468.01332 558.57260 469.98539 560.54466 469.98539 562.96772 C
@c
F

@rax %Note: Object
476.95465 558.57260 523.51058 603.83367 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
523.51058 562.96772 m
523.51058 599.44054 L
523.51058 601.86359 521.53965 603.83367 519.11660 603.83367 C
481.34976 603.83367 L
478.92671 603.83367 476.95465 601.86359 476.95465 599.44054 C
476.95465 562.96772 L
476.95465 560.54466 478.92671 558.57260 481.34976 558.57260 C
519.11660 558.57260 L
521.53965 558.57260 523.51058 560.54466 523.51058 562.96772 C
@c
F

@rax %Note: Object
530.82624 558.57288 577.38331 603.83395 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
572.98819 603.83395 m
535.22022 603.83395 L
532.79830 603.83395 530.82624 601.86302 530.82624 599.43997 C
530.82624 562.96800 L
530.82624 560.54409 532.79830 558.57288 535.22022 558.57288 C
572.98819 558.57288 L
575.41124 558.57288 577.38331 560.54409 577.38331 562.96800 C
577.38331 599.43997 L
577.38331 601.86302 575.41124 603.83395 572.98819 603.83395 C
@c
F

@rax %Note: Object
-20.14016 610.83865 26.69896 656.09887 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-15.74617 610.83865 m
22.30498 610.83865 L
24.72803 610.83865 26.69896 612.81071 26.69896 615.23291 C
26.69896 651.70573 L
26.69896 654.12879 24.72803 656.09887 22.30498 656.09887 C
-15.74617 656.09887 L
-18.16923 656.09887 -20.14016 654.12879 -20.14016 651.70573 C
-20.14016 615.23291 L
-20.14016 612.81071 -18.16923 610.83865 -15.74617 610.83865 C
@c
F

@rax %Note: Object
33.49304 610.83893 80.33216 656.09887 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
33.49304 651.70602 m
33.49304 615.23291 L
33.49304 612.80986 35.46397 610.83893 37.88702 610.83893 C
75.93817 610.83893 L
78.36123 610.83893 80.33216 612.80986 80.33216 615.23291 C
80.33216 651.70602 L
80.33216 654.12907 78.36123 656.09887 75.93817 656.09887 C
37.88702 656.09887 L
35.46397 656.09887 33.49304 654.12907 33.49304 651.70602 C
@c
F

@rax %Note: Object
87.20447 610.83893 134.04331 656.09887 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
134.04331 615.23291 m
134.04331 651.70602 L
134.04331 654.12879 132.07238 656.09887 129.64932 656.09887 C
91.59846 656.09887 L
89.17540 656.09887 87.20447 654.12879 87.20447 651.70602 C
87.20447 615.23291 L
87.20447 612.81099 89.17540 610.83893 91.59846 610.83893 C
129.64932 610.83893 L
132.07238 610.83893 134.04331 612.81099 134.04331 615.23291 C
@c
F

@rax %Note: Object
141.24699 610.83893 188.08611 656.09887 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
141.24699 651.70602 m
141.24699 615.23291 L
141.24699 612.80986 143.21792 610.83893 145.64098 610.83893 C
183.69213 610.83893 L
186.11490 610.83893 188.08611 612.80986 188.08611 615.23291 C
188.08611 651.70602 L
188.08611 654.12907 186.11490 656.09887 183.69213 656.09887 C
145.64098 656.09887 L
143.21792 656.09887 141.24699 654.12907 141.24699 651.70602 C
@c
F

@rax %Note: Object
194.72202 610.83893 241.56113 656.09887 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
194.72202 651.70602 m
194.72202 615.23291 L
194.72202 612.80986 196.69323 610.83893 199.11600 610.83893 C
237.16800 610.83893 L
239.59106 610.83893 241.56113 612.80986 241.56113 615.23291 C
241.56113 651.70602 L
241.56113 654.12907 239.59106 656.09887 237.16800 656.09887 C
199.11600 656.09887 L
196.69323 656.09887 194.72202 654.12907 194.72202 651.70602 C
@c
F

@rax %Note: Object
248.71720 610.83893 295.55631 656.09887 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
248.71720 651.70602 m
248.71720 615.23291 L
248.71720 612.80986 250.68813 610.83893 253.11118 610.83893 C
291.16233 610.83893 L
293.58510 610.83893 295.55631 612.80986 295.55631 615.23291 C
295.55631 651.70602 L
295.55631 654.12907 293.58510 656.09887 291.16233 656.09887 C
253.11118 656.09887 L
250.68813 656.09887 248.71720 654.12907 248.71720 651.70602 C
@c
F

@rax %Note: Object
302.47030 610.83893 349.30913 656.09887 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
302.47030 651.70602 m
302.47030 615.23291 L
302.47030 612.80986 304.44123 610.83893 306.86428 610.83893 C
344.91515 610.83893 L
347.33820 610.83893 349.30913 612.80986 349.30913 615.23291 C
349.30913 651.70602 L
349.30913 654.12907 347.33820 656.09887 344.91515 656.09887 C
306.86428 656.09887 L
304.44123 656.09887 302.47030 654.12907 302.47030 651.70602 C
@c
F

@rax %Note: Object
356.05729 610.83893 402.89641 656.09887 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
402.89641 615.23291 m
402.89641 651.70602 L
402.89641 654.12879 400.92548 656.09887 398.50243 656.09887 C
360.45128 656.09887 L
358.02850 656.09887 356.05729 654.12879 356.05729 651.70602 C
356.05729 615.23291 L
356.05729 612.81099 358.02850 610.83893 360.45128 610.83893 C
398.50243 610.83893 L
400.92548 610.83893 402.89641 612.81099 402.89641 615.23291 C
@c
F

@rax %Note: Object
409.86680 610.83893 456.70564 656.09887 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
409.86680 651.70602 m
409.86680 615.23291 L
409.86680 612.80986 411.83773 610.83893 414.26079 610.83893 C
452.31279 610.83893 L
454.73584 610.83893 456.70564 612.80986 456.70564 615.23291 C
456.70564 651.70602 L
456.70564 654.12907 454.73584 656.09887 452.31279 656.09887 C
414.26079 656.09887 L
411.83773 656.09887 409.86680 654.12907 409.86680 651.70602 C
@c
F

@rax %Note: Object
463.17090 610.83893 510.29376 656.09887 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
463.17090 651.70602 m
463.17090 615.23291 L
463.17090 612.80986 465.14183 610.83893 467.56602 610.83893 C
505.89978 610.83893 L
508.32283 610.83893 510.29376 612.80986 510.29376 615.23291 C
510.29376 651.70602 L
510.29376 654.12907 508.32283 656.09887 505.89978 656.09887 C
467.56602 656.09887 L
465.14183 656.09887 463.17090 654.12907 463.17090 651.70602 C
@c
F

@rax %Note: Object
517.04986 610.83893 564.17187 656.09887 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
517.04986 651.70602 m
517.04986 615.23291 L
517.04986 612.80986 519.02079 610.83893 521.44384 610.83893 C
559.77874 610.83893 L
562.20066 610.83893 564.17187 612.80986 564.17187 615.23291 C
564.17187 651.70602 L
564.17187 654.12907 562.20066 656.09887 559.77874 656.09887 C
521.44384 656.09887 L
519.02079 656.09887 517.04986 654.12907 517.04986 651.70602 C
@c
F

@rax %Note: Object
570.88290 610.83893 618.00576 656.09887 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
618.00576 615.23291 m
618.00576 651.70602 L
618.00576 654.12879 616.03370 656.09887 613.61093 656.09887 C
575.27688 656.09887 L
572.85383 656.09887 570.88290 654.12879 570.88290 651.70602 C
570.88290 615.23291 L
570.88290 612.81099 572.85383 610.83893 575.27688 610.83893 C
613.61093 610.83893 L
616.03370 610.83893 618.00576 612.81099 618.00576 615.23291 C
@c
F

@rax %Note: Object
624.85200 610.83921 671.97600 656.09915 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
667.58088 656.09915 m
629.24598 656.09915 L
626.82293 656.09915 624.85200 654.12907 624.85200 651.70602 C
624.85200 615.23320 L
624.85200 612.81014 626.82293 610.83921 629.24598 610.83921 C
667.58088 610.83921 L
670.00394 610.83921 671.97600 612.81014 671.97600 615.23320 C
671.97600 651.70602 L
671.97600 654.12907 670.00394 656.09915 667.58088 656.09915 C
@c
F

@rax %Note: Object
-100.88391 663.33883 -53.76076 708.59877 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-96.48992 663.33883 m
-58.15474 663.33883 L
-55.73169 663.33883 -53.76076 665.31090 -53.76076 667.73282 C
-53.76076 704.20564 L
-53.76076 706.62869 -55.73169 708.59877 -58.15474 708.59877 C
-96.48992 708.59877 L
-98.91269 708.59877 -100.88391 706.62869 -100.88391 704.20564 C
-100.88391 667.73282 L
-100.88391 665.31090 -98.91269 663.33883 -96.48992 663.33883 C
@c
F

@rax %Note: Object
-100.60072 715.40135 671.40850 745.07839 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-96.20674 715.40135 m
667.01452 715.40135 L
669.43729 715.40135 671.40850 717.37342 671.40850 719.79534 C
671.40850 740.40038 L
671.40850 742.82315 669.43729 744.79521 667.01339 744.79521 C
-96.20674 745.07839 L
-98.54674 745.07839 -100.60072 742.89118 -100.60072 740.40038 C
-100.60072 719.79534 L
-100.60072 717.37342 -98.62951 715.40135 -96.20674 715.40135 C
@c
F

@rax %Note: Object
-47.25099 663.33883 -0.12813 708.59877 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-0.12813 667.73282 m
-0.12813 704.20592 L
-0.12813 706.62898 -2.09906 708.59877 -4.52211 708.59877 C
-42.85701 708.59877 L
-45.28006 708.59877 -47.25099 706.62898 -47.25099 704.20592 C
-47.25099 667.73282 L
-47.25099 665.31090 -45.28006 663.33883 -42.85701 663.33883 C
-4.52211 663.33883 L
-2.09906 663.33883 -0.12813 665.31090 -0.12813 667.73282 C
@c
F

@rax %Note: Object
6.46044 663.33912 53.58331 708.59906 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
49.18932 708.59906 m
10.85443 708.59906 L
8.43137 708.59906 6.46044 706.62898 6.46044 704.20620 C
6.46044 667.73310 L
6.46044 665.31005 8.43137 663.33912 10.85443 663.33912 C
49.18932 663.33912 L
51.61238 663.33912 53.58331 665.31005 53.58331 667.73310 C
53.58331 704.20620 L
53.58331 706.62898 51.61238 708.59906 49.18932 708.59906 C
@c
F

@rax %Note: Object
60.21978 663.33883 107.34265 708.59877 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
102.94866 663.33883 m
105.37172 663.33883 107.34265 665.31090 107.34265 667.73282 C
107.34265 704.20564 L
107.34265 706.62869 105.37172 708.59877 102.94866 708.59877 C
64.61376 708.59877 L
62.19071 708.59877 60.21978 706.62869 60.21978 704.20564 C
60.21978 667.73282 L
60.21978 665.31090 62.19071 663.33883 64.61376 663.33883 C
102.94866 663.33883 L
@c
F

@rax %Note: Object
113.97855 663.33912 161.10142 708.59906 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
156.70743 708.59906 m
118.37254 708.59906 L
115.94948 708.59906 113.97855 706.62898 113.97855 704.20620 C
113.97855 667.73310 L
113.97855 665.31005 115.94948 663.33912 118.37254 663.33912 C
156.70743 663.33912 L
159.13049 663.33912 161.10142 665.31005 161.10142 667.73310 C
161.10142 704.20620 L
161.10142 706.62898 159.13049 708.59906 156.70743 708.59906 C
@c
F

@rax %Note: Object
167.97373 663.33912 215.09660 708.59906 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
210.70261 708.59906 m
172.36772 708.59906 L
169.94466 708.59906 167.97373 706.62898 167.97373 704.20620 C
167.97373 667.73310 L
167.97373 665.31005 169.94466 663.33912 172.36772 663.33912 C
210.70261 663.33912 L
213.12567 663.33912 215.09660 665.31005 215.09660 667.73310 C
215.09660 704.20620 L
215.09660 706.62898 213.12567 708.59906 210.70261 708.59906 C
@c
F

@rax %Note: Object
221.72598 663.33912 268.84913 708.59906 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
264.45487 708.59906 m
226.11997 708.59906 L
223.69691 708.59906 221.72598 706.62898 221.72598 704.20620 C
221.72598 667.73310 L
221.72598 665.31005 223.69691 663.33912 226.11997 663.33912 C
264.45487 663.33912 L
266.87792 663.33912 268.84913 665.31005 268.84913 667.73310 C
268.84913 704.20620 L
268.84913 706.62898 266.87792 708.59906 264.45487 708.59906 C
@c
F

@rax %Note: Object
275.31326 663.33912 322.43641 708.59906 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
318.04243 708.59906 m
279.70753 708.59906 L
277.28447 708.59906 275.31326 706.62898 275.31326 704.20620 C
275.31326 667.73310 L
275.31326 665.31005 277.28447 663.33912 279.70753 663.33912 C
318.04243 663.33912 L
320.46548 663.33912 322.43641 665.31005 322.43641 667.73310 C
322.43641 704.20620 L
322.43641 706.62898 320.46548 708.59906 318.04243 708.59906 C
@c
F

@rax %Note: Object
329.12306 663.33883 376.24620 708.59877 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
376.24620 667.73282 m
376.24620 704.20592 L
376.24620 706.62898 374.27499 708.59877 371.85222 708.59877 C
333.51704 708.59877 L
331.09398 708.59877 329.12306 706.62898 329.12306 704.20592 C
329.12306 667.73282 L
329.12306 665.31090 331.09398 663.33883 333.51704 663.33883 C
371.85222 663.33883 L
374.27499 663.33883 376.24620 665.31090 376.24620 667.73282 C
@c
F

@rax %Note: Object
382.99465 663.33912 430.11751 708.59906 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
425.72353 708.59906 m
387.38863 708.59906 L
384.96557 708.59906 382.99465 706.62898 382.99465 704.20620 C
382.99465 667.73310 L
382.99465 665.31005 384.96557 663.33912 387.38863 663.33912 C
425.72353 663.33912 L
428.14658 663.33912 430.11751 665.31005 430.11751 667.73310 C
430.11751 704.20620 L
430.11751 706.62898 428.14658 708.59906 425.72353 708.59906 C
@c
F

@rax %Note: Object
436.58929 663.33912 483.71244 708.59906 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
479.31817 708.59906 m
440.98328 708.59906 L
438.56022 708.59906 436.58929 706.62898 436.58929 704.20620 C
436.58929 667.73310 L
436.58929 665.31005 438.56022 663.33912 440.98328 663.33912 C
479.31817 663.33912 L
481.74123 663.33912 483.71244 665.31005 483.71244 667.73310 C
483.71244 704.20620 L
483.71244 706.62898 481.74123 708.59906 479.31817 708.59906 C
@c
F

@rax %Note: Object
490.42233 663.33912 537.54633 708.59906 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
533.15121 708.59906 m
494.81631 708.59906 L
492.39326 708.59906 490.42233 706.62898 490.42233 704.20620 C
490.42233 667.73310 L
490.42233 665.31005 492.39326 663.33912 494.81631 663.33912 C
533.15121 663.33912 L
535.57427 663.33912 537.54633 665.31005 537.54633 667.73310 C
537.54633 704.20620 L
537.54633 706.62898 535.57427 708.59906 533.15121 708.59906 C
@c
F

@rax %Note: Object
544.10910 663.33883 590.94822 708.59877 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
590.94822 667.73282 m
590.94822 704.20592 L
590.94822 706.62898 588.97729 708.59877 586.55424 708.59877 C
548.50309 708.59877 L
546.08031 708.59877 544.10910 706.62898 544.10910 704.20592 C
544.10910 667.73282 L
544.10910 665.31090 546.08031 663.33883 548.50309 663.33883 C
586.55424 663.33883 L
588.97729 663.33883 590.94822 665.31090 590.94822 667.73282 C
@c
F

@rax %Note: Object
598.31943 663.33883 671.69140 708.59877 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
671.69140 667.73282 m
671.69140 704.20592 L
671.69140 706.62898 669.72047 708.59877 667.29742 708.59877 C
602.71228 708.59877 L
600.29036 708.59877 598.31943 706.62898 598.31943 704.20592 C
598.31943 667.73282 L
598.31943 665.31090 600.29036 663.33883 602.71228 663.33883 C
667.29742 663.33883 L
669.72047 663.33883 671.69140 665.31090 671.69140 667.73282 C
@c
F

@rax %Note: Object
584.69669 558.57288 671.69169 603.83395 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
667.29770 603.83395 m
589.09068 603.83395 L
586.66791 603.83395 584.69669 601.86302 584.69669 599.43997 C
584.69669 562.96800 L
584.69669 560.54409 586.66791 558.57288 589.09068 558.57288 C
667.29770 558.57288 L
669.72076 558.57288 671.69169 560.54409 671.69169 562.96800 C
671.69169 599.43997 L
671.69169 601.86302 669.72076 603.83395 667.29770 603.83395 C
@c
F

@rax %Note: Object
557.91978 506.27367 671.40794 551.53446 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
557.91978 547.13962 m
557.91978 510.66765 L
557.91978 508.24460 559.89099 506.27367 562.31376 506.27367 C
667.01480 506.27367 L
669.43786 506.27367 671.40794 508.24460 671.40794 510.66765 C
671.40794 547.13962 L
671.40794 549.56268 669.43786 551.53446 667.01480 551.53446 C
562.31376 551.53446 L
559.89099 551.53446 557.91978 549.56268 557.91978 547.13962 C
@c
F

@rax %Note: Object
464.00202 453.71480 510.55795 498.71083 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
506.16397 498.71083 m
468.39487 498.71083 L
465.97294 498.71083 464.00202 496.73991 464.00202 494.31685 C
464.00202 458.10879 L
464.00202 455.68687 465.97294 453.71480 468.39487 453.71480 C
506.16397 453.71480 L
508.58702 453.71480 510.55795 455.68687 510.55795 458.10879 C
510.55795 494.31685 L
510.55795 496.73991 508.58702 498.71083 506.16397 498.71083 C
@c
F

@rax %Note: Object
517.66214 453.71480 564.21808 498.71083 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
559.82409 498.71083 m
522.05613 498.71083 L
519.63420 498.71083 517.66214 496.73991 517.66214 494.31685 C
517.66214 458.10879 L
517.66214 455.68687 519.63420 453.71480 522.05613 453.71480 C
559.82409 453.71480 L
562.24715 453.71480 564.21808 455.68687 564.21808 458.10879 C
564.21808 494.31685 L
564.21808 496.73991 562.24715 498.71083 559.82409 498.71083 C
@c
F

@rax %Note: Object
571.26076 453.71480 617.81669 498.71083 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
613.42186 498.71083 m
575.65389 498.71083 L
573.23169 498.71083 571.26076 496.73991 571.26076 494.31685 C
571.26076 458.10879 L
571.26076 455.68687 573.23169 453.71480 575.65389 453.71480 C
613.42186 453.71480 L
615.84491 453.71480 617.81669 455.68687 617.81669 458.10879 C
617.81669 494.31685 L
617.81669 496.73991 615.84491 498.71083 613.42186 498.71083 C
@c
F

@rax %Note: Object
625.13575 453.71480 671.69169 498.71083 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
667.29770 498.71083 m
629.52973 498.71083 L
627.10781 498.71083 625.13575 496.73991 625.13575 494.31685 C
625.13575 458.10879 L
625.13575 455.68687 627.10781 453.71480 629.52973 453.71480 C
667.29770 453.71480 L
669.72076 453.71480 671.69169 455.68687 671.69169 458.10879 C
671.69169 494.31685 L
671.69169 496.73991 669.72076 498.71083 667.29770 498.71083 C
@c
F

@rax %Note: Object
60.67644 453.75647 120.75137 498.66945 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
116.35739 498.66945 m
65.06929 498.66945 L
62.64737 498.66945 60.67644 496.69824 60.67644 494.27631 C
60.67644 458.14932 L
60.67644 455.72740 62.64737 453.75647 65.06929 453.75647 C
116.35739 453.75647 L
118.78044 453.75647 120.75137 455.72740 120.75137 458.14932 C
120.75137 494.27631 L
120.75137 496.69824 118.78044 498.66945 116.35739 498.66945 C
@c
F

@rax %Note: Object
396.80532 453.78765 456.59140 498.63855 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
452.19628 498.63855 m
401.19931 498.63855 L
398.77739 498.63855 396.80532 496.66649 396.80532 494.24372 C
396.80532 458.18164 L
396.80532 455.75858 398.77739 453.78765 401.19931 453.78765 C
452.19628 453.78765 L
454.61934 453.78765 456.59140 455.75858 456.59140 458.18164 C
456.59140 494.24372 L
456.59140 496.66649 454.61934 498.63855 452.19628 498.63855 C
@c
F

@rax %Note: Object
127.54488 453.98551 389.32498 498.44041 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
385.43981 498.44041 m
131.43090 498.44041 L
129.28791 498.44041 127.54488 496.69540 127.54488 494.55326 C
127.54488 457.87238 L
127.54488 455.72939 129.28791 453.98551 131.43090 453.98551 C
385.43981 453.98551 L
387.58280 453.98551 389.32498 455.72939 389.32498 457.87238 C
389.32498 494.55326 L
389.32498 496.69540 387.58280 498.44041 385.43981 498.44041 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
