%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -193 144 795 825 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: MacBook Pro 15 Панель Full Ve...
%%CreationDate: Thu May 30 18:03:58 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
-192.75165 144.60718 794.89446 824.43798 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
789.81449 455.47002 m
789.81449 453.98693 788.61231 452.78504 787.12838 452.78504 C
699.37540 452.78504 L
697.89231 452.78504 696.69043 453.98693 696.69043 455.47002 C
696.69043 744.77395 L
696.69043 746.25704 697.89231 747.45780 699.37540 747.45780 C
787.12838 747.45780 L
788.61231 747.45780 789.81449 746.25704 789.81449 744.77395 C
789.81449 455.47002 L
@c
688.65449 616.48101 m
688.65449 613.27077 686.05257 610.66885 682.84233 610.66885 C
644.50743 610.66885 L
641.29833 610.66885 638.69641 613.27077 638.69641 616.48101 C
638.69641 652.66894 L
638.69641 655.87890 641.29833 658.48082 644.50743 658.48082 C
682.84233 658.48082 L
686.05257 658.48082 688.65449 655.87890 688.65449 652.66894 C
688.65449 616.48101 L
@c
688.37131 564.21496 m
688.37131 561.00586 685.76854 558.40394 682.55943 558.40394 C
604.35241 558.40394 L
601.14246 558.40394 598.54139 561.00586 598.54139 564.21496 C
598.54139 600.40403 L
598.54139 603.61285 601.14246 606.21477 604.35241 606.21477 C
682.55943 606.21477 L
685.76854 606.21477 688.37131 603.61285 688.37131 600.40403 C
688.37131 564.21496 L
@c
688.37131 459.35688 m
688.37131 456.14693 685.76854 453.54501 682.55943 453.54501 C
644.79146 453.54501 L
641.58236 453.54501 638.98044 456.14693 638.98044 459.35688 C
638.98044 495.56381 L
638.98044 498.77376 641.58236 501.37483 644.79146 501.37483 C
682.55943 501.37483 L
685.76854 501.37483 688.37131 498.77376 688.37131 495.56381 C
688.37131 459.35688 L
@c
634.49546 459.35688 m
634.49546 456.14693 631.89354 453.54501 628.68331 453.54501 C
590.91647 453.54501 L
587.70652 453.54501 585.10431 456.14693 585.10431 459.35688 C
585.10431 495.56381 L
585.10431 498.77376 587.70652 501.37483 590.91647 501.37483 C
628.68331 501.37483 L
631.89354 501.37483 634.49546 498.77376 634.49546 495.56381 C
634.49546 459.35688 L
@c
580.89742 459.35688 m
580.89742 456.14693 578.29436 453.54501 575.08554 453.54501 C
537.31757 453.54501 L
534.10847 453.54501 531.50655 456.14693 531.50655 459.35688 C
531.50655 495.56381 L
531.50655 498.77376 534.10847 501.37483 537.31757 501.37483 C
575.08554 501.37483 L
578.29436 501.37483 580.89742 498.77376 580.89742 495.56381 C
580.89742 459.35688 L
@c
527.23644 459.35688 m
527.23644 456.14693 524.63452 453.54501 521.42457 453.54501 C
483.65745 453.54501 L
480.44750 453.54501 477.84557 456.14693 477.84557 459.35688 C
477.84557 495.56381 L
477.84557 498.77376 480.44750 501.37483 483.65745 501.37483 C
521.42457 501.37483 L
524.63452 501.37483 527.23644 498.77376 527.23644 495.56381 C
527.23644 459.35688 L
@c
526.81946 169.92482 m
526.81946 164.91487 522.95131 160.73291 518.25742 159.93298 C
517.11732 159.73880 513.85351 159.98995 513.85351 159.98995 C
85.67745 159.98995 L
84.21732 159.98995 L
79.14841 159.98995 74.75754 164.59398 74.75754 169.92482 C
74.75754 431.95096 L
74.75754 437.38186 79.19235 441.54198 84.61247 441.54198 C
516.50050 441.54198 L
522.17433 441.54198 526.81946 437.17294 526.81946 431.48693 C
526.81946 169.92482 L
@c
74.52057 495.52299 m
74.52057 498.73181 77.12249 501.33402 80.33131 501.33402 C
131.61940 501.33402 L
134.82935 501.33402 137.43043 498.73181 137.43043 495.52299 C
137.43043 459.39798 L
137.43043 456.18803 134.82935 453.58696 131.61940 453.58696 C
80.33131 453.58696 L
77.12249 453.58696 74.52057 456.18803 74.52057 459.39798 C
74.52057 495.52299 L
@c
70.43357 459.35178 m
70.43357 456.14183 67.83137 453.53991 64.62142 453.53991 C
26.28652 453.53991 L
23.07742 453.53991 20.47550 456.14183 20.47550 459.35178 C
20.47550 495.56891 L
20.47550 498.77802 23.07742 501.37994 26.28652 501.37994 C
64.62142 501.37994 L
67.83137 501.37994 70.43357 498.77802 70.43357 495.56891 C
70.43357 459.35178 L
@c
16.67140 459.35178 m
16.67140 456.14183 14.07033 453.53991 10.86038 453.53991 C
-27.29169 453.53991 L
-30.50050 453.53991 -33.10243 456.14183 -33.10243 459.35178 C
-33.10243 495.56891 L
-33.10243 498.77802 -30.50050 501.37994 -27.29169 501.37994 C
10.86038 501.37994 L
14.07033 501.37994 16.67140 498.77802 16.67140 495.56891 C
16.67140 459.35178 L
@c
-37.25660 459.35178 m
-37.25660 456.14183 -39.85852 453.53991 -43.06762 453.53991 C
-81.48359 453.53991 L
-84.69269 453.53991 -87.29461 456.14183 -87.29461 459.35178 C
-87.29461 495.56891 L
-87.29461 498.77802 -84.69269 501.37994 -81.48359 501.37994 C
-43.06762 501.37994 L
-39.85852 501.37994 -37.25660 498.77802 -37.25660 495.56891 C
-37.25660 459.35178 L
@c
-87.29461 548.46992 m
-87.29461 551.67987 -84.69269 554.28180 -81.48359 554.28180 C
24.15345 554.28180 L
27.36255 554.28180 29.96447 551.67987 29.96447 548.46992 C
29.96447 511.83099 L
29.96447 508.62189 27.36255 506.01997 24.15345 506.01997 C
-81.48359 506.01997 L
-84.69269 506.01997 -87.29461 508.62189 -87.29461 511.83099 C
-87.29461 548.46992 L
@c
-87.11263 600.45194 m
-87.11263 603.66189 -84.51043 606.26381 -81.30161 606.26381 C
-2.96050 606.26381 L
0.24831 606.26381 2.85052 603.66189 2.85052 600.45194 C
2.85052 564.16592 L
2.85052 560.95682 0.24831 558.35490 -2.96050 558.35490 C
-81.30161 558.35490 L
-84.51043 558.35490 -87.11263 560.95682 -87.11263 564.16592 C
-87.11263 600.45194 L
@c
-87.11263 652.71798 m
-87.11263 655.92794 -84.51043 658.52901 -81.30161 658.52901 C
-16.38850 658.52901 L
-13.17855 658.52901 -10.57663 655.92794 -10.57663 652.71798 C
-10.57663 616.43197 L
-10.57663 613.22202 -13.17855 610.61981 -16.38850 610.61981 C
-81.30161 610.61981 L
-84.51043 610.61981 -87.11263 613.22202 -87.11263 616.43197 C
-87.11263 652.71798 L
@c
-87.03950 705.16885 m
-87.03950 708.37880 -84.43757 710.98101 -81.22762 710.98101 C
-42.89357 710.98101 L
-39.68362 710.98101 -37.08170 708.37880 -37.08170 705.16885 C
-37.08170 668.98091 L
-37.08170 665.77096 -39.68362 663.16904 -42.89357 663.16904 C
-81.22762 663.16904 L
-84.43757 663.16904 -87.03950 665.77096 -87.03950 668.98091 C
-87.03950 705.16885 L
@c
-86.75546 740.79694 m
-86.75546 744.00576 -84.15468 746.89087 -80.94444 746.89087 C
682.27654 746.89087 L
685.48535 746.89087 688.08643 744.28980 688.08643 741.07984 C
688.08643 721.04287 L
688.08643 717.83291 685.48535 715.23184 682.27654 715.23184 C
-80.94444 715.23184 L
-84.15468 715.23184 -86.75546 717.83291 -86.75546 721.04287 C
-86.75546 740.79694 L
@c
617.97430 663.16904 m
614.76435 663.16904 612.16356 665.77096 612.16356 668.98091 C
612.16356 705.16885 L
612.16356 708.37880 614.76435 710.98101 617.97430 710.98101 C
682.55943 710.98101 L
685.76854 710.98101 688.37131 708.37880 688.37131 705.16885 C
688.37131 668.98091 L
688.37131 665.77096 685.76854 663.16904 682.55943 663.16904 C
617.97430 663.16904 L
@c
590.53833 610.66885 m
587.32951 610.66885 584.72646 613.27077 584.72646 616.48101 C
584.72646 652.66894 L
584.72646 655.87890 587.32951 658.48082 590.53833 658.48082 C
628.87351 658.48082 L
632.08346 658.48082 634.68454 655.87890 634.68454 652.66894 C
634.68454 616.48101 L
634.68454 613.27077 632.08346 610.66885 628.87351 610.66885 C
590.53833 610.66885 L
@c
518.33055 548.38687 m
518.33055 551.59597 520.93247 554.19902 524.14157 554.19902 C
561.62636 554.19902 L
564.83546 554.19902 567.43739 551.59597 567.43739 548.38687 C
567.43739 511.91490 L
567.43739 508.70494 564.83546 506.10302 561.62636 506.10302 C
524.14157 506.10302 L
520.93247 506.10302 518.33055 508.70494 518.33055 511.91490 C
518.33055 548.38687 L
@c
496.61036 558.40394 m
493.40154 558.40394 490.79934 561.00586 490.79934 564.21496 C
490.79934 600.40403 L
490.79934 603.61285 493.40154 606.21477 496.61036 606.21477 C
534.37833 606.21477 L
537.58857 606.21477 540.19049 603.61285 540.19049 600.40403 C
540.19049 564.21496 L
540.19049 561.00586 537.58857 558.40394 534.37833 558.40394 C
496.61036 558.40394 L
@c
470.04831 506.10302 m
466.83836 506.10302 464.23757 508.70494 464.23757 511.91490 C
464.23757 548.38687 L
464.23757 551.59597 466.83836 554.19902 470.04831 554.19902 C
507.81657 554.19902 L
511.02652 554.19902 513.62731 551.59597 513.62731 548.38687 C
513.62731 511.91490 L
513.62731 508.70494 511.02652 506.10302 507.81657 506.10302 C
470.04831 506.10302 L
@c
410.64945 495.49096 m
410.64945 498.70091 413.25250 501.30283 416.46132 501.30283 C
467.45830 501.30283 L
470.66854 501.30283 473.26932 498.70091 473.26932 495.49096 C
473.26932 459.42888 L
473.26932 456.21978 470.66854 453.61786 467.45830 453.61786 C
416.46132 453.61786 L
413.25250 453.61786 410.64945 456.21978 410.64945 459.42888 C
410.64945 495.49096 L
@c
389.21357 558.40394 m
386.00447 558.40394 383.40255 561.00586 383.40255 564.21496 C
383.40255 600.40403 L
383.40255 603.61285 386.00447 606.21477 389.21357 606.21477 C
426.98154 606.21477 L
430.19150 606.21477 432.79342 603.61285 432.79342 600.40403 C
432.79342 564.21496 L
432.79342 561.00586 430.19150 558.40394 426.98154 558.40394 C
389.21357 558.40394 L
@c
400.76050 506.10302 m
362.99254 506.10302 L
359.78230 506.10302 357.18038 508.70494 357.18038 511.91490 C
357.18038 548.38687 L
357.18038 551.59597 359.78230 554.19902 362.99254 554.19902 C
400.76050 554.19902 L
403.96932 554.19902 406.57153 551.59597 406.57153 548.38687 C
406.57153 511.91490 L
406.57153 508.70494 403.96932 506.10302 400.76050 506.10302 C
@c
141.38957 495.80079 m
141.38957 498.72983 143.76331 501.10384 146.69235 501.10384 C
400.70154 501.10384 L
403.63030 501.10384 406.00431 498.72983 406.00431 495.80079 C
406.00431 459.11877 L
406.00431 456.19087 403.63030 453.81685 400.70154 453.81685 C
146.69235 453.81685 L
143.76331 453.81685 141.38957 456.19087 141.38957 459.11877 C
141.38957 495.80079 L
@c
120.52035 558.40394 m
117.31153 558.40394 114.70932 561.00586 114.70932 564.21496 C
114.70932 600.40403 L
114.70932 603.61285 117.31153 606.21477 120.52035 606.21477 C
158.57150 606.21477 L
161.78145 606.21477 164.38337 603.61285 164.38337 600.40403 C
164.38337 564.21496 L
164.38337 561.00586 161.78145 558.40394 158.57150 558.40394 C
120.52035 558.40394 L
@c
87.75638 548.38687 m
87.75638 551.59597 90.35830 554.19902 93.56740 554.19902 C
131.61940 554.19902 L
134.82935 554.19902 137.43043 551.59597 137.43043 548.38687 C
137.43043 511.91490 L
137.43043 508.70494 134.82935 506.10302 131.61940 506.10302 C
93.56740 506.10302 L
90.35830 506.10302 87.75638 508.70494 87.75638 511.91490 C
87.75638 548.38687 L
@c
66.60454 558.40394 m
63.39430 558.40394 60.79238 561.00586 60.79238 564.21496 C
60.79238 600.40403 L
60.79238 603.61285 63.39430 606.21477 66.60454 606.21477 C
104.65540 606.21477 L
107.86450 606.21477 110.46643 603.61285 110.46643 600.40403 C
110.46643 564.21496 L
110.46643 561.00586 107.86450 558.40394 104.65540 558.40394 C
66.60454 558.40394 L
@c
33.90831 548.43591 m
33.90831 551.64501 36.51052 554.24693 39.71934 554.24693 C
77.77134 554.24693 L
80.98157 554.24693 83.58236 551.64501 83.58236 548.43591 C
83.58236 511.86586 L
83.58236 508.65704 80.98157 506.05483 77.77134 506.05483 C
39.71934 506.05483 L
36.51052 506.05483 33.90831 508.65704 33.90831 511.86586 C
33.90831 548.43591 L
@c
7.12630 600.40403 m
7.12630 603.61285 9.72850 606.21477 12.93732 606.21477 C
50.98847 606.21477 L
54.19843 606.21477 56.80035 603.61285 56.80035 600.40403 C
56.80035 564.21496 L
56.80035 561.00586 54.19843 558.40394 50.98847 558.40394 C
12.93732 558.40394 L
9.72850 558.40394 7.12630 561.00586 7.12630 564.21496 C
7.12630 600.40403 L
@c
70.26236 668.98091 m
70.26236 665.77096 67.66157 663.16904 64.45134 663.16904 C
26.11644 663.16904 L
22.90649 663.16904 20.30542 665.77096 20.30542 668.98091 C
20.30542 705.16885 L
20.30542 708.37880 22.90649 710.98101 26.11644 710.98101 C
64.45134 710.98101 L
67.66157 710.98101 70.26236 708.37880 70.26236 705.16885 C
70.26236 668.98091 L
@c
91.20047 658.48082 m
94.40957 658.48082 97.01150 655.87890 97.01150 652.66894 C
97.01150 616.48101 L
97.01150 613.27077 94.40957 610.66885 91.20047 610.66885 C
53.14847 610.66885 L
49.93937 610.66885 47.33745 613.27077 47.33745 616.48101 C
47.33745 652.66894 L
47.33745 655.87890 49.93937 658.48082 53.14847 658.48082 C
91.20047 658.48082 L
@c
124.02255 668.98091 m
124.02255 665.77096 121.41950 663.16904 118.21039 663.16904 C
79.87550 663.16904 L
76.66639 663.16904 74.06447 665.77096 74.06447 668.98091 C
74.06447 705.16885 L
74.06447 708.37880 76.66639 710.98101 79.87550 710.98101 C
118.21039 710.98101 L
121.41950 710.98101 124.02255 708.37880 124.02255 705.16885 C
124.02255 668.98091 L
@c
144.91134 658.48082 m
148.12157 658.48082 150.72350 655.87890 150.72350 652.66894 C
150.72350 616.48101 L
150.72350 613.27077 148.12157 610.66885 144.91134 610.66885 C
106.85934 610.66885 L
103.65052 610.66885 101.04831 613.27077 101.04831 616.48101 C
101.04831 652.66894 L
101.04831 655.87890 103.65052 658.48082 106.85934 658.48082 C
144.91134 658.48082 L
@c
177.78047 668.98091 m
177.78047 665.77096 175.17855 663.16904 171.96945 663.16904 C
133.63455 663.16904 L
130.42431 663.16904 127.82353 665.77096 127.82353 668.98091 C
127.82353 705.16885 L
127.82353 708.37880 130.42431 710.98101 133.63455 710.98101 C
171.96945 710.98101 L
175.17855 710.98101 177.78047 708.37880 177.78047 705.16885 C
177.78047 668.98091 L
@c
198.95443 658.48082 m
202.16353 658.48082 204.76545 655.87890 204.76545 652.66894 C
204.76545 616.48101 L
204.76545 613.27077 202.16353 610.66885 198.95443 610.66885 C
160.90243 610.66885 L
157.69247 610.66885 155.09140 613.27077 155.09140 616.48101 C
155.09140 652.66894 L
155.09140 655.87890 157.69247 658.48082 160.90243 658.48082 C
198.95443 658.48082 L
@c
231.77537 668.98091 m
231.77537 665.77096 229.17345 663.16904 225.96435 663.16904 C
187.62945 663.16904 L
184.41950 663.16904 181.81757 665.77096 181.81757 668.98091 C
181.81757 705.16885 L
181.81757 708.37880 184.41950 710.98101 187.62945 710.98101 C
225.96435 710.98101 L
229.17345 710.98101 231.77537 708.37880 231.77537 705.16885 C
231.77537 668.98091 L
@c
252.42945 658.48082 m
255.63940 658.48082 258.24047 655.87890 258.24047 652.66894 C
258.24047 616.48101 L
258.24047 613.27077 255.63940 610.66885 252.42945 610.66885 C
214.37745 610.66885 L
211.16835 610.66885 208.56643 613.27077 208.56643 616.48101 C
208.56643 652.66894 L
208.56643 655.87890 211.16835 658.48082 214.37745 658.48082 C
252.42945 658.48082 L
@c
285.52847 668.98091 m
285.52847 665.77096 282.92655 663.16904 279.71745 663.16904 C
241.38142 663.16904 L
238.17231 663.16904 235.57039 665.77096 235.57039 668.98091 C
235.57039 705.16885 L
235.57039 708.37880 238.17231 710.98101 241.38142 710.98101 C
279.71745 710.98101 L
282.92655 710.98101 285.52847 708.37880 285.52847 705.16885 C
285.52847 668.98091 L
@c
306.42435 658.48082 m
309.63345 658.48082 312.23537 655.87890 312.23537 652.66894 C
312.23537 616.48101 L
312.23537 613.27077 309.63345 610.66885 306.42435 610.66885 C
268.37348 610.66885 L
265.16353 610.66885 262.56132 613.27077 262.56132 616.48101 C
262.56132 652.66894 L
262.56132 655.87890 265.16353 658.48082 268.37348 658.48082 C
306.42435 658.48082 L
@c
339.11546 668.98091 m
339.11546 665.77096 336.51354 663.16904 333.30444 663.16904 C
294.96954 663.16904 L
291.75931 663.16904 289.15852 665.77096 289.15852 668.98091 C
289.15852 705.16885 L
289.15852 708.37880 291.75931 710.98101 294.96954 710.98101 C
333.30444 710.98101 L
336.51354 710.98101 339.11546 708.37880 339.11546 705.16885 C
339.11546 668.98091 L
@c
360.17745 658.48082 m
363.38655 658.48082 365.98847 655.87890 365.98847 652.66894 C
365.98847 616.48101 L
365.98847 613.27077 363.38655 610.66885 360.17745 610.66885 C
322.12545 610.66885 L
318.91635 610.66885 316.31443 613.27077 316.31443 616.48101 C
316.31443 652.66894 L
316.31443 655.87890 318.91635 658.48082 322.12545 658.48082 C
360.17745 658.48082 L
@c
392.92554 668.98091 m
392.92554 665.77096 390.32334 663.16904 387.11339 663.16904 C
348.77849 663.16904 L
345.56939 663.16904 342.96746 665.77096 342.96746 668.98091 C
342.96746 705.16885 L
342.96746 708.37880 345.56939 710.98101 348.77849 710.98101 C
387.11339 710.98101 L
390.32334 710.98101 392.92554 708.37880 392.92554 705.16885 C
392.92554 668.98091 L
@c
335.46132 558.40394 m
332.25137 558.40394 329.64945 561.00586 329.64945 564.21496 C
329.64945 600.40403 L
329.64945 603.61285 332.25137 606.21477 335.46132 606.21477 C
373.51247 606.21477 L
376.72243 606.21477 379.32435 603.61285 379.32435 600.40403 C
379.32435 564.21496 L
379.32435 561.00586 376.72243 558.40394 373.51247 558.40394 C
335.46132 558.40394 L
@c
303.46951 548.38687 m
303.46951 551.59597 306.07143 554.19902 309.28054 554.19902 C
346.76532 554.19902 L
349.97443 554.19902 352.57635 551.59597 352.57635 548.38687 C
352.57635 511.91490 L
352.57635 508.70494 349.97443 506.10302 346.76532 506.10302 C
309.28054 506.10302 L
306.07143 506.10302 303.46951 508.70494 303.46951 511.91490 C
303.46951 548.38687 L
@c
281.74932 558.40394 m
278.54050 558.40394 275.93830 561.00586 275.93830 564.21496 C
275.93830 600.40403 L
275.93830 603.61285 278.54050 606.21477 281.74932 606.21477 C
319.80132 606.21477 L
323.01043 606.21477 325.61235 603.61285 325.61235 600.40403 C
325.61235 564.21496 L
325.61235 561.00586 323.01043 558.40394 319.80132 558.40394 C
281.74932 558.40394 L
@c
249.14353 548.38687 m
249.14353 551.59597 251.74545 554.19902 254.95455 554.19902 C
293.00655 554.19902 L
296.21537 554.19902 298.81757 551.59597 298.81757 548.38687 C
298.81757 511.91490 L
298.81757 508.70494 296.21537 506.10302 293.00655 506.10302 C
254.95455 506.10302 L
251.74545 506.10302 249.14353 508.70494 249.14353 511.91490 C
249.14353 548.38687 L
@c
227.99055 558.40394 m
224.78145 558.40394 222.17953 561.00586 222.17953 564.21496 C
222.17953 600.40403 L
222.17953 603.61285 224.78145 606.21477 227.99055 606.21477 C
266.04255 606.21477 L
269.25250 606.21477 271.85357 603.61285 271.85357 600.40403 C
271.85357 564.21496 L
271.85357 561.00586 269.25250 558.40394 266.04255 558.40394 C
227.99055 558.40394 L
@c
195.66850 548.38687 m
195.66850 551.59597 198.27043 554.19902 201.47953 554.19902 C
239.53039 554.19902 L
242.74035 554.19902 245.34255 551.59597 245.34255 548.38687 C
245.34255 511.91490 L
245.34255 508.70494 242.74035 506.10302 239.53039 506.10302 C
201.47953 506.10302 L
198.27043 506.10302 195.66850 508.70494 195.66850 511.91490 C
195.66850 548.38687 L
@c
191.34737 548.38687 m
191.34737 511.91490 L
191.34737 508.70494 188.74545 506.10302 185.53635 506.10302 C
147.48435 506.10302 L
144.27439 506.10302 141.67247 508.70494 141.67247 511.91490 C
141.67247 548.38687 L
141.67247 551.59597 144.27439 554.19902 147.48435 554.19902 C
185.53635 554.19902 L
188.74545 554.19902 191.34737 551.59597 191.34737 548.38687 C
@c
174.23150 558.40394 m
171.02239 558.40394 168.42047 561.00586 168.42047 564.21496 C
168.42047 600.40403 L
168.42047 603.61285 171.02239 606.21477 174.23150 606.21477 C
212.28350 606.21477 L
215.49231 606.21477 218.09452 603.61285 218.09452 600.40403 C
218.09452 564.21496 L
218.09452 561.00586 215.49231 558.40394 212.28350 558.40394 C
174.23150 558.40394 L
@c
413.76444 658.48082 m
416.97439 658.48082 419.57546 655.87890 419.57546 652.66894 C
419.57546 616.48101 L
419.57546 613.27077 416.97439 610.66885 413.76444 610.66885 C
375.71244 610.66885 L
372.50334 610.66885 369.90142 613.27077 369.90142 616.48101 C
369.90142 652.66894 L
369.90142 655.87890 372.50334 658.48082 375.71244 658.48082 C
413.76444 658.48082 L
@c
446.79657 668.98091 m
446.79657 665.77096 444.19436 663.16904 440.98554 663.16904 C
402.65036 663.16904 L
399.44041 663.16904 396.83849 665.77096 396.83849 668.98091 C
396.83849 705.16885 L
396.83849 708.37880 399.44041 710.98101 402.65036 710.98101 C
440.98554 710.98101 L
444.19436 710.98101 446.79657 708.37880 446.79657 705.16885 C
446.79657 668.98091 L
@c
467.57452 658.48082 m
470.78334 658.48082 473.38554 655.87890 473.38554 652.66894 C
473.38554 616.48101 L
473.38554 613.27077 470.78334 610.66885 467.57452 610.66885 C
429.52252 610.66885 L
426.31342 610.66885 423.71150 613.27077 423.71150 616.48101 C
423.71150 652.66894 L
423.71150 655.87890 426.31342 658.48082 429.52252 658.48082 C
467.57452 658.48082 L
@c
500.39150 668.98091 m
500.39150 665.77096 497.78957 663.16904 494.58047 663.16904 C
456.24557 663.16904 L
453.03534 663.16904 450.43342 665.77096 450.43342 668.98091 C
450.43342 705.16885 L
450.43342 708.37880 453.03534 710.98101 456.24557 710.98101 C
494.58047 710.98101 L
497.78957 710.98101 500.39150 708.37880 500.39150 705.16885 C
500.39150 668.98091 L
@c
460.04145 548.38687 m
460.04145 511.91490 L
460.04145 508.70494 457.43953 506.10302 454.22957 506.10302 C
417.02854 506.10302 L
413.81830 506.10302 411.21638 508.70494 411.21638 511.91490 C
411.21638 548.38687 L
411.21638 551.59597 413.81830 554.19902 417.02854 554.19902 C
454.22957 554.19902 L
457.43953 554.19902 460.04145 551.59597 460.04145 548.38687 C
@c
442.80142 558.40394 m
439.59146 558.40394 436.98954 561.00586 436.98954 564.21496 C
436.98954 600.40403 L
436.98954 603.61285 439.59146 606.21477 442.80142 606.21477 C
480.85257 606.21477 L
484.06252 606.21477 486.66444 603.61285 486.66444 600.40403 C
486.66444 564.21496 L
486.66444 561.00586 484.06252 558.40394 480.85257 558.40394 C
442.80142 558.40394 L
@c
521.16236 658.48082 m
524.37146 658.48082 526.97339 655.87890 526.97339 652.66894 C
526.97339 616.48101 L
526.97339 613.27077 524.37146 610.66885 521.16236 610.66885 C
482.82746 610.66885 L
479.61751 610.66885 477.01531 613.27077 477.01531 616.48101 C
477.01531 652.66894 L
477.01531 655.87890 479.61751 658.48082 482.82746 658.48082 C
521.16236 658.48082 L
@c
554.22454 668.98091 m
554.22454 665.77096 551.62346 663.16904 548.41351 663.16904 C
510.07833 663.16904 L
506.86838 663.16904 504.26646 665.77096 504.26646 668.98091 C
504.26646 705.16885 L
504.26646 708.37880 506.86838 710.98101 510.07833 710.98101 C
548.41351 710.98101 L
551.62346 710.98101 554.22454 708.37880 554.22454 705.16885 C
554.22454 668.98091 L
@c
557.95351 668.98091 m
557.95351 705.16885 L
557.95351 708.37880 560.55430 710.98101 563.76454 710.98101 C
601.81654 710.98101 L
605.02535 710.98101 607.62756 708.37880 607.62756 705.16885 C
607.62756 668.98091 L
607.62756 665.77096 605.02535 663.16904 601.81654 663.16904 C
563.76454 663.16904 L
560.55430 663.16904 557.95351 665.77096 557.95351 668.98091 C
@c
575.04047 658.48082 m
578.25043 658.48082 580.85150 655.87890 580.85150 652.66894 C
580.85150 616.48101 L
580.85150 613.27077 578.25043 610.66885 575.04047 610.66885 C
536.70557 610.66885 L
533.49534 610.66885 530.89342 613.27077 530.89342 616.48101 C
530.89342 652.66894 L
530.89342 655.87890 533.49534 658.48082 536.70557 658.48082 C
575.04047 658.48082 L
@c
-27.59556 663.16904 m
-30.80466 663.16904 -33.40658 665.77096 -33.40658 668.98091 C
-33.40658 705.16885 L
-33.40658 708.37880 -30.80466 710.98101 -27.59556 710.98101 C
10.74047 710.98101 L
13.94957 710.98101 16.55150 708.37880 16.55150 705.16885 C
16.55150 668.98091 L
16.55150 665.77096 13.94957 663.16904 10.74047 663.16904 C
-27.59556 663.16904 L
@c
-6.29546 652.66894 m
-6.29546 655.87890 -3.69354 658.48082 -0.48444 658.48082 C
37.56643 658.48082 L
40.77638 658.48082 43.37830 655.87890 43.37830 652.66894 C
43.37830 616.48101 L
43.37830 613.27077 40.77638 610.66885 37.56643 610.66885 C
-0.48444 610.66885 L
-3.69354 610.66885 -6.29546 613.27077 -6.29546 616.48101 C
-6.29546 652.66894 L
@c
682.27654 554.19902 m
685.48535 554.19902 688.08643 551.59597 688.08643 548.38687 C
688.08643 511.91490 L
688.08643 508.70494 685.48535 506.10302 682.27654 506.10302 C
577.57550 506.10302 L
574.36554 506.10302 571.76334 508.70494 571.76334 511.91490 C
571.76334 548.38687 L
571.76334 551.59597 574.36554 554.19902 577.57550 554.19902 C
682.27654 554.19902 L
@c
594.06151 564.21496 m
594.06151 561.00586 591.46044 558.40394 588.25049 558.40394 C
550.48252 558.40394 L
547.27257 558.40394 544.67036 561.00586 544.67036 564.21496 C
544.67036 600.40403 L
544.67036 603.61285 547.27257 606.21477 550.48252 606.21477 C
588.25049 606.21477 L
591.46044 606.21477 594.06151 603.61285 594.06151 600.40403 C
594.06151 564.21496 L
@c
-94.54762 455.75376 m
-94.54762 454.27096 -95.74866 453.06879 -97.23146 453.06879 C
-185.26961 453.06879 L
-186.75269 453.06879 -187.95458 454.27096 -187.95458 455.75376 C
-187.95458 744.77395 L
-187.95458 746.25704 -186.75269 747.45780 -185.26961 747.45780 C
-97.23146 747.45780 L
-95.74866 747.45780 -94.54762 746.25704 -94.54762 744.77395 C
-94.54762 455.75376 L
@c
794.33433 795.34290 m
794.33433 813.71792 778.27748 823.89685 765.05953 824.43798 C
693.20835 824.43798 L
693.20835 814.46400 L
-90.90255 814.46400 L
-90.90255 824.43798 L
-162.86854 824.43798 L
-180.66444 823.86595 -192.74655 811.12592 -192.74655 794.63282 C
-192.75165 176.60494 L
-192.65244 161.03679 -185.69764 144.78180 -157.85150 144.78180 C
-155.08261 144.78180 L
-153.57458 144.78180 L
-138.48066 144.78293 -110.13647 144.78378 -75.41065 144.78491 C
41.37846 144.79285 230.36031 145.65798 230.36031 145.65798 C
231.62740 150.32183 236.52255 153.03600 244.71751 153.03600 C
356.67439 153.03600 L
364.87446 153.03600 369.77953 150.60983 371.04350 145.94088 C
371.04350 145.94088 562.31745 145.07603 679.12243 145.06894 C
697.91556 145.06781 714.78057 144.69704 728.61052 144.61795 C
739.78044 144.55587 748.97150 144.78293 755.59946 144.78180 C
757.10835 144.78180 L
759.87638 144.78180 L
787.92548 144.78180 794.78135 161.26299 794.78135 176.94680 C
794.89446 761.85780 L
794.33433 795.34290 L
@c
F

@rax %Note: Object
-85.87786 454.95694 -38.67279 499.96290 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-43.06791 499.96290 m
-81.48274 499.96290 L
-83.90580 499.96290 -85.87786 497.99112 -85.87786 495.56806 C
-85.87786 459.35206 L
-85.87786 456.92787 -83.90580 454.95694 -81.48274 454.95694 C
-43.06791 454.95694 L
-40.64485 454.95694 -38.67279 456.92787 -38.67279 459.35206 C
-38.67279 495.56806 L
-38.67279 497.99112 -40.64485 499.96290 -43.06791 499.96290 C
@c
F

@rax %Note: Object
-85.87786 507.43616 28.54715 552.86532 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-81.48302 507.43616 m
24.15317 507.43616 L
26.57594 507.43616 28.54715 509.40822 28.54715 511.83128 C
28.54715 548.47020 L
28.54715 550.89411 26.57594 552.86532 24.15317 552.86532 C
-81.48302 552.86532 L
-83.90608 552.86532 -85.87786 550.89411 -85.87786 548.47020 C
-85.87786 511.83128 L
-85.87786 509.40822 -83.90608 507.43616 -81.48302 507.43616 C
@c
F

@rax %Note: Object
-31.68624 454.95694 15.25493 499.96290 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
10.86094 499.96290 m
-27.29112 499.96290 L
-29.71417 499.96290 -31.68624 497.99112 -31.68624 495.56806 C
-31.68624 459.35206 L
-31.68624 456.92787 -29.71417 454.95694 -27.29112 454.95694 C
10.86094 454.95694 L
13.28372 454.95694 15.25493 456.92787 15.25493 459.35206 C
15.25493 495.56806 L
15.25493 497.99112 13.28372 499.96290 10.86094 499.96290 C
@c
F

@rax %Note: Object
21.89254 454.95694 69.01654 499.96290 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
64.62142 499.96290 m
26.28652 499.96290 L
23.86346 499.96290 21.89254 497.99197 21.89254 495.56891 C
21.89254 459.35206 L
21.89254 456.92787 23.86346 454.95694 26.28652 454.95694 C
64.62142 454.95694 L
67.04447 454.95694 69.01654 456.92787 69.01654 459.35206 C
69.01654 495.56891 L
69.01654 497.99197 67.04447 499.96290 64.62142 499.96290 C
@c
F

@rax %Note: Object
35.32535 507.47187 82.16532 552.82989 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
39.71934 507.47187 m
77.77134 507.47187 L
80.19411 507.47187 82.16532 509.44394 82.16532 511.86586 C
82.16532 548.43591 L
82.16532 550.85783 80.19411 552.82989 77.77134 552.82989 C
39.71934 552.82989 L
37.29628 552.82989 35.32535 550.85783 35.32535 548.43591 C
35.32535 511.86586 L
35.32535 509.44394 37.29628 507.47187 39.71934 507.47187 C
@c
F

@rax %Note: Object
89.17285 507.52063 136.01282 552.78170 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
93.56797 507.52063 m
131.61997 507.52063 L
134.04274 507.52063 136.01282 509.49269 136.01282 511.91575 C
136.01282 548.38658 L
136.01282 550.80964 134.04274 552.78170 131.61997 552.78170 C
93.56797 552.78170 L
91.14491 552.78170 89.17285 550.80964 89.17285 548.38658 C
89.17285 511.91575 L
89.17285 509.49269 91.14491 507.52063 93.56797 507.52063 C
@c
F

@rax %Note: Object
143.08980 507.52035 189.92976 552.78142 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
147.48378 552.78142 m
145.06072 552.78142 143.08980 550.80935 143.08980 548.38630 C
143.08980 511.91546 L
143.08980 509.49241 145.06072 507.52035 147.48378 507.52035 C
185.53578 507.52035 L
187.95883 507.52035 189.92976 509.49241 189.92976 511.91546 C
189.92976 548.38630 L
189.92976 550.80935 187.95883 552.78142 185.53578 552.78142 C
147.48378 552.78142 L
@c
F

@rax %Note: Object
197.08384 507.52063 243.92494 552.78170 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
201.47896 507.52063 m
239.53096 507.52063 L
241.95402 507.52063 243.92494 509.49269 243.92494 511.91575 C
243.92494 548.38658 L
243.92494 550.80964 241.95402 552.78170 239.53096 552.78170 C
201.47896 552.78170 L
199.05591 552.78170 197.08384 550.80964 197.08384 548.38658 C
197.08384 511.91575 L
197.08384 509.49269 199.05591 507.52063 201.47896 507.52063 C
@c
F

@rax %Note: Object
250.55943 507.52063 297.40054 552.78170 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
254.95455 507.52063 m
293.00655 507.52063 L
295.42961 507.52063 297.40054 509.49269 297.40054 511.91575 C
297.40054 548.38658 L
297.40054 550.80964 295.42961 552.78170 293.00655 552.78170 C
254.95455 552.78170 L
252.53150 552.78170 250.55943 550.80964 250.55943 548.38658 C
250.55943 511.91575 L
250.55943 509.49269 252.53150 507.52063 254.95455 507.52063 C
@c
F

@rax %Note: Object
304.88570 507.52063 351.15987 552.78170 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
309.28082 507.52063 m
346.76476 507.52063 L
349.18781 507.52063 351.15987 509.49269 351.15987 511.91575 C
351.15987 548.38658 L
351.15987 550.80964 349.18781 552.78170 346.76476 552.78170 C
309.28082 552.78170 L
306.85776 552.78170 304.88570 550.80964 304.88570 548.38658 C
304.88570 511.91575 L
304.88570 509.49269 306.85776 507.52063 309.28082 507.52063 C
@c
F

@rax %Note: Object
358.59827 507.52035 405.15534 552.78142 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
400.76022 552.78142 m
362.99112 552.78142 L
360.56920 552.78142 358.59827 550.80935 358.59827 548.38630 C
358.59827 511.91546 L
358.59827 509.49241 360.56920 507.52035 362.99112 507.52035 C
400.76022 507.52035 L
403.18328 507.52035 405.15534 509.49241 405.15534 511.91546 C
405.15534 548.38630 L
405.15534 550.80935 403.18328 552.78142 400.76022 552.78142 C
@c
F

@rax %Note: Object
412.63370 507.52035 458.62384 552.78142 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
417.02797 552.78142 m
414.60576 552.78142 412.63370 550.80935 412.63370 548.38630 C
412.63370 511.91546 L
412.63370 509.49241 414.60576 507.52035 417.02797 507.52035 C
454.22986 507.52035 L
456.65291 507.52035 458.62384 509.49241 458.62384 511.91546 C
458.62384 548.38630 L
458.62384 550.80935 456.65291 552.78142 454.22986 552.78142 C
417.02797 552.78142 L
@c
F

@rax %Note: Object
465.65405 507.52006 512.21083 552.78113 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
512.21083 511.91518 m
512.21083 548.38630 L
512.21083 550.81020 510.23991 552.78113 507.81685 552.78113 C
470.04888 552.78113 L
467.62583 552.78113 465.65405 550.81020 465.65405 548.38630 C
465.65405 511.91518 L
465.65405 509.49213 467.62583 507.52006 470.04888 507.52006 C
507.81685 507.52006 L
510.23991 507.52006 512.21083 509.49213 512.21083 511.91518 C
@c
F

@rax %Note: Object
519.74759 507.52063 566.02148 552.78170 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
524.14243 507.52063 m
561.62665 507.52063 L
564.04942 507.52063 566.02148 509.49269 566.02148 511.91575 C
566.02148 548.38658 L
566.02148 550.80964 564.04942 552.78170 561.62665 552.78170 C
524.14243 552.78170 L
521.71965 552.78170 519.74759 550.80964 519.74759 548.38658 C
519.74759 511.91575 L
519.74759 509.49269 521.71965 507.52063 524.14243 507.52063 C
@c
F

@rax %Note: Object
-85.69616 559.77165 1.43263 604.84649 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-81.30132 559.77165 m
-2.96135 559.77165 L
-0.53830 559.77165 1.43263 561.74372 1.43263 564.16564 C
1.43263 600.45250 L
1.43263 602.87471 -0.53830 604.84649 -2.96135 604.84649 C
-81.30132 604.84649 L
-83.72438 604.84649 -85.69616 602.87471 -85.69616 600.45250 C
-85.69616 564.16564 L
-85.69616 561.74372 -83.72438 559.77165 -81.30132 559.77165 C
@c
F

@rax %Note: Object
-85.69616 612.03685 -11.99339 657.11169 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-81.30132 612.03685 m
-16.38822 612.03685 L
-13.96517 612.03685 -11.99339 614.00891 -11.99339 616.43169 C
-11.99339 652.71770 L
-11.99339 655.14076 -13.96517 657.11169 -16.38822 657.11169 C
-81.30132 657.11169 L
-83.72438 657.11169 -85.69616 655.14076 -85.69616 652.71770 C
-85.69616 616.43169 L
-85.69616 614.00891 -83.72438 612.03685 -81.30132 612.03685 C
@c
F

@rax %Note: Object
62.20942 559.82013 109.04939 604.79802 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
109.04939 564.21496 m
109.04939 600.40290 L
109.04939 602.82595 107.07732 604.79802 104.65427 604.79802 C
66.60425 604.79802 L
64.18120 604.79802 62.20942 602.82595 62.20942 600.40290 C
62.20942 564.21496 L
62.20942 561.79191 64.18120 559.82013 66.60425 559.82013 C
104.65427 559.82013 L
107.07732 559.82013 109.04939 561.79191 109.04939 564.21496 C
@c
F

@rax %Note: Object
8.54192 559.82013 55.38302 604.79802 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
12.93704 559.82013 m
50.98904 559.82013 L
53.41209 559.82013 55.38302 561.79191 55.38302 564.21496 C
55.38302 600.40290 L
55.38302 602.82595 53.41209 604.79802 50.98904 604.79802 C
12.93704 604.79802 L
10.51398 604.79802 8.54192 602.82595 8.54192 600.40290 C
8.54192 564.21496 L
8.54192 561.79191 10.51398 559.82013 12.93704 559.82013 C
@c
F

@rax %Note: Object
116.12523 559.82013 162.96633 604.79802 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
162.96633 564.21496 m
162.96633 600.40290 L
162.96633 602.82595 160.99427 604.79802 158.57121 604.79802 C
120.52035 604.79802 L
118.09729 604.79802 116.12523 602.82595 116.12523 600.40290 C
116.12523 564.21496 L
116.12523 561.79191 118.09729 559.82013 120.52035 559.82013 C
158.57121 559.82013 L
160.99427 559.82013 162.96633 561.79191 162.96633 564.21496 C
@c
F

@rax %Note: Object
169.83723 559.82013 216.67720 604.79802 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
216.67720 564.21496 m
216.67720 600.40290 L
216.67720 602.82595 214.70513 604.79802 212.28236 604.79802 C
174.23235 604.79802 L
171.80929 604.79802 169.83723 602.82595 169.83723 600.40290 C
169.83723 564.21496 L
169.83723 561.79191 171.80929 559.82013 174.23235 559.82013 C
212.28236 559.82013 L
214.70513 559.82013 216.67720 561.79191 216.67720 564.21496 C
@c
F

@rax %Note: Object
223.59600 559.82013 270.43597 604.79802 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
270.43597 564.21496 m
270.43597 600.40290 L
270.43597 602.82595 268.46504 604.79802 266.04198 604.79802 C
227.99112 604.79802 L
225.56806 604.79802 223.59600 602.82595 223.59600 600.40290 C
223.59600 564.21496 L
223.59600 561.79191 225.56806 559.82013 227.99112 559.82013 C
266.04198 559.82013 L
268.46504 559.82013 270.43597 561.79191 270.43597 564.21496 C
@c
F

@rax %Note: Object
277.35477 559.82013 324.19587 604.79802 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
324.19587 564.21496 m
324.19587 600.40290 L
324.19587 602.82595 322.22381 604.79802 319.80076 604.79802 C
281.74961 604.79802 L
279.32683 604.79802 277.35477 602.82595 277.35477 600.40290 C
277.35477 564.21496 L
277.35477 561.79191 279.32683 559.82013 281.74961 559.82013 C
319.80076 559.82013 L
322.22381 559.82013 324.19587 561.79191 324.19587 564.21496 C
@c
F

@rax %Note: Object
331.06677 559.82013 377.90674 604.79802 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
377.90674 564.21496 m
377.90674 600.40290 L
377.90674 602.82595 375.93468 604.79802 373.51162 604.79802 C
335.46161 604.79802 L
333.03883 604.79802 331.06677 602.82595 331.06677 600.40290 C
331.06677 564.21496 L
331.06677 561.79191 333.03883 559.82013 335.46161 559.82013 C
373.51162 559.82013 L
375.93468 559.82013 377.90674 561.79191 377.90674 564.21496 C
@c
F

@rax %Note: Object
384.81931 559.82013 431.37638 604.79802 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
431.37638 564.21496 m
431.37638 600.40290 L
431.37638 602.82595 429.40431 604.79802 426.98154 604.79802 C
389.21357 604.79802 L
386.79052 604.79802 384.81931 602.82595 384.81931 600.40290 C
384.81931 564.21496 L
384.81931 561.79191 386.79052 559.82013 389.21357 559.82013 C
426.98154 559.82013 L
429.40431 559.82013 431.37638 561.79191 431.37638 564.21496 C
@c
F

@rax %Note: Object
438.40715 559.82013 485.24712 604.79802 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
485.24712 564.21496 m
485.24712 600.40290 L
485.24712 602.82595 483.27591 604.79802 480.85313 604.79802 C
442.80113 604.79802 L
440.37808 604.79802 438.40715 602.82595 438.40715 600.40290 C
438.40715 564.21496 L
438.40715 561.79191 440.37808 559.82013 442.80113 559.82013 C
480.85313 559.82013 L
483.27591 559.82013 485.24712 561.79191 485.24712 564.21496 C
@c
F

@rax %Note: Object
492.21638 559.82013 538.77345 604.79802 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
538.77345 564.21496 m
538.77345 600.40290 L
538.77345 602.82595 536.80139 604.79802 534.37833 604.79802 C
496.61150 604.79802 L
494.18844 604.79802 492.21638 602.82595 492.21638 600.40290 C
492.21638 564.21496 L
492.21638 561.79191 494.18844 559.82013 496.61150 559.82013 C
534.37833 559.82013 L
536.80139 559.82013 538.77345 561.79191 538.77345 564.21496 C
@c
F

@rax %Note: Object
546.08797 559.82013 592.64504 604.79802 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
588.24992 604.79802 m
550.48195 604.79802 L
548.06003 604.79802 546.08797 602.82595 546.08797 600.40290 C
546.08797 564.21496 L
546.08797 561.79191 548.06003 559.82013 550.48195 559.82013 C
588.24992 559.82013 L
590.67298 559.82013 592.64504 561.79191 592.64504 564.21496 C
592.64504 600.40290 L
592.64504 602.82595 590.67298 604.79802 588.24992 604.79802 C
@c
F

@rax %Note: Object
-4.87984 612.08617 41.96126 657.06406 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-0.48501 612.08617 m
37.56699 612.08617 L
39.99005 612.08617 41.96126 614.05710 41.96126 616.48101 C
41.96126 652.66923 L
41.96126 655.09115 39.99005 657.06406 37.56699 657.06406 C
-0.48501 657.06406 L
-2.90778 657.06406 -4.87984 655.09115 -4.87984 652.66923 C
-4.87984 616.48101 L
-4.87984 614.05710 -2.90778 612.08617 -0.48501 612.08617 C
@c
F

@rax %Note: Object
48.75420 612.08617 95.59446 657.06406 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
48.75420 652.66923 m
48.75420 616.48101 L
48.75420 614.05710 50.72542 612.08617 53.14847 612.08617 C
91.19934 612.08617 L
93.62239 612.08617 95.59446 614.05710 95.59446 616.48101 C
95.59446 652.66923 L
95.59446 655.09115 93.62239 657.06406 91.19934 657.06406 C
53.14847 657.06406 L
50.72542 657.06406 48.75420 655.09115 48.75420 652.66923 C
@c
F

@rax %Note: Object
102.46535 612.08617 149.30646 657.06406 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
102.46535 652.66923 m
102.46535 616.48101 L
102.46535 614.05710 104.43742 612.08617 106.86047 612.08617 C
144.91134 612.08617 L
147.33439 612.08617 149.30646 614.05710 149.30646 616.48101 C
149.30646 652.66923 L
149.30646 655.09115 147.33439 657.06406 144.91134 657.06406 C
106.86047 657.06406 L
104.43742 657.06406 102.46535 655.09115 102.46535 652.66923 C
@c
F

@rax %Note: Object
156.50816 612.08617 203.34813 657.06406 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
156.50816 652.66923 m
156.50816 616.48101 L
156.50816 614.05710 158.48022 612.08617 160.90328 612.08617 C
198.95329 612.08617 L
201.37635 612.08617 203.34813 614.05710 203.34813 616.48101 C
203.34813 652.66923 L
203.34813 655.09115 201.37635 657.06406 198.95329 657.06406 C
160.90328 657.06406 L
158.48022 657.06406 156.50816 655.09115 156.50816 652.66923 C
@c
F

@rax %Note: Object
209.98375 612.08617 256.82372 657.06406 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
209.98375 652.66923 m
209.98375 616.48101 L
209.98375 614.05710 211.95496 612.08617 214.37773 612.08617 C
252.42888 612.08617 L
254.85194 612.08617 256.82372 614.05710 256.82372 616.48101 C
256.82372 652.66923 L
256.82372 655.09115 254.85194 657.06406 252.42888 657.06406 C
214.37773 657.06406 L
211.95496 657.06406 209.98375 655.09115 209.98375 652.66923 C
@c
F

@rax %Note: Object
263.97808 612.08617 310.81890 657.06406 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
263.97808 652.66923 m
263.97808 616.48101 L
263.97808 614.05710 265.95014 612.08617 268.37291 612.08617 C
306.42406 612.08617 L
308.84712 612.08617 310.81890 614.05710 310.81890 616.48101 C
310.81890 652.66923 L
310.81890 655.09115 308.84712 657.06406 306.42406 657.06406 C
268.37291 657.06406 L
265.95014 657.06406 263.97808 655.09115 263.97808 652.66923 C
@c
F

@rax %Note: Object
317.73090 612.08617 364.57200 657.06406 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
317.73090 652.66923 m
317.73090 616.48101 L
317.73090 614.05710 319.70296 612.08617 322.12602 612.08617 C
360.17688 612.08617 L
362.59994 612.08617 364.57200 614.05710 364.57200 616.48101 C
364.57200 652.66923 L
364.57200 655.09115 362.59994 657.06406 360.17688 657.06406 C
322.12602 657.06406 L
319.70296 657.06406 317.73090 655.09115 317.73090 652.66923 C
@c
F

@rax %Note: Object
371.31874 612.08617 418.15871 657.06406 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
371.31874 652.66923 m
371.31874 616.48101 L
371.31874 614.05710 373.28995 612.08617 375.71272 612.08617 C
413.76387 612.08617 L
416.18693 612.08617 418.15871 614.05710 418.15871 616.48101 C
418.15871 652.66923 L
418.15871 655.09115 416.18693 657.06406 413.76387 657.06406 C
375.71272 657.06406 L
373.28995 657.06406 371.31874 655.09115 371.31874 652.66923 C
@c
F

@rax %Note: Object
425.12854 612.08617 471.96850 657.06406 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
425.12854 652.66923 m
425.12854 616.48101 L
425.12854 614.05710 427.09946 612.08617 429.52252 612.08617 C
467.57452 612.08617 L
469.99757 612.08617 471.96850 614.05710 471.96850 616.48101 C
471.96850 652.66923 L
471.96850 655.09115 469.99757 657.06406 467.57452 657.06406 C
429.52252 657.06406 L
427.09946 657.06406 425.12854 655.09115 425.12854 652.66923 C
@c
F

@rax %Note: Object
478.43263 612.08617 525.55663 657.06406 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
478.43263 652.66923 m
478.43263 616.48101 L
478.43263 614.05710 480.40469 612.08617 482.82775 612.08617 C
521.16151 612.08617 L
523.58457 612.08617 525.55663 614.05710 525.55663 616.48101 C
525.55663 652.66923 L
525.55663 655.09115 523.58457 657.06406 521.16151 657.06406 C
482.82775 657.06406 L
480.40469 657.06406 478.43263 655.09115 478.43263 652.66923 C
@c
F

@rax %Note: Object
532.31046 612.08617 579.43446 657.06406 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
532.31046 652.66923 m
532.31046 616.48101 L
532.31046 614.05710 534.28252 612.08617 536.70557 612.08617 C
575.03962 612.08617 L
577.46239 612.08617 579.43446 614.05710 579.43446 616.48101 C
579.43446 652.66923 L
579.43446 655.09115 577.46239 657.06406 575.03962 657.06406 C
536.70557 657.06406 L
534.28252 657.06406 532.31046 655.09115 532.31046 652.66923 C
@c
F

@rax %Note: Object
586.14463 612.08561 633.26750 657.06350 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
633.26750 616.48072 m
633.26750 652.66866 L
633.26750 655.09172 631.29657 657.06350 628.87351 657.06350 C
590.53861 657.06350 L
588.11641 657.06350 586.14463 655.09172 586.14463 652.66866 C
586.14463 616.48072 L
586.14463 614.05767 588.11641 612.08561 590.53861 612.08561 C
628.87351 612.08561 L
631.29657 612.08561 633.26750 614.05767 633.26750 616.48072 C
@c
F

@rax %Note: Object
640.11487 612.08561 687.23773 657.06350 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
682.84375 657.06350 m
644.50772 657.06350 L
642.08466 657.06350 640.11487 655.09172 640.11487 652.66866 C
640.11487 616.48072 L
640.11487 614.05767 642.08466 612.08561 644.50772 612.08561 C
682.84375 612.08561 L
685.26680 612.08561 687.23773 614.05767 687.23773 616.48072 C
687.23773 652.66866 L
687.23773 655.09172 685.26680 657.06350 682.84375 657.06350 C
@c
F

@rax %Note: Object
-85.62302 664.58608 -38.49902 709.56397 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-81.22819 664.58608 m
-42.89301 664.58608 L
-40.46995 664.58608 -38.49902 666.55701 -38.49902 668.98120 C
-38.49902 705.16913 L
-38.49902 707.59106 -40.46995 709.56397 -42.89301 709.56397 C
-81.22819 709.56397 L
-83.65096 709.56397 -85.62302 707.59106 -85.62302 705.16913 C
-85.62302 668.98120 L
-85.62302 666.55701 -83.65096 664.58608 -81.22819 664.58608 C
@c
F

@rax %Note: Object
-85.33984 716.64860 686.67109 745.47468 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-80.94501 716.64860 m
682.27625 716.64860 L
684.69902 716.64860 686.67109 718.61953 686.67109 721.04372 C
686.67109 741.08069 L
686.67109 743.50261 684.69902 745.47468 682.27625 745.47468 C
-80.94501 745.47468 L
-83.28586 745.47468 -85.33984 743.28973 -85.33984 740.79666 C
-85.33984 721.04372 L
-85.33984 718.61953 -83.36778 716.64860 -80.94501 716.64860 C
@c
F

@rax %Note: Object
-31.98983 664.58551 15.13417 709.56369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
15.13417 668.98063 m
15.13417 705.16857 L
15.13417 707.59162 13.16211 709.56369 10.73934 709.56369 C
-27.59471 709.56369 L
-30.01776 709.56369 -31.98983 707.59162 -31.98983 705.16857 C
-31.98983 668.98063 L
-31.98983 666.55757 -30.01776 664.58551 -27.59471 664.58551 C
10.73934 664.58551 L
13.16211 664.58551 15.13417 666.55757 15.13417 668.98063 C
@c
F

@rax %Note: Object
21.72274 664.58551 68.84561 709.56369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
64.45162 709.56369 m
26.11672 709.56369 L
23.69367 709.56369 21.72274 707.59162 21.72274 705.16857 C
21.72274 668.98063 L
21.72274 666.55757 23.69367 664.58551 26.11672 664.58551 C
64.45162 664.58551 L
66.87468 664.58551 68.84561 666.55757 68.84561 668.98063 C
68.84561 705.16857 L
68.84561 707.59162 66.87468 709.56369 64.45162 709.56369 C
@c
F

@rax %Note: Object
75.48151 664.58551 122.60551 709.56369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
118.21039 709.56369 m
79.87550 709.56369 L
77.45244 709.56369 75.48151 707.59162 75.48151 705.16857 C
75.48151 668.98063 L
75.48151 666.55757 77.45244 664.58551 79.87550 664.58551 C
118.21039 664.58551 L
120.63345 664.58551 122.60551 666.55757 122.60551 668.98063 C
122.60551 705.16857 L
122.60551 707.59162 120.63345 709.56369 118.21039 709.56369 C
@c
F

@rax %Note: Object
129.24028 664.58551 176.36428 709.56369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
171.96917 709.56369 m
133.63427 709.56369 L
131.21121 709.56369 129.24028 707.59162 129.24028 705.16857 C
129.24028 668.98063 L
129.24028 666.55757 131.21121 664.58551 133.63427 664.58551 C
171.96917 664.58551 L
174.39222 664.58551 176.36428 666.55757 176.36428 668.98063 C
176.36428 705.16857 L
176.36428 707.59162 174.39222 709.56369 171.96917 709.56369 C
@c
F

@rax %Note: Object
183.23546 664.58551 230.35946 709.56369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
225.96435 709.56369 m
187.62945 709.56369 L
185.20639 709.56369 183.23546 707.59162 183.23546 705.16857 C
183.23546 668.98063 L
183.23546 666.55757 185.20639 664.58551 187.62945 664.58551 C
225.96435 664.58551 L
228.38740 664.58551 230.35946 666.55757 230.35946 668.98063 C
230.35946 705.16857 L
230.35946 707.59162 228.38740 709.56369 225.96435 709.56369 C
@c
F

@rax %Note: Object
236.98828 664.58551 284.11115 709.56369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
279.71717 709.56369 m
241.38227 709.56369 L
238.95921 709.56369 236.98828 707.59162 236.98828 705.16857 C
236.98828 668.98063 L
236.98828 666.55757 238.95921 664.58551 241.38227 664.58551 C
279.71717 664.58551 L
282.14022 664.58551 284.11115 666.55757 284.11115 668.98063 C
284.11115 705.16857 L
284.11115 707.59162 282.14022 709.56369 279.71717 709.56369 C
@c
F

@rax %Note: Object
290.57499 664.58551 337.69899 709.56369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
333.30416 709.56369 m
294.96926 709.56369 L
292.54620 709.56369 290.57499 707.59162 290.57499 705.16857 C
290.57499 668.98063 L
290.57499 666.55757 292.54620 664.58551 294.96926 664.58551 C
333.30416 664.58551 L
335.72721 664.58551 337.69899 666.55757 337.69899 668.98063 C
337.69899 705.16857 L
337.69899 707.59162 335.72721 709.56369 333.30416 709.56369 C
@c
F

@rax %Note: Object
344.38479 664.58551 391.50879 709.56369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
387.11367 709.56369 m
348.77877 709.56369 L
346.35572 709.56369 344.38479 707.59162 344.38479 705.16857 C
344.38479 668.98063 L
344.38479 666.55757 346.35572 664.58551 348.77877 664.58551 C
387.11367 664.58551 L
389.53672 664.58551 391.50879 666.55757 391.50879 668.98063 C
391.50879 705.16857 L
391.50879 707.59162 389.53672 709.56369 387.11367 709.56369 C
@c
F

@rax %Note: Object
398.25581 664.58551 445.37981 709.56369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
440.98469 709.56369 m
402.64980 709.56369 L
400.22674 709.56369 398.25581 707.59162 398.25581 705.16857 C
398.25581 668.98063 L
398.25581 666.55757 400.22674 664.58551 402.64980 664.58551 C
440.98469 664.58551 L
443.40775 664.58551 445.37981 666.55757 445.37981 668.98063 C
445.37981 705.16857 L
445.37981 707.59162 443.40775 709.56369 440.98469 709.56369 C
@c
F

@rax %Note: Object
451.85102 664.58551 498.97502 709.56369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
494.57991 709.56369 m
456.24501 709.56369 L
453.82195 709.56369 451.85102 707.59162 451.85102 705.16857 C
451.85102 668.98063 L
451.85102 666.55757 453.82195 664.58551 456.24501 664.58551 C
494.57991 664.58551 L
497.00296 664.58551 498.97502 666.55757 498.97502 668.98063 C
498.97502 705.16857 L
498.97502 707.59162 497.00296 709.56369 494.57991 709.56369 C
@c
F

@rax %Note: Object
505.68406 664.58551 552.80806 709.56369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
548.41294 709.56369 m
510.07805 709.56369 L
507.65499 709.56369 505.68406 707.59162 505.68406 705.16857 C
505.68406 668.98063 L
505.68406 666.55757 507.65499 664.58551 510.07805 664.58551 C
548.41294 664.58551 L
550.83600 664.58551 552.80806 666.55757 552.80806 668.98063 C
552.80806 705.16857 L
552.80806 707.59162 550.83600 709.56369 548.41294 709.56369 C
@c
F

@rax %Note: Object
559.36998 664.58551 606.21080 709.56369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
606.21080 668.98063 m
606.21080 705.16857 L
606.21080 707.59162 604.23902 709.56369 601.81597 709.56369 C
563.76482 709.56369 L
561.34205 709.56369 559.36998 707.59162 559.36998 705.16857 C
559.36998 668.98063 L
559.36998 666.55757 561.34205 664.58551 563.76482 664.58551 C
601.81597 664.58551 L
604.23902 664.58551 606.21080 666.55757 606.21080 668.98063 C
@c
F

@rax %Note: Object
613.58003 664.58551 686.95398 709.56369 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
686.95398 668.98063 m
686.95398 705.16857 L
686.95398 707.59162 684.98192 709.56369 682.55915 709.56369 C
617.97515 709.56369 L
615.55209 709.56369 613.58003 707.59162 613.58003 705.16857 C
613.58003 668.98063 L
613.58003 666.55757 615.55209 664.58551 617.97515 664.58551 C
682.55915 664.58551 L
684.98192 664.58551 686.95398 666.55757 686.95398 668.98063 C
@c
F

@rax %Note: Object
599.95757 559.82013 686.95455 604.79802 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
682.55943 604.79802 m
604.35241 604.79802 L
601.92964 604.79802 599.95757 602.82595 599.95757 600.40290 C
599.95757 564.21496 L
599.95757 561.79191 601.92964 559.82013 604.35241 559.82013 C
682.55943 559.82013 L
684.98249 559.82013 686.95455 561.79191 686.95455 564.21496 C
686.95455 600.40290 L
686.95455 602.82595 684.98249 604.79802 682.55943 604.79802 C
@c
F

@rax %Note: Object
573.18066 507.52035 686.67052 552.78142 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
573.18066 548.38630 m
573.18066 511.91546 L
573.18066 509.49241 575.15272 507.52035 577.57550 507.52035 C
682.27654 507.52035 L
684.69959 507.52035 686.67052 509.49241 686.67052 511.91546 C
686.67052 548.38630 L
686.67052 550.80935 684.69959 552.78142 682.27654 552.78142 C
577.57550 552.78142 L
575.15272 552.78142 573.18066 550.80935 573.18066 548.38630 C
@c
F

@rax %Note: Object
479.26261 454.96176 525.82082 499.95780 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
521.42570 499.95780 m
483.65660 499.95780 L
481.23468 499.95780 479.26261 497.98658 479.26261 495.56466 C
479.26261 459.35660 L
479.26261 456.93383 481.23468 454.96176 483.65660 454.96176 C
521.42570 454.96176 L
523.84876 454.96176 525.82082 456.93383 525.82082 459.35660 C
525.82082 495.56466 L
525.82082 497.98658 523.84876 499.95780 521.42570 499.95780 C
@c
F

@rax %Note: Object
532.92387 454.96176 579.48094 499.95780 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
575.08583 499.95780 m
537.31786 499.95780 L
534.89594 499.95780 532.92387 497.98658 532.92387 495.56466 C
532.92387 459.35660 L
532.92387 456.93383 534.89594 454.96176 537.31786 454.96176 C
575.08583 454.96176 L
577.50888 454.96176 579.48094 456.93383 579.48094 459.35660 C
579.48094 495.56466 L
579.48094 497.98658 577.50888 499.95780 575.08583 499.95780 C
@c
F

@rax %Note: Object
586.52164 454.96176 633.07843 499.95780 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
628.68444 499.95780 m
590.91562 499.95780 L
588.49342 499.95780 586.52164 497.98658 586.52164 495.56466 C
586.52164 459.35660 L
586.52164 456.93383 588.49342 454.96176 590.91562 454.96176 C
628.68444 454.96176 L
631.10750 454.96176 633.07843 456.93383 633.07843 459.35660 C
633.07843 495.56466 L
633.07843 497.98658 631.10750 499.95780 628.68444 499.95780 C
@c
F

@rax %Note: Object
640.39748 454.96176 686.95455 499.95780 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
682.55943 499.95780 m
644.79146 499.95780 L
642.36954 499.95780 640.39748 497.98658 640.39748 495.56466 C
640.39748 459.35660 L
640.39748 456.93383 642.36954 454.96176 644.79146 454.96176 C
682.55943 454.96176 L
684.98249 454.96176 686.95455 456.93383 686.95455 459.35660 C
686.95455 495.56466 L
686.95455 497.98658 684.98249 499.95780 682.55943 499.95780 C
@c
F

@rax %Note: Object
75.93647 455.00315 136.01367 499.91698 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
80.33159 455.00315 m
131.61940 455.00315 L
134.04246 455.00315 136.01367 456.97408 136.01367 459.39798 C
136.01367 495.52299 L
136.01367 497.94520 134.04246 499.91698 131.61940 499.91698 C
80.33159 499.91698 L
77.90854 499.91698 75.93647 497.94520 75.93647 495.52299 C
75.93647 459.39798 L
75.93647 456.97408 77.90854 455.00315 80.33159 455.00315 C
@c
F

@rax %Note: Object
412.06649 455.03433 471.85257 499.88636 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
416.46132 455.03433 m
467.45943 455.03433 L
469.88135 455.03433 471.85257 457.00639 471.85257 459.42831 C
471.85257 495.49124 L
471.85257 497.91430 469.88135 499.88636 467.45943 499.88636 C
416.46132 499.88636 L
414.03855 499.88636 412.06649 497.91430 412.06649 495.49124 C
412.06649 459.42831 L
412.06649 457.00639 414.03855 455.03433 416.46132 455.03433 C
@c
F

@rax %Note: Object
142.80576 455.23304 404.58784 499.68624 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
146.69178 455.23304 m
400.70183 455.23304 L
402.84397 455.23304 404.58784 456.97720 404.58784 459.11906 C
404.58784 495.80107 L
404.58784 497.94321 402.84397 499.68624 400.70183 499.68624 C
146.69178 499.68624 L
144.54879 499.68624 142.80576 497.94321 142.80576 495.80107 C
142.80576 459.11906 L
142.80576 456.97720 144.54879 455.23304 146.69178 455.23304 C
@c
F

@rax %Note: Object
75.32504 160.42592 526.25197 440.97392 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
516.49994 440.97392 m
84.61304 440.97392 L
79.40381 440.97392 75.32504 437.01194 75.32504 431.95068 C
75.32504 169.92369 L
75.32504 164.93386 79.48006 160.55688 84.21789 160.55688 C
513.89688 160.55490 L
513.91389 160.55376 515.58803 160.42592 516.92400 160.42592 C
517.62898 160.42592 517.98586 160.46192 518.16302 160.49169 C
522.77386 161.27773 526.25197 165.33184 526.25197 169.92369 C
526.25197 431.48693 L
526.25197 436.80671 521.96882 440.97392 516.49994 440.97392 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
