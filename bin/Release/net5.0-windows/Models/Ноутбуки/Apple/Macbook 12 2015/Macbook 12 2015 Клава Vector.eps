%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -121 437 663 731 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: Macbook 12 2015 Клава Vector.eps
%%CreationDate: Thu May 30 17:34:04 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
-120.80154 437.57830 662.73137 730.36148 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
658.87540 499.86227 m
658.87540 496.76825 656.36759 494.25931 653.27244 494.25931 C
547.09739 494.25931 L
544.00252 494.25931 541.49443 496.76825 541.49443 499.86227 C
541.49443 536.64831 L
541.49443 539.74233 544.00252 542.25128 547.09739 542.25128 C
653.27244 542.25128 L
656.36759 542.25128 658.87540 539.74233 658.87540 536.64831 C
658.87540 499.86227 L
@c
658.59250 448.09342 m
658.59250 444.99940 656.08356 442.49046 652.98954 442.49046 C
614.14753 442.49046 L
611.05351 442.49046 608.54457 444.99940 608.54457 448.09342 C
608.54457 484.69521 L
608.54457 487.78923 611.05351 490.29846 614.14753 490.29846 C
652.98954 490.29846 L
656.08356 490.29846 658.59250 487.78923 658.59250 484.69521 C
658.59250 448.09342 L
@c
605.12854 448.09342 m
605.12854 444.99940 602.62044 442.49046 599.52557 442.49046 C
560.68441 442.49046 L
557.59039 442.49046 555.08145 444.99940 555.08145 448.09342 C
555.08145 484.69521 L
555.08145 487.78923 557.59039 490.29846 560.68441 490.29846 C
599.52557 490.29846 L
602.62044 490.29846 605.12854 487.78923 605.12854 484.69521 C
605.12854 448.09342 L
@c
551.56139 448.09342 m
551.56139 444.99940 549.05244 442.49046 545.95843 442.49046 C
507.11754 442.49046 L
504.02239 442.49046 501.51458 444.99940 501.51458 448.09342 C
501.51458 484.69521 L
501.51458 487.78923 504.02239 490.29846 507.11754 490.29846 C
545.95843 490.29846 L
549.05244 490.29846 551.56139 487.78923 551.56139 484.69521 C
551.56139 448.09342 L
@c
497.79354 448.09342 m
497.79354 444.99940 495.28545 442.49046 492.19058 442.49046 C
453.63543 442.49046 L
450.54142 442.49046 448.03247 444.99940 448.03247 448.09342 C
448.03247 484.69521 L
448.03247 487.78923 450.54142 490.29846 453.63543 490.29846 C
492.19058 490.29846 L
495.28545 490.29846 497.79354 487.78923 497.79354 484.69521 C
497.79354 448.09342 L
@c
444.19039 448.09342 m
444.19039 444.99940 441.68258 442.49046 438.58743 442.49046 C
386.37553 442.49046 L
383.28038 442.49046 380.77257 444.99940 380.77257 448.09342 C
380.77257 484.69521 L
380.77257 487.78923 383.28038 490.29846 386.37553 490.29846 C
438.58743 490.29846 L
441.68258 490.29846 444.19039 487.78923 444.19039 484.69521 C
444.19039 448.09342 L
@c
380.63140 536.64831 m
380.63140 539.74233 383.14035 542.25128 386.23436 542.25128 C
425.07553 542.25128 L
428.17039 542.25128 430.67849 539.74233 430.67849 536.64831 C
430.67849 499.86227 L
430.67849 496.76825 428.17039 494.25931 425.07553 494.25931 C
386.23436 494.25931 L
383.14035 494.25931 380.63140 496.76825 380.63140 499.86227 C
380.63140 536.64831 L
@c
376.84035 448.09342 m
376.84035 444.99940 374.33140 442.49046 371.23739 442.49046 C
117.69250 442.49046 L
114.59849 442.49046 112.08954 444.99940 112.08954 448.09342 C
112.08954 484.69521 L
112.08954 487.78923 114.59849 490.29846 117.69250 490.29846 C
371.23739 490.29846 L
374.33140 490.29846 376.84035 487.78923 376.84035 484.69521 C
376.84035 448.09342 L
@c
108.47452 448.09342 m
108.47452 444.99940 105.96643 442.49046 102.87241 442.49046 C
50.76142 442.49046 L
47.66740 442.49046 45.15846 444.99940 45.15846 448.09342 C
45.15846 484.69521 L
45.15846 487.78923 47.66740 490.29846 50.76142 490.29846 C
102.87241 490.29846 L
105.96643 490.29846 108.47452 487.78923 108.47452 484.69521 C
108.47452 448.09342 L
@c
41.36542 448.09342 m
41.36542 444.99940 38.85647 442.49046 35.76246 442.49046 C
-3.07843 442.49046 L
-6.17244 442.49046 -8.68167 444.99940 -8.68167 448.09342 C
-8.68167 484.69521 L
-8.68167 487.78923 -6.17244 490.29846 -3.07843 490.29846 C
35.76246 490.29846 L
38.85647 490.29846 41.36542 487.78923 41.36542 484.69521 C
41.36542 448.09342 L
@c
-12.52346 448.09342 m
-12.52346 444.99940 -15.03241 442.49046 -18.12643 442.49046 C
-56.96759 442.49046 L
-60.06246 442.49046 -62.57055 444.99940 -62.57055 448.09342 C
-62.57055 484.69521 L
-62.57055 487.78923 -60.06246 490.29846 -56.96759 490.29846 C
-18.12643 490.29846 L
-15.03241 490.29846 -12.52346 487.78923 -12.52346 484.69521 C
-12.52346 448.09342 L
@c
-66.21250 448.09342 m
-66.21250 444.99940 -68.72060 442.49046 -71.81461 442.49046 C
-110.65663 442.49046 L
-113.75065 442.49046 -116.25959 444.99940 -116.25959 448.09342 C
-116.25959 484.69521 L
-116.25959 487.78923 -113.75065 490.29846 -110.65663 490.29846 C
-71.81461 490.29846 L
-68.72060 490.29846 -66.21250 487.78923 -66.21250 484.69521 C
-66.21250 448.09342 L
@c
-116.79165 641.39244 m
-116.79165 644.48646 -114.28356 646.99427 -111.18841 646.99427 C
-45.69364 646.99427 L
-42.59962 646.99427 -40.09039 644.48646 -40.09039 641.39244 C
-40.09039 604.79036 L
-40.09039 601.69521 -42.59962 599.18740 -45.69364 599.18740 C
-111.18841 599.18740 L
-114.28356 599.18740 -116.79165 601.69521 -116.79165 604.79036 C
-116.79165 641.39244 L
@c
-116.79165 693.60633 m
-116.79165 696.70035 -114.28356 699.20929 -111.18841 699.20929 C
-72.34753 699.20929 L
-69.25266 699.20929 -66.74457 696.70035 -66.74457 693.60633 C
-66.74457 657.00425 L
-66.74457 653.91024 -69.25266 651.40243 -72.34753 651.40243 C
-111.18841 651.40243 L
-114.28356 651.40243 -116.79165 653.91024 -116.79165 657.00425 C
-116.79165 693.60633 L
@c
-116.79165 720.30331 m
-116.79165 722.93528 -114.65745 725.07033 -112.02463 725.07033 C
-44.81546 725.07033 L
-42.18350 725.07033 -40.04957 722.93528 -40.04957 720.30331 C
-40.04957 708.88649 L
-40.04957 706.25424 -42.18350 704.11946 -44.81546 704.11946 C
-112.02463 704.11946 L
-114.65745 704.11946 -116.79165 706.25424 -116.79165 708.88649 C
-116.79165 720.30331 L
@c
-35.74658 720.30331 m
-35.74658 722.93528 -33.61266 725.07033 -30.97956 725.07033 C
9.18454 725.07033 L
11.81650 725.07033 13.95043 722.93528 13.95043 720.30331 C
13.95043 708.88649 L
13.95043 706.25424 11.81650 704.11946 9.18454 704.11946 C
-30.97956 704.11946 L
-33.61266 704.11946 -35.74658 706.25424 -35.74658 708.88649 C
-35.74658 720.30331 L
@c
17.85855 720.30331 m
17.85855 722.93528 19.99247 725.07033 22.62444 725.07033 C
62.78939 725.07033 L
65.42135 725.07033 67.55556 722.93528 67.55556 720.30331 C
67.55556 708.88649 L
67.55556 706.25424 65.42135 704.11946 62.78939 704.11946 C
22.62444 704.11946 L
19.99247 704.11946 17.85855 706.25424 17.85855 708.88649 C
17.85855 720.30331 L
@c
71.51357 720.30331 m
71.51357 722.93528 73.64750 725.07033 76.28060 725.07033 C
116.44441 725.07033 L
119.07751 725.07033 121.21058 722.93528 121.21058 720.30331 C
121.21058 708.88649 L
121.21058 706.25424 119.07751 704.11946 116.44441 704.11946 C
76.28060 704.11946 L
73.64750 704.11946 71.51357 706.25424 71.51357 708.88649 C
71.51357 720.30331 L
@c
125.56346 720.30331 m
125.56346 722.93528 127.69739 725.07033 130.32935 725.07033 C
170.49345 725.07033 L
173.12655 725.07033 175.26047 722.93528 175.26047 720.30331 C
175.26047 708.88649 L
175.26047 706.25424 173.12655 704.11946 170.49458 704.11946 C
130.32935 704.11946 L
127.69739 704.11946 125.56346 706.25424 125.56346 708.88649 C
125.56346 720.30331 L
@c
179.32961 720.30331 m
179.32961 722.93528 181.46239 725.07033 184.09550 725.07033 C
224.25959 725.07033 L
226.89241 725.07033 229.02633 722.93528 229.02633 720.30331 C
229.02633 708.88649 L
229.02633 706.25424 226.89241 704.11946 224.25959 704.11946 C
184.09550 704.11946 L
181.46239 704.11946 179.32961 706.25424 179.32961 708.88649 C
179.32961 720.30331 L
@c
232.57757 720.30331 m
232.57757 722.93528 234.71036 725.07033 237.34346 725.07033 C
277.50756 725.07033 L
280.14038 725.07033 282.27458 722.93528 282.27458 720.30331 C
282.27458 708.88649 L
282.27458 706.25424 280.14038 704.11946 277.50756 704.11946 C
237.34346 704.11946 L
234.71036 704.11946 232.57757 706.25424 232.57757 708.88649 C
232.57757 720.30331 L
@c
286.58438 720.30331 m
286.58438 722.93528 288.71858 725.07033 291.35140 725.07033 C
331.51550 725.07033 L
334.14746 725.07033 336.28252 722.93528 336.28252 720.30331 C
336.28252 708.88649 L
336.28252 706.25424 334.14746 704.11946 331.51550 704.11946 C
291.35140 704.11946 L
288.71858 704.11946 286.58438 706.25424 286.58438 708.88649 C
286.58438 720.30331 L
@c
340.35449 720.30331 m
340.35449 722.93528 342.48954 725.07033 345.12151 725.07033 C
385.28561 725.07033 L
387.91843 725.07033 390.05235 722.93528 390.05235 720.30331 C
390.05235 708.88649 L
390.05235 706.25424 387.91843 704.11946 385.28646 704.11946 C
345.12151 704.11946 L
342.48954 704.11946 340.35449 706.25424 340.35449 708.88649 C
340.35449 720.30331 L
@c
393.76658 720.30331 m
393.76658 722.93528 395.90050 725.07033 398.53247 725.07033 C
438.69742 725.07033 L
441.32939 725.07033 443.46359 722.93528 443.46359 720.30331 C
443.46359 708.88649 L
443.46359 706.25424 441.32939 704.11946 438.69742 704.11946 C
398.53247 704.11946 L
395.90050 704.11946 393.76658 706.25424 393.76658 708.88649 C
393.76658 720.30331 L
@c
447.76857 720.30331 m
447.76857 722.93528 449.90135 725.07033 452.53446 725.07033 C
492.69855 725.07033 L
495.33137 725.07033 497.46557 722.93528 497.46557 720.30331 C
497.46557 708.88649 L
497.46557 706.25424 495.33137 704.11946 492.69855 704.11946 C
452.53446 704.11946 L
449.90135 704.11946 447.76857 706.25424 447.76857 708.88649 C
447.76857 720.30331 L
@c
501.32948 720.30331 m
501.32948 722.93528 503.46340 725.07033 506.09650 725.07033 C
546.26060 725.07033 L
548.89342 725.07033 551.02649 722.93528 551.02649 720.30331 C
551.02649 708.88649 L
551.02649 706.25424 548.89342 704.11946 546.26060 704.11946 C
506.09650 704.11946 L
503.46340 704.11946 501.32948 706.25424 501.32948 708.88649 C
501.32948 720.30331 L
@c
555.11660 720.30331 m
555.11660 722.93528 557.25052 725.07033 559.88249 725.07033 C
600.04743 725.07033 L
602.67940 725.07033 604.81361 722.93528 604.81361 720.30331 C
604.81361 708.88649 L
604.81361 706.25424 602.67940 704.11946 600.04743 704.11946 C
559.88249 704.11946 L
557.25052 704.11946 555.11660 706.25424 555.11660 708.88649 C
555.11660 720.30331 L
@c
608.56243 720.30331 m
608.56243 722.93528 610.69635 725.07033 613.32945 725.07033 C
653.49354 725.07033 L
656.12551 725.07033 658.26057 722.93528 658.26057 720.30331 C
658.26057 708.88649 L
658.26057 706.25424 656.12551 704.11946 653.49354 704.11946 C
613.32945 704.11946 L
610.69635 704.11946 608.56243 706.25424 608.56243 708.88649 C
608.56243 720.30331 L
@c
652.98954 651.40243 m
587.06334 651.40243 L
583.96961 651.40243 581.46038 653.91024 581.46038 657.00539 C
581.46038 693.60633 L
581.46038 696.70035 583.96961 699.20929 587.06334 699.20929 C
652.98954 699.20929 L
656.08356 699.20929 658.59250 696.70035 658.59250 693.60633 C
658.59250 657.00425 L
658.59250 653.91024 656.08356 651.40243 652.98954 651.40243 C
@c
568.42157 588.80041 m
568.42157 591.89443 570.93052 594.40337 574.02454 594.40337 C
612.86542 594.40337 L
615.95943 594.40337 618.46838 591.89443 618.46838 588.80041 C
618.46838 552.19833 L
618.46838 549.10431 615.95943 546.59537 612.86542 546.59537 C
574.02454 546.59537 L
570.93052 546.59537 568.42157 549.10431 568.42157 552.19833 C
568.42157 588.80041 L
@c
560.69858 599.18740 m
557.60457 599.18740 555.09534 601.69521 555.09534 604.79036 C
555.09534 641.39244 L
555.09534 644.48646 557.60457 646.99427 560.69858 646.99427 C
599.53946 646.99427 L
602.63433 646.99427 605.14243 644.48646 605.14243 641.39244 C
605.14243 604.79036 L
605.14243 601.69521 602.63433 599.18740 599.53946 599.18740 C
560.69858 599.18740 L
@c
520.46957 546.59537 m
517.37556 546.59537 514.86633 549.10431 514.86633 552.19833 C
514.86633 588.80041 L
514.86633 591.89443 517.37556 594.40337 520.46957 594.40337 C
559.31159 594.40337 L
562.40561 594.40337 564.91342 591.89443 564.91342 588.80041 C
564.91342 552.19833 L
564.91342 549.10431 562.40561 546.59537 559.31159 546.59537 C
520.46957 546.59537 L
@c
488.34454 536.64831 m
488.34454 539.74233 490.85348 542.25128 493.94750 542.25128 C
532.78838 542.25128 L
535.88239 542.25128 538.39134 539.74233 538.39134 536.64831 C
538.39134 499.86227 L
538.39134 496.76825 535.88239 494.25931 532.78838 494.25931 C
493.94750 494.25931 L
490.85348 494.25931 488.34454 496.76825 488.34454 499.86227 C
488.34454 536.64831 L
@c
466.81257 546.59537 m
463.71742 546.59537 461.20961 549.10431 461.20961 552.19833 C
461.20961 588.80041 L
461.20961 591.89443 463.71742 594.40337 466.81257 594.40337 C
505.65345 594.40337 L
508.74746 594.40337 511.25641 591.89443 511.25641 588.80041 C
511.25641 552.19833 L
511.25641 549.10431 508.74746 546.59537 505.65345 546.59537 C
466.81257 546.59537 L
@c
434.34454 536.64831 m
434.34454 539.74233 436.85348 542.25128 439.94750 542.25128 C
478.78838 542.25128 L
481.88239 542.25128 484.39134 539.74233 484.39134 536.64831 C
484.39134 499.86227 L
484.39134 496.76825 481.88239 494.25931 478.78838 494.25931 C
439.94750 494.25931 L
436.85348 494.25931 434.34454 496.76825 434.34454 499.86227 C
434.34454 536.64831 L
@c
406.98454 588.80041 m
406.98454 591.89443 409.49348 594.40337 412.58750 594.40337 C
451.42838 594.40337 L
454.52353 594.40337 457.03134 591.89443 457.03134 588.80041 C
457.03134 552.19833 L
457.03134 549.10431 454.52353 546.59537 451.42838 546.59537 C
412.58750 546.59537 L
409.49348 546.59537 406.98454 549.10431 406.98454 552.19833 C
406.98454 588.80041 L
@c
470.99650 657.00425 m
470.99650 653.91024 468.48756 651.40243 465.39354 651.40243 C
426.55153 651.40243 L
423.45751 651.40243 420.94857 653.91024 420.94857 657.00425 C
420.94857 693.60633 L
420.94857 696.70035 423.45751 699.20929 426.55153 699.20929 C
465.39354 699.20929 L
468.48756 699.20929 470.99650 696.70035 470.99650 693.60633 C
470.99650 657.00425 L
@c
492.20050 646.99427 m
495.29452 646.99427 497.80346 644.48646 497.80346 641.39244 C
497.80346 604.79036 L
497.80346 601.69521 495.29452 599.18740 492.20050 599.18740 C
453.35934 599.18740 L
450.26447 599.18740 447.75638 601.69521 447.75638 604.79036 C
447.75638 641.39244 L
447.75638 644.48646 450.26447 646.99427 453.35934 646.99427 C
492.20050 646.99427 L
@c
524.51660 657.00425 m
524.51660 653.91024 522.00737 651.40243 518.91335 651.40243 C
480.07247 651.40243 L
476.97761 651.40243 474.46951 653.91024 474.46951 657.00425 C
474.46951 693.60633 L
474.46951 696.70035 476.97761 699.20929 480.07247 699.20929 C
518.91335 699.20929 L
522.00737 699.20929 524.51660 696.70035 524.51660 693.60633 C
524.51660 657.00425 L
@c
528.18633 657.00425 m
528.18633 693.60633 L
528.18633 696.70035 530.69443 699.20929 533.78957 699.20929 C
572.62961 699.20929 L
575.72447 699.20929 578.23257 696.70035 578.23257 693.60633 C
578.23257 657.00425 L
578.23257 653.91024 575.72447 651.40243 572.62961 651.40243 C
533.78957 651.40243 L
530.69443 651.40243 528.18633 653.91024 528.18633 657.00425 C
@c
546.09052 646.99427 m
549.18454 646.99427 551.69348 644.48646 551.69348 641.39244 C
551.69348 604.79036 L
551.69348 601.69521 549.18454 599.18740 546.09052 599.18740 C
507.24935 599.18740 L
504.15449 599.18740 501.64639 601.69521 501.64639 604.79036 C
501.64639 641.39244 L
501.64639 644.48646 504.15449 646.99427 507.24935 646.99427 C
546.09052 646.99427 L
@c
399.21647 599.18740 m
396.12246 599.18740 393.61351 601.69521 393.61351 604.79036 C
393.61351 641.39244 L
393.61351 644.48646 396.12246 646.99427 399.21647 646.99427 C
438.05735 646.99427 L
441.15137 646.99427 443.66060 644.48646 443.66060 641.39244 C
443.66060 604.79036 L
443.66060 601.69521 441.15137 599.18740 438.05735 599.18740 C
399.21647 599.18740 L
@c
358.98435 546.59537 m
355.88948 546.59537 353.38139 549.10431 353.38139 552.19833 C
353.38139 588.80041 L
353.38139 591.89443 355.88948 594.40337 358.98435 594.40337 C
397.82551 594.40337 L
400.91953 594.40337 403.42847 591.89443 403.42847 588.80041 C
403.42847 552.19833 L
403.42847 549.10431 400.91953 546.59537 397.82551 546.59537 C
358.98435 546.59537 L
@c
326.72438 536.64831 m
326.72438 539.74233 329.23247 542.25128 332.32649 542.25128 C
371.16737 542.25128 L
374.26252 542.25128 376.77146 539.74233 376.77146 536.64831 C
376.77146 499.86227 L
376.77146 496.76825 374.26252 494.25931 371.16737 494.25931 C
332.32649 494.25931 L
329.23247 494.25931 326.72438 496.76825 326.72438 499.86227 C
326.72438 536.64831 L
@c
305.42145 546.59537 m
302.32743 546.59537 299.81849 549.10431 299.81849 552.19833 C
299.81849 588.80041 L
299.81849 591.89443 302.32743 594.40337 305.42145 594.40337 C
344.26233 594.40337 L
347.35748 594.40337 349.86557 591.89443 349.86557 588.80041 C
349.86557 552.19833 L
349.86557 549.10431 347.35748 546.59537 344.26233 546.59537 C
305.42145 546.59537 L
@c
273.10847 536.64831 m
273.10847 539.74233 275.61657 542.25128 278.71058 542.25128 C
317.55260 542.25128 L
320.64633 542.25128 323.15556 539.74233 323.15556 536.64831 C
323.15556 499.86227 L
323.15556 496.76825 320.64633 494.25931 317.55260 494.25931 C
278.71058 494.25931 L
275.61657 494.25931 273.10847 496.76825 273.10847 499.86227 C
273.10847 536.64831 L
@c
251.99150 546.59537 m
248.89635 546.59537 246.38854 549.10431 246.38854 552.19833 C
246.38854 588.80041 L
246.38854 591.89443 248.89635 594.40337 251.99150 594.40337 C
290.83238 594.40337 L
293.92639 594.40337 296.43534 591.89443 296.43534 588.80041 C
296.43534 552.19833 L
296.43534 549.10431 293.92639 546.59537 290.83238 546.59537 C
251.99150 546.59537 L
@c
219.52233 536.64831 m
219.52233 539.74233 222.03156 542.25128 225.12557 542.25128 C
263.96759 542.25128 L
267.06161 542.25128 269.56942 539.74233 269.56942 536.64831 C
269.56942 499.86227 L
269.56942 496.76825 267.06161 494.25931 263.96759 494.25931 C
225.12557 494.25931 L
222.03156 494.25931 219.52233 496.76825 219.52233 499.86227 C
219.52233 536.64831 L
@c
198.29452 546.59537 m
195.20050 546.59537 192.69156 549.10431 192.69156 552.19833 C
192.69156 588.80041 L
192.69156 591.89443 195.20050 594.40337 198.29452 594.40337 C
237.13540 594.40337 L
240.23055 594.40337 242.73836 591.89443 242.73836 588.80041 C
242.73836 552.19833 L
242.73836 549.10431 240.23055 546.59537 237.13540 546.59537 C
198.29452 546.59537 L
@c
165.99146 536.64831 m
165.99146 539.74233 168.50041 542.25128 171.59443 542.25128 C
210.43644 542.25128 L
213.53046 542.25128 216.03855 539.74233 216.03855 536.64831 C
216.03855 499.86227 L
216.03855 496.76825 213.53046 494.25931 210.43644 494.25931 C
171.59443 494.25931 L
168.50041 494.25931 165.99146 496.76825 165.99146 499.86227 C
165.99146 536.64831 L
@c
144.78151 546.59537 m
141.68750 546.59537 139.17855 549.10431 139.17855 552.19833 C
139.17855 588.80041 L
139.17855 591.89443 141.68750 594.40337 144.78151 594.40337 C
183.62353 594.40337 L
186.71754 594.40337 189.22535 591.89443 189.22535 588.80041 C
189.22535 552.19833 L
189.22535 549.10431 186.71754 546.59537 183.62353 546.59537 C
144.78151 546.59537 L
@c
112.51361 536.64831 m
112.51361 539.74233 115.02142 542.25128 118.11657 542.25128 C
156.95745 542.25128 L
160.05260 542.25128 162.56041 539.74233 162.56041 536.64831 C
162.56041 499.86227 L
162.56041 496.76825 160.05260 494.25931 156.95745 494.25931 C
118.11657 494.25931 L
115.02142 494.25931 112.51361 496.76825 112.51361 499.86227 C
112.51361 536.64831 L
@c
90.90652 546.59537 m
87.81250 546.59537 85.30441 549.10431 85.30441 552.19833 C
85.30441 588.80041 L
85.30441 591.89443 87.81250 594.40337 90.90652 594.40337 C
129.74854 594.40337 L
132.84255 594.40337 135.35150 591.89443 135.35150 588.80041 C
135.35150 552.19833 L
135.35150 549.10431 132.84255 546.59537 129.74854 546.59537 C
90.90652 546.59537 L
@c
58.35657 536.64831 m
58.35657 539.74233 60.86438 542.25128 63.95839 542.25128 C
102.80041 542.25128 L
105.89443 542.25128 108.40337 539.74233 108.40337 536.64831 C
108.40337 499.86227 L
108.40337 496.76825 105.89443 494.25931 102.80041 494.25931 C
63.95839 494.25931 L
60.86438 494.25931 58.35657 496.76825 58.35657 499.86227 C
58.35657 536.64831 L
@c
36.93543 546.59537 m
33.84057 546.59537 31.33247 549.10431 31.33247 552.19833 C
31.33247 588.80041 L
31.33247 591.89443 33.84057 594.40337 36.93543 594.40337 C
75.77660 594.40337 L
78.87033 594.40337 81.37843 591.89443 81.37843 588.80041 C
81.37843 552.19833 L
81.37843 549.10431 78.87033 546.59537 75.77660 546.59537 C
36.93543 546.59537 L
@c
4.60942 536.64831 m
4.60942 539.74233 7.11836 542.25128 10.21238 542.25128 C
49.05354 542.25128 L
52.14756 542.25128 54.65650 539.74233 54.65650 536.64831 C
54.65650 499.86227 L
54.65650 496.76825 52.14756 494.25931 49.05354 494.25931 C
10.21238 494.25931 L
7.11836 494.25931 4.60942 496.76825 4.60942 499.86227 C
4.60942 536.64831 L
@c
-17.04161 546.59537 m
-20.13562 546.59537 -22.64457 549.10431 -22.64457 552.19833 C
-22.64457 588.80041 L
-22.64457 591.89443 -20.13562 594.40337 -17.04161 594.40337 C
21.80041 594.40337 L
24.89443 594.40337 27.40337 591.89443 27.40337 588.80041 C
27.40337 552.19833 L
27.40337 549.10431 24.89443 546.59537 21.80041 546.59537 C
-17.04161 546.59537 L
@c
-49.10145 536.64831 m
-49.10145 539.74233 -46.59250 542.25128 -43.49849 542.25128 C
-4.65761 542.25128 L
-1.56246 542.25128 0.94535 539.74233 0.94535 536.64831 C
0.94535 499.86227 L
0.94535 496.76825 -1.56246 494.25931 -4.65761 494.25931 C
-43.49849 494.25931 L
-46.59250 494.25931 -49.10145 496.76825 -49.10145 499.86227 C
-49.10145 536.64831 L
@c
40.71260 657.00425 m
40.71260 653.91024 38.20450 651.40243 35.10935 651.40243 C
-3.73153 651.40243 L
-6.82639 651.40243 -9.33449 653.91024 -9.33449 657.00425 C
-9.33449 693.60633 L
-9.33449 696.70035 -6.82639 699.20929 -3.73153 699.20929 C
35.10935 699.20929 L
38.20450 699.20929 40.71260 696.70035 40.71260 693.60633 C
40.71260 657.00425 L
@c
62.24457 646.99427 m
65.33858 646.99427 67.84753 644.48646 67.84753 641.39244 C
67.84753 604.79036 L
67.84753 601.69521 65.33858 599.18740 62.24457 599.18740 C
23.40255 599.18740 L
20.30854 599.18740 17.80044 601.69521 17.80044 604.79036 C
17.80044 641.39244 L
17.80044 644.48646 20.30854 646.99427 23.40255 646.99427 C
62.24457 646.99427 L
@c
94.62557 657.00425 m
94.62557 653.91024 92.11748 651.40243 89.02233 651.40243 C
50.18145 651.40243 L
47.08658 651.40243 44.57849 653.91024 44.57849 657.00425 C
44.57849 693.60633 L
44.57849 696.70035 47.08658 699.20929 50.18145 699.20929 C
89.02233 699.20929 L
92.11748 699.20929 94.62557 696.70035 94.62557 693.60633 C
94.62557 657.00425 L
@c
115.96054 646.99427 m
119.05540 646.99427 121.56350 644.48646 121.56350 641.39244 C
121.56350 604.79036 L
121.56350 601.69521 119.05540 599.18740 115.96054 599.18740 C
77.11937 599.18740 L
74.02450 599.18740 71.51641 601.69521 71.51641 604.79036 C
71.51641 641.39244 L
71.51641 644.48646 74.02450 646.99427 77.11937 646.99427 C
115.96054 646.99427 L
@c
148.43452 657.00425 m
148.43452 653.91024 145.92643 651.40243 142.83241 651.40243 C
103.99039 651.40243 L
100.89638 651.40243 98.38743 653.91024 98.38743 657.00425 C
98.38743 693.60633 L
98.38743 696.70035 100.89638 699.20929 103.99039 699.20929 C
142.83241 699.20929 L
145.92643 699.20929 148.43452 696.70035 148.43452 693.60633 C
148.43452 657.00425 L
@c
169.96054 646.99427 m
173.05540 646.99427 175.56350 644.48646 175.56350 641.39244 C
175.56350 604.79036 L
175.56350 601.69521 173.05540 599.18740 169.96054 599.18740 C
131.11937 599.18740 L
128.02450 599.18740 125.51641 601.69521 125.51641 604.79036 C
125.51641 641.39244 L
125.51641 644.48646 128.02450 646.99427 131.11937 646.99427 C
169.96054 646.99427 L
@c
202.24346 657.00425 m
202.24346 653.91024 199.73537 651.40243 196.64050 651.40243 C
157.79934 651.40243 L
154.70561 651.40243 152.19638 653.91024 152.19638 657.00425 C
152.19638 693.60633 L
152.19638 696.70035 154.70561 699.20929 157.79934 699.20929 C
196.64050 699.20929 L
199.73537 699.20929 202.24346 696.70035 202.24346 693.60633 C
202.24346 657.00425 L
@c
223.80236 646.99427 m
226.89638 646.99427 229.40561 644.48646 229.40561 641.39244 C
229.40561 604.79036 L
229.40561 601.69521 226.89638 599.18740 223.80236 599.18740 C
184.96035 599.18740 L
181.86633 599.18740 179.35739 601.69521 179.35739 604.79036 C
179.35739 641.39244 L
179.35739 644.48646 181.86633 646.99427 184.96035 646.99427 C
223.80236 646.99427 L
@c
255.90047 657.00425 m
255.90047 653.91024 253.39153 651.40243 250.29751 651.40243 C
211.45635 651.40243 L
208.36148 651.40243 205.85339 653.91024 205.85339 657.00425 C
205.85339 693.60633 L
205.85339 696.70035 208.36148 699.20929 211.45635 699.20929 C
250.29751 699.20929 L
253.39153 699.20929 255.90047 696.70035 255.90047 693.60633 C
255.90047 657.00425 L
@c
277.67735 646.99427 m
280.77137 646.99427 283.28060 644.48646 283.28060 641.39244 C
283.28060 604.79036 L
283.28060 601.69521 280.77137 599.18740 277.67735 599.18740 C
238.83534 599.18740 L
235.74161 599.18740 233.23238 601.69521 233.23238 604.79036 C
233.23238 641.39244 L
233.23238 644.48646 235.74161 646.99427 238.83534 646.99427 C
277.67735 646.99427 L
@c
309.62948 657.00425 m
309.62948 653.91024 307.12139 651.40243 304.02652 651.40243 C
265.18535 651.40243 L
262.09049 651.40243 259.58239 653.91024 259.58239 657.00425 C
259.58239 693.60633 L
259.58239 696.70035 262.09049 699.20929 265.18535 699.20929 C
304.02652 699.20929 L
307.12139 699.20929 309.62948 696.70035 309.62948 693.60633 C
309.62948 657.00425 L
@c
331.13735 646.99427 m
334.23137 646.99427 336.74060 644.48646 336.74060 641.39244 C
336.74060 604.79036 L
336.74060 601.69521 334.23137 599.18740 331.13735 599.18740 C
292.29647 599.18740 L
289.20161 599.18740 286.69351 601.69521 286.69351 604.79036 C
286.69351 641.39244 L
286.69351 644.48646 289.20161 646.99427 292.29647 646.99427 C
331.13735 646.99427 L
@c
363.33354 657.00425 m
363.33354 653.91024 360.82460 651.40243 357.73058 651.40243 C
318.88942 651.40243 L
315.79455 651.40243 313.28646 653.91024 313.28646 657.00425 C
313.28646 693.60633 L
313.28646 696.70035 315.79455 699.20929 318.88942 699.20929 C
357.73058 699.20929 L
360.82460 699.20929 363.33354 696.70035 363.33354 693.60633 C
363.33354 657.00425 L
@c
366.98258 657.00425 m
366.98258 693.60633 L
366.98258 696.70035 369.49039 699.20929 372.58554 699.20929 C
411.42643 699.20929 L
414.52157 699.20929 417.02939 696.70035 417.02939 693.60633 C
417.02939 657.00425 L
417.02939 653.91024 414.52157 651.40243 411.42643 651.40243 C
372.58554 651.40243 L
369.49039 651.40243 366.98258 653.91024 366.98258 657.00425 C
@c
385.06139 646.99427 m
388.15540 646.99427 390.66435 644.48646 390.66435 641.39244 C
390.66435 604.79036 L
390.66435 601.69521 388.15540 599.18740 385.06139 599.18740 C
346.21937 599.18740 L
343.12535 599.18740 340.61641 601.69521 340.61641 604.79036 C
340.61641 641.39244 L
340.61641 644.48646 343.12535 646.99427 346.21937 646.99427 C
385.06139 646.99427 L
@c
-57.23745 651.40243 m
-60.33260 651.40243 -62.84041 653.91024 -62.84041 657.00425 C
-62.84041 693.60633 L
-62.84041 696.70035 -60.33260 699.20929 -57.23745 699.20929 C
-18.39657 699.20929 L
-15.30255 699.20929 -12.79361 696.70035 -12.79361 693.60633 C
-12.79361 657.00425 L
-12.79361 653.91024 -15.30255 651.40243 -18.39657 651.40243 C
-57.23745 651.40243 L
@c
-36.19956 641.39244 m
-36.19956 644.48646 -33.69146 646.99427 -30.59745 646.99427 C
8.24457 646.99427 L
11.33858 646.99427 13.84753 644.48646 13.84753 641.39244 C
13.84753 604.79036 L
13.84753 601.69521 11.33858 599.18740 8.24457 599.18740 C
-30.59745 599.18740 L
-33.69146 599.18740 -36.19956 601.69521 -36.19956 604.79036 C
-36.19956 641.39244 L
@c
-53.08753 536.64831 m
-53.08753 499.86227 L
-53.08753 496.76825 -55.59647 494.25931 -58.69049 494.25931 C
-110.65663 494.25931 L
-113.75065 494.25931 -116.25959 496.76825 -116.25959 499.86227 C
-116.25959 536.64831 L
-116.25959 539.74233 -113.75065 542.25128 -110.65663 542.25128 C
-58.69049 542.25128 L
-55.59647 542.25128 -53.08753 539.74233 -53.08753 536.64831 C
@c
-110.65663 546.59537 m
-113.75065 546.59537 -116.25959 549.10431 -116.25959 552.19833 C
-116.25959 588.80041 L
-116.25959 591.89443 -113.75065 594.40337 -110.65663 594.40337 C
-31.83562 594.40337 L
-28.74161 594.40337 -26.23266 591.89443 -26.23266 588.80041 C
-26.23266 552.19833 L
-26.23266 549.10431 -28.74161 546.59537 -31.83562 546.59537 C
-110.65663 546.59537 L
@c
618.72860 599.87622 m
614.14753 599.87622 L
611.05351 599.87622 608.54457 602.38431 608.54457 605.47946 C
608.54457 641.39244 L
608.54457 644.48646 611.05351 646.99427 614.14753 646.99427 C
627.48539 646.99427 L
652.98954 646.99427 L
656.08356 646.99427 658.59250 644.48646 658.59250 641.39244 C
658.59250 605.84740 L
658.59250 552.19833 L
658.59250 549.10431 656.08356 546.59537 652.98954 546.59537 C
627.76942 546.59537 L
624.67455 546.59537 622.16646 549.10431 622.16646 552.19833 C
622.16646 596.43921 L
622.16646 598.33729 620.62639 599.87622 618.72860 599.87622 C
@c
654.52649 730.36148 m
-112.59553 730.36148 L
-117.12756 730.36148 -120.80154 726.68721 -120.80154 722.15546 C
-120.80154 445.78431 L
-120.80154 441.25228 -117.12756 437.57830 -112.59553 437.57830 C
654.52649 437.57830 L
659.05852 437.57830 662.73137 441.25228 662.73137 445.78431 C
662.73137 722.15546 L
662.73137 726.68721 659.05852 730.36148 654.52649 730.36148 C
@c
F

@rax %Note: Object
609.67871 443.62460 657.45865 489.16375 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
652.98869 489.16375 m
614.14781 489.16375 L
611.68365 489.16375 609.67871 487.15852 609.67871 484.69465 C
609.67871 448.09370 L
609.67871 445.62954 611.68365 443.62460 614.14781 443.62460 C
652.98869 443.62460 L
655.45370 443.62460 657.45865 445.62954 657.45865 448.09370 C
657.45865 484.69465 L
657.45865 487.15852 655.45370 489.16375 652.98869 489.16375 C
@c
F

@rax %Note: Object
556.21474 443.62460 603.99496 489.16375 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
599.52586 489.16375 m
560.68384 489.16375 L
558.21997 489.16375 556.21474 487.15852 556.21474 484.69465 C
556.21474 448.09370 L
556.21474 445.62954 558.21997 443.62460 560.68384 443.62460 C
599.52586 443.62460 L
601.98973 443.62460 603.99496 445.62954 603.99496 448.09370 C
603.99496 484.69465 L
603.99496 487.15852 601.98973 489.16375 599.52586 489.16375 C
@c
F

@rax %Note: Object
502.64759 443.62460 550.42753 489.16375 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
545.95843 489.16375 m
507.11641 489.16375 L
504.65254 489.16375 502.64759 487.15852 502.64759 484.69465 C
502.64759 448.09370 L
502.64759 445.62954 504.65254 443.62460 507.11641 443.62460 C
545.95843 443.62460 L
548.42258 443.62460 550.42753 445.62954 550.42753 448.09370 C
550.42753 484.69465 L
550.42753 487.15852 548.42258 489.16375 545.95843 489.16375 C
@c
F

@rax %Note: Object
449.16690 443.62460 496.65997 489.16375 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
492.19087 489.16375 m
453.63487 489.16375 L
451.17099 489.16375 449.16690 487.15852 449.16690 484.69465 C
449.16690 448.09370 L
449.16690 445.62954 451.17099 443.62460 453.63487 443.62460 C
492.19087 443.62460 L
494.65474 443.62460 496.65997 445.62954 496.65997 448.09370 C
496.65997 484.69465 L
496.65997 487.15852 494.65474 489.16375 492.19087 489.16375 C
@c
F

@rax %Note: Object
-7.54781 443.62460 40.23213 489.16375 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
35.76217 489.16375 m
-3.07871 489.16375 L
-5.54287 489.16375 -7.54781 487.15852 -7.54781 484.69465 C
-7.54781 448.09370 L
-7.54781 445.62954 -5.54287 443.62460 -3.07871 443.62460 C
35.76217 443.62460 L
38.22718 443.62460 40.23213 445.62954 40.23213 448.09370 C
40.23213 484.69465 L
40.23213 487.15852 38.22718 489.16375 35.76217 489.16375 C
@c
F

@rax %Note: Object
-61.43754 443.62460 -13.65761 489.16375 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-18.12643 489.16375 m
-56.96844 489.16375 L
-59.43260 489.16375 -61.43754 487.15852 -61.43754 484.69465 C
-61.43754 448.09370 L
-61.43754 445.62954 -59.43260 443.62460 -56.96844 443.62460 C
-18.12643 443.62460 L
-15.66255 443.62460 -13.65761 445.62954 -13.65761 448.09370 C
-13.65761 484.69465 L
-13.65761 487.15852 -15.66255 489.16375 -18.12643 489.16375 C
@c
F

@rax %Note: Object
-115.12545 443.62460 -67.34636 489.16375 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-71.81546 489.16375 m
-110.65635 489.16375 L
-113.12050 489.16375 -115.12545 487.15852 -115.12545 484.69465 C
-115.12545 448.09370 L
-115.12545 445.62954 -113.12050 443.62460 -110.65635 443.62460 C
-71.81546 443.62460 L
-69.35131 443.62460 -67.34636 445.62954 -67.34636 448.09370 C
-67.34636 484.69465 L
-67.34636 487.15852 -69.35131 489.16375 -71.81546 489.16375 C
@c
F

@rax %Note: Object
59.48957 495.39317 107.26951 541.11713 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
63.95953 495.39317 m
102.80041 495.39317 L
105.26457 495.39317 107.26951 497.39811 107.26951 499.86227 C
107.26951 536.64803 L
107.26951 539.11219 105.26457 541.11713 102.80041 541.11713 C
63.95953 541.11713 L
61.49452 541.11713 59.48957 539.11219 59.48957 536.64803 C
59.48957 499.86227 L
59.48957 497.39811 61.49452 495.39317 63.95953 495.39317 C
@c
F

@rax %Note: Object
113.64661 495.39317 161.42655 541.11713 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
118.11657 495.39317 m
156.95773 495.39317 L
159.42161 495.39317 161.42655 497.39811 161.42655 499.86227 C
161.42655 536.64803 L
161.42655 539.11219 159.42161 541.11713 156.95773 541.11713 C
118.11657 541.11713 L
115.65156 541.11713 113.64661 539.11219 113.64661 536.64803 C
113.64661 499.86227 L
113.64661 497.39811 115.65156 495.39317 118.11657 495.39317 C
@c
F

@rax %Note: Object
167.12504 495.39317 214.90526 541.11713 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
171.59414 495.39317 m
210.43616 495.39317 L
212.90003 495.39317 214.90526 497.39811 214.90526 499.86227 C
214.90526 536.64803 L
214.90526 539.11219 212.90003 541.11713 210.43616 541.11713 C
171.59414 541.11713 L
169.13027 541.11713 167.12504 539.11219 167.12504 536.64803 C
167.12504 499.86227 L
167.12504 497.39811 169.13027 495.39317 171.59414 495.39317 C
@c
F

@rax %Note: Object
220.65647 495.39317 268.43641 541.11713 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
225.12557 495.39317 m
263.96759 495.39317 L
266.43146 495.39317 268.43641 497.39811 268.43641 499.86227 C
268.43641 536.64803 L
268.43641 539.11219 266.43146 541.11713 263.96759 541.11713 C
225.12557 541.11713 L
222.66142 541.11713 220.65647 539.11219 220.65647 536.64803 C
220.65647 499.86227 L
220.65647 497.39811 222.66142 495.39317 225.12557 495.39317 C
@c
F

@rax %Note: Object
274.24148 495.39317 322.02142 541.11713 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
278.71030 495.39317 m
317.55231 495.39317 L
320.01647 495.39317 322.02142 497.39811 322.02142 499.86227 C
322.02142 536.64803 L
322.02142 539.11219 320.01647 541.11713 317.55231 541.11713 C
278.71030 541.11713 L
276.24643 541.11713 274.24148 539.11219 274.24148 536.64803 C
274.24148 499.86227 L
274.24148 497.39811 276.24643 495.39317 278.71030 495.39317 C
@c
F

@rax %Note: Object
327.85767 495.39317 375.63761 541.11713 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
332.32677 495.39317 m
371.16765 495.39317 L
373.63266 495.39317 375.63761 497.39811 375.63761 499.86227 C
375.63761 536.64803 L
375.63761 539.11219 373.63266 541.11713 371.16765 541.11713 C
332.32677 541.11713 L
329.86261 541.11713 327.85767 539.11219 327.85767 536.64803 C
327.85767 499.86227 L
327.85767 497.39811 329.86261 495.39317 332.32677 495.39317 C
@c
F

@rax %Note: Object
381.76498 495.39317 429.54491 541.11713 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
386.23493 495.39317 m
425.07581 495.39317 L
427.53997 495.39317 429.54491 497.39811 429.54491 499.86227 C
429.54491 536.64803 L
429.54491 539.11219 427.53997 541.11713 425.07581 541.11713 C
386.23493 541.11713 L
383.76992 541.11713 381.76498 539.11219 381.76498 536.64803 C
381.76498 499.86227 L
381.76498 497.39811 383.76992 495.39317 386.23493 495.39317 C
@c
F

@rax %Note: Object
435.47783 495.39317 483.25776 541.11713 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
439.94665 495.39317 m
478.78866 495.39317 L
481.25282 495.39317 483.25776 497.39811 483.25776 499.86227 C
483.25776 536.64803 L
483.25776 539.11219 481.25282 541.11713 478.78866 541.11713 C
439.94665 541.11713 L
437.48277 541.11713 435.47783 539.11219 435.47783 536.64803 C
435.47783 499.86227 L
435.47783 497.39811 437.48277 495.39317 439.94665 495.39317 C
@c
F

@rax %Note: Object
489.47783 495.39317 537.25776 541.11713 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
493.94665 495.39317 m
532.78866 495.39317 L
535.25282 495.39317 537.25776 497.39811 537.25776 499.86227 C
537.25776 536.64803 L
537.25776 539.11219 535.25282 541.11713 532.78866 541.11713 C
493.94665 541.11713 L
491.48277 541.11713 489.47783 539.11219 489.47783 536.64803 C
489.47783 499.86227 L
489.47783 497.39811 491.48277 495.39317 493.94665 495.39317 C
@c
F

@rax %Note: Object
542.62687 495.39288 657.74183 541.11685 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
653.27301 541.11685 m
547.09682 541.11685 L
544.63181 541.11685 542.62687 539.11162 542.62687 536.64775 C
542.62687 499.86170 L
542.62687 497.39783 544.63181 495.39288 547.09682 495.39288 C
653.27301 495.39288 L
655.73688 495.39288 657.74183 497.39783 657.74183 499.86170 C
657.74183 536.64775 L
657.74183 539.11162 655.73688 541.11685 653.27301 541.11685 C
@c
F

@rax %Note: Object
5.74328 495.39317 53.52350 541.11713 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
10.21238 495.39317 m
49.05326 495.39317 L
51.51827 495.39317 53.52350 497.39811 53.52350 499.86227 C
53.52350 536.64803 L
53.52350 539.11219 51.51827 541.11713 49.05326 541.11713 C
10.21238 541.11713 L
7.74850 541.11713 5.74328 539.11219 5.74328 536.64803 C
5.74328 499.86227 L
5.74328 497.39811 7.74850 495.39317 10.21238 495.39317 C
@c
F

@rax %Note: Object
-47.96759 495.39317 -0.18765 541.11713 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-43.49849 495.39317 m
-4.65761 495.39317 L
-2.19260 495.39317 -0.18765 497.39811 -0.18765 499.86227 C
-0.18765 536.64803 L
-0.18765 539.11219 -2.19260 541.11713 -4.65761 541.11713 C
-43.49849 541.11713 L
-45.96265 541.11713 -47.96759 539.11219 -47.96759 536.64803 C
-47.96759 499.86227 L
-47.96759 497.39811 -45.96265 495.39317 -43.49849 495.39317 C
@c
F

@rax %Note: Object
-21.51014 547.72866 26.26894 593.26866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
26.26894 552.19776 m
26.26894 588.79984 L
26.26894 591.26372 24.26400 593.26866 21.79984 593.26866 C
-17.04189 593.26866 L
-19.50491 593.26866 -21.51014 591.26372 -21.51014 588.79984 C
-21.51014 552.19776 L
-21.51014 549.73389 -19.50491 547.72866 -17.04189 547.72866 C
21.79984 547.72866 L
24.26400 547.72866 26.26894 549.73389 26.26894 552.19776 C
@c
F

@rax %Note: Object
32.46548 547.72866 80.24457 593.26866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
80.24457 552.19776 m
80.24457 588.79984 L
80.24457 591.26372 78.23962 593.26866 75.77546 593.26866 C
36.93458 593.26866 L
34.47071 593.26866 32.46548 591.26372 32.46548 588.79984 C
32.46548 552.19776 L
32.46548 549.73389 34.47071 547.72866 36.93458 547.72866 C
75.77546 547.72866 L
78.23962 547.72866 80.24457 549.73389 80.24457 552.19776 C
@c
F

@rax %Note: Object
86.43827 547.72866 134.21735 593.26866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
134.21735 552.19776 m
134.21735 588.79984 L
134.21735 591.26372 132.21241 593.26866 129.74740 593.26866 C
90.90624 593.26866 L
88.44321 593.26866 86.43827 591.26372 86.43827 588.79984 C
86.43827 552.19776 L
86.43827 549.73389 88.44321 547.72866 90.90624 547.72866 C
129.74740 547.72866 L
132.21241 547.72866 134.21735 549.73389 134.21735 552.19776 C
@c
F

@rax %Note: Object
140.31241 547.72866 188.09235 593.26866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
188.09235 552.19776 m
188.09235 588.79984 L
188.09235 591.26372 186.08740 593.26866 183.62239 593.26866 C
144.78123 593.26866 L
142.31735 593.26866 140.31241 591.26372 140.31241 588.79984 C
140.31241 552.19776 L
140.31241 549.73389 142.31735 547.72866 144.78123 547.72866 C
183.62239 547.72866 L
186.08740 547.72866 188.09235 549.73389 188.09235 552.19776 C
@c
F

@rax %Note: Object
193.82598 547.72866 241.60507 593.26866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
241.60507 552.19776 m
241.60507 588.79984 L
241.60507 591.26372 239.59984 593.26866 237.13597 593.26866 C
198.29395 593.26866 L
195.83093 593.26866 193.82598 591.26372 193.82598 588.79984 C
193.82598 552.19776 L
193.82598 549.73389 195.83093 547.72866 198.29395 547.72866 C
237.13597 547.72866 L
239.59984 547.72866 241.60507 549.73389 241.60507 552.19776 C
@c
F

@rax %Note: Object
247.52239 547.72866 295.30120 593.26866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
295.30120 552.19776 m
295.30120 588.79984 L
295.30120 591.26372 293.29625 593.26866 290.83238 593.26866 C
251.99036 593.26866 L
249.52734 593.26866 247.52239 591.26372 247.52239 588.79984 C
247.52239 552.19776 L
247.52239 549.73389 249.52734 547.72866 251.99036 547.72866 C
290.83238 547.72866 L
293.29625 547.72866 295.30120 549.73389 295.30120 552.19776 C
@c
F

@rax %Note: Object
300.95291 547.72866 348.73200 593.26866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
348.73200 552.19776 m
348.73200 588.79984 L
348.73200 591.26372 346.72677 593.26866 344.26176 593.26866 C
305.42088 593.26866 L
302.95786 593.26866 300.95291 591.26372 300.95291 588.79984 C
300.95291 552.19776 L
300.95291 549.73389 302.95786 547.72866 305.42088 547.72866 C
344.26176 547.72866 L
346.72677 547.72866 348.73200 549.73389 348.73200 552.19776 C
@c
F

@rax %Note: Object
354.51524 547.72866 402.29433 593.26866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
402.29433 552.19776 m
402.29433 588.79984 L
402.29433 591.26372 400.28939 593.26866 397.82551 593.26866 C
358.98350 593.26866 L
356.52047 593.26866 354.51524 591.26372 354.51524 588.79984 C
354.51524 552.19776 L
354.51524 549.73389 356.52047 547.72866 358.98350 547.72866 C
397.82551 547.72866 L
400.28939 547.72866 402.29433 549.73389 402.29433 552.19776 C
@c
F

@rax %Note: Object
408.11839 547.72894 455.89833 593.26894 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
412.58750 547.72894 m
451.42951 547.72894 L
453.89339 547.72894 455.89833 549.73417 455.89833 552.19805 C
455.89833 588.79899 L
455.89833 591.26400 453.89339 593.26894 451.42951 593.26894 C
412.58750 593.26894 L
410.12334 593.26894 408.11839 591.26400 408.11839 588.79899 C
408.11839 552.19805 L
408.11839 549.73417 410.12334 547.72894 412.58750 547.72894 C
@c
F

@rax %Note: Object
516.00076 547.72866 563.77984 593.26866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
563.77984 552.19776 m
563.77984 588.79984 L
563.77984 591.26372 561.77490 593.26866 559.31074 593.26866 C
520.46872 593.26866 L
518.00570 593.26866 516.00076 591.26372 516.00076 588.79984 C
516.00076 552.19776 L
516.00076 549.73389 518.00570 547.72866 520.46872 547.72866 C
559.31074 547.72866 L
561.77490 547.72866 563.77984 549.73389 563.77984 552.19776 C
@c
F

@rax %Note: Object
462.34346 547.72866 510.12255 593.26866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
510.12255 552.19776 m
510.12255 588.79984 L
510.12255 591.26372 508.11761 593.26866 505.65260 593.26866 C
466.81143 593.26866 L
464.34869 593.26866 462.34346 591.26372 462.34346 588.79984 C
462.34346 552.19776 L
462.34346 549.73389 464.34869 547.72866 466.81143 547.72866 C
505.65260 547.72866 L
508.11761 547.72866 510.12255 549.73389 510.12255 552.19776 C
@c
F

@rax %Note: Object
569.55487 547.72894 617.33480 593.26894 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
574.02397 547.72894 m
612.86598 547.72894 L
615.32986 547.72894 617.33480 549.73417 617.33480 552.19805 C
617.33480 588.79899 L
617.33480 591.26400 615.32986 593.26894 612.86598 593.26894 C
574.02397 593.26894 L
571.55981 593.26894 569.55487 591.26400 569.55487 588.79899 C
569.55487 552.19805 L
569.55487 549.73417 571.55981 547.72894 574.02397 547.72894 C
@c
F

@rax %Note: Object
394.74680 600.32069 442.52674 645.86069 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
442.52674 604.79065 m
442.52674 641.39244 L
442.52674 643.85546 440.52180 645.86069 438.05679 645.86069 C
399.21591 645.86069 L
396.75175 645.86069 394.74680 643.85546 394.74680 641.39244 C
394.74680 604.79065 L
394.74680 602.32564 396.75175 600.32069 399.21591 600.32069 C
438.05679 600.32069 L
440.52180 600.32069 442.52674 602.32564 442.52674 604.79065 C
@c
F

@rax %Note: Object
448.88995 600.32126 496.66904 645.86126 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
448.88995 641.39216 m
448.88995 604.79008 L
448.88995 602.32620 450.89518 600.32126 453.35906 600.32126 C
492.19994 600.32126 L
494.66409 600.32126 496.66904 602.32620 496.66904 604.79008 C
496.66904 641.39216 L
496.66904 643.85603 494.66409 645.86126 492.19994 645.86126 C
453.35906 645.86126 L
450.89518 645.86126 448.88995 643.85603 448.88995 641.39216 C
@c
F

@rax %Note: Object
502.77969 600.32126 550.55877 645.86126 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
502.77969 641.39216 m
502.77969 604.79008 L
502.77969 602.32620 504.78463 600.32126 507.24879 600.32126 C
546.09080 600.32126 L
548.55383 600.32126 550.55877 602.32620 550.55877 604.79008 C
550.55877 641.39216 L
550.55877 643.85603 548.55383 645.86126 546.09080 645.86126 C
507.24879 645.86126 L
504.78463 645.86126 502.77969 643.85603 502.77969 641.39216 C
@c
F

@rax %Note: Object
556.22920 600.32069 604.00828 645.86069 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
604.00828 604.79065 m
604.00828 641.39244 L
604.00828 643.85546 602.00334 645.86069 599.53918 645.86069 C
560.69830 645.86069 L
558.23414 645.86069 556.22920 643.85546 556.22920 641.39244 C
556.22920 604.79065 L
556.22920 602.32564 558.23414 600.32069 560.69830 600.32069 C
599.53918 600.32069 L
602.00334 600.32069 604.00828 602.32564 604.00828 604.79065 C
@c
F

@rax %Note: Object
341.75055 600.32126 389.52935 645.86126 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
341.75055 641.39216 m
341.75055 604.79008 L
341.75055 602.32620 343.75550 600.32126 346.21937 600.32126 C
385.06139 600.32126 L
387.52441 600.32126 389.52935 602.32620 389.52935 604.79008 C
389.52935 641.39216 L
389.52935 643.85603 387.52441 645.86126 385.06139 645.86126 C
346.21937 645.86126 L
343.75550 645.86126 341.75055 643.85603 341.75055 641.39216 C
@c
F

@rax %Note: Object
287.82680 600.32126 335.60561 645.86126 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
287.82680 641.39216 m
287.82680 604.79008 L
287.82680 602.32620 289.83175 600.32126 292.29676 600.32126 C
331.13764 600.32126 L
333.60066 600.32126 335.60561 602.32620 335.60561 604.79008 C
335.60561 641.39216 L
335.60561 643.85603 333.60066 645.86126 331.13764 645.86126 C
292.29676 645.86126 L
289.83175 645.86126 287.82680 643.85603 287.82680 641.39216 C
@c
F

@rax %Note: Object
234.36680 600.32126 282.14561 645.86126 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
234.36680 641.39216 m
234.36680 604.79008 L
234.36680 602.32620 236.37175 600.32126 238.83562 600.32126 C
277.67764 600.32126 L
280.14066 600.32126 282.14561 602.32620 282.14561 604.79008 C
282.14561 641.39216 L
282.14561 643.85603 280.14066 645.86126 277.67764 645.86126 C
238.83562 645.86126 L
236.37175 645.86126 234.36680 643.85603 234.36680 641.39216 C
@c
F

@rax %Note: Object
180.49181 600.32126 228.27061 645.86126 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
180.49181 641.39216 m
180.49181 604.79008 L
180.49181 602.32620 182.49676 600.32126 184.96063 600.32126 C
223.80265 600.32126 L
226.26567 600.32126 228.27061 602.32620 228.27061 604.79008 C
228.27061 641.39216 L
228.27061 643.85603 226.26567 645.86126 223.80265 645.86126 C
184.96063 645.86126 L
182.49676 645.86126 180.49181 643.85603 180.49181 641.39216 C
@c
F

@rax %Note: Object
126.64998 600.32126 174.42879 645.86126 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
126.64998 641.39216 m
126.64998 604.79008 L
126.64998 602.32620 128.65493 600.32126 131.11994 600.32126 C
169.96082 600.32126 L
172.42384 600.32126 174.42879 602.32620 174.42879 604.79008 C
174.42879 641.39216 L
174.42879 643.85603 172.42384 645.86126 169.96082 645.86126 C
131.11994 645.86126 L
128.65493 645.86126 126.64998 643.85603 126.64998 641.39216 C
@c
F

@rax %Note: Object
72.64998 600.32126 120.42879 645.86126 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
72.64998 641.39216 m
72.64998 604.79008 L
72.64998 602.32620 74.65493 600.32126 77.11994 600.32126 C
115.96082 600.32126 L
118.42384 600.32126 120.42879 602.32620 120.42879 604.79008 C
120.42879 641.39216 L
120.42879 643.85603 118.42384 645.86126 115.96082 645.86126 C
77.11994 645.86126 L
74.65493 645.86126 72.64998 643.85603 72.64998 641.39216 C
@c
F

@rax %Note: Object
18.93402 600.32126 66.71310 645.86126 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
18.93402 641.39216 m
18.93402 604.79008 L
18.93402 602.32620 20.93896 600.32126 23.40312 600.32126 C
62.24400 600.32126 L
64.70816 600.32126 66.71310 602.32620 66.71310 604.79008 C
66.71310 641.39216 L
66.71310 643.85603 64.70816 645.86126 62.24400 645.86126 C
23.40312 645.86126 L
20.93896 645.86126 18.93402 643.85603 18.93402 641.39216 C
@c
F

@rax %Note: Object
-35.06627 600.32098 12.71367 645.86098 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-30.59717 600.32098 m
8.24372 600.32098 L
10.70872 600.32098 12.71367 602.32592 12.71367 604.79093 C
12.71367 641.39187 L
12.71367 643.85575 10.70872 645.86098 8.24372 645.86098 C
-30.59717 645.86098 L
-33.06132 645.86098 -35.06627 643.85575 -35.06627 641.39187 C
-35.06627 604.79093 L
-35.06627 602.32592 -33.06132 600.32098 -30.59717 600.32098 C
@c
F

@rax %Note: Object
-61.70712 652.53543 -13.92831 698.07458 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-13.92831 657.00454 m
-13.92831 693.60633 L
-13.92831 696.06935 -15.93326 698.07458 -18.39713 698.07458 C
-57.23830 698.07458 L
-59.70132 698.07458 -61.70712 696.06935 -61.70712 693.60633 C
-61.70712 657.00454 L
-61.70712 654.54038 -59.70132 652.53543 -57.23830 652.53543 C
-18.39713 652.53543 L
-15.93326 652.53543 -13.92831 654.54038 -13.92831 657.00454 C
@c
F

@rax %Note: Object
-8.20120 652.53572 39.57874 698.07487 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
35.10992 698.07487 m
-3.73209 698.07487 L
-6.19625 698.07487 -8.20120 696.06964 -8.20120 693.60576 C
-8.20120 657.00482 L
-8.20120 654.54066 -6.19625 652.53572 -3.73209 652.53572 C
35.10992 652.53572 L
37.57380 652.53572 39.57874 654.54066 39.57874 657.00482 C
39.57874 693.60576 L
39.57874 696.06964 37.57380 698.07487 35.10992 698.07487 C
@c
F

@rax %Note: Object
45.71178 652.53572 93.49200 698.07487 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
89.02290 698.07487 m
50.18088 698.07487 L
47.71701 698.07487 45.71178 696.06964 45.71178 693.60576 C
45.71178 657.00482 L
45.71178 654.54066 47.71701 652.53572 50.18088 652.53572 C
89.02290 652.53572 L
91.48677 652.53572 93.49200 654.54066 93.49200 657.00482 C
93.49200 693.60576 L
93.49200 696.06964 91.48677 698.07487 89.02290 698.07487 C
@c
F

@rax %Note: Object
153.32995 652.53572 201.11017 698.07487 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
196.64107 698.07487 m
157.79906 698.07487 L
155.33518 698.07487 153.32995 696.06964 153.32995 693.60576 C
153.32995 657.00482 L
153.32995 654.54066 155.33518 652.53572 157.79906 652.53572 C
196.64107 652.53572 L
199.10494 652.53572 201.11017 654.54066 201.11017 657.00482 C
201.11017 693.60576 L
201.11017 696.06964 199.10494 698.07487 196.64107 698.07487 C
@c
F

@rax %Note: Object
99.52044 652.53572 147.30151 698.07487 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
142.83156 698.07487 m
103.99039 698.07487 L
101.52539 698.07487 99.52044 696.06964 99.52044 693.60576 C
99.52044 657.00482 L
99.52044 654.54066 101.52539 652.53572 103.99039 652.53572 C
142.83156 652.53572 L
145.29657 652.53572 147.30151 654.54066 147.30151 657.00482 C
147.30151 693.60576 L
147.30151 696.06964 145.29657 698.07487 142.83156 698.07487 C
@c
F

@rax %Note: Object
206.98639 652.53572 254.76633 698.07487 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
250.29751 698.07487 m
211.45550 698.07487 L
208.99134 698.07487 206.98639 696.06964 206.98639 693.60576 C
206.98639 657.00482 L
206.98639 654.54066 208.99134 652.53572 211.45550 652.53572 C
250.29751 652.53572 L
252.76139 652.53572 254.76633 654.54066 254.76633 657.00482 C
254.76633 693.60576 L
254.76633 696.06964 252.76139 698.07487 250.29751 698.07487 C
@c
F

@rax %Note: Object
260.71597 652.53572 308.49591 698.07487 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
304.02680 698.07487 m
265.18479 698.07487 L
262.72091 698.07487 260.71597 696.06964 260.71597 693.60576 C
260.71597 657.00482 L
260.71597 654.54066 262.72091 652.53572 265.18479 652.53572 C
304.02680 652.53572 L
306.49096 652.53572 308.49591 654.54066 308.49591 657.00482 C
308.49591 693.60576 L
308.49591 696.06964 306.49096 698.07487 304.02680 698.07487 C
@c
F

@rax %Note: Object
314.42003 652.53572 362.19997 698.07487 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
357.73002 698.07487 m
318.88885 698.07487 L
316.42498 698.07487 314.42003 696.06964 314.42003 693.60576 C
314.42003 657.00482 L
314.42003 654.54066 316.42498 652.53572 318.88885 652.53572 C
357.73002 652.53572 L
360.19502 652.53572 362.19997 654.54066 362.19997 657.00482 C
362.19997 693.60576 L
362.19997 696.06964 360.19502 698.07487 357.73002 698.07487 C
@c
F

@rax %Note: Object
368.11531 652.53572 415.89524 698.07458 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
411.42614 652.53572 m
413.89030 652.53572 415.89524 654.54066 415.89524 657.00454 C
415.89524 693.60576 L
415.89524 696.06964 413.89030 698.07458 411.42614 698.07458 C
372.58526 698.07458 L
370.12025 698.07458 368.11531 696.06964 368.11531 693.60576 C
368.11531 657.00454 L
368.11531 654.54066 370.12025 652.53572 372.58526 652.53572 C
411.42614 652.53572 L
@c
F

@rax %Note: Object
422.08214 652.53572 469.86208 698.07487 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
465.39298 698.07487 m
426.55209 698.07487 L
424.08709 698.07487 422.08214 696.06964 422.08214 693.60576 C
422.08214 657.00482 L
422.08214 654.54066 424.08709 652.53572 426.55209 652.53572 C
465.39298 652.53572 L
467.85713 652.53572 469.86208 654.54066 469.86208 657.00482 C
469.86208 693.60576 L
469.86208 696.06964 467.85713 698.07487 465.39298 698.07487 C
@c
F

@rax %Note: Object
475.60252 652.53572 523.38246 698.07487 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
518.91250 698.07487 m
480.07162 698.07487 L
477.60746 698.07487 475.60252 696.06964 475.60252 693.60576 C
475.60252 657.00482 L
475.60252 654.54066 477.60746 652.53572 480.07162 652.53572 C
518.91250 652.53572 L
521.37751 652.53572 523.38246 654.54066 523.38246 657.00482 C
523.38246 693.60576 L
523.38246 696.06964 521.37751 698.07487 518.91250 698.07487 C
@c
F

@rax %Note: Object
529.32019 652.53543 577.09899 698.07458 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
577.09899 657.00454 m
577.09899 693.60633 L
577.09899 696.06935 575.09405 698.07458 572.62904 698.07458 C
533.78816 698.07458 L
531.32513 698.07458 529.32019 696.06935 529.32019 693.60633 C
529.32019 657.00454 L
529.32019 654.54038 531.32513 652.53543 533.78816 652.53543 C
572.62904 652.53543 L
575.09405 652.53543 577.09899 654.54038 577.09899 657.00454 C
@c
F

@rax %Note: Object
582.59367 652.53572 657.45865 698.07487 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
652.98869 698.07487 m
587.06277 698.07487 L
584.59890 698.07487 582.59367 696.06964 582.59367 693.60576 C
582.59367 657.00482 L
582.59367 654.54066 584.59890 652.53572 587.06277 652.53572 C
652.98869 652.53572 L
655.45370 652.53572 657.45865 654.54066 657.45865 657.00482 C
657.45865 693.60576 L
657.45865 696.06964 655.45370 698.07487 652.98869 698.07487 C
@c
F

@rax %Note: Object
-115.65808 652.53572 -67.87814 698.07458 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-111.18898 652.53572 m
-72.34809 652.53572 L
-69.88309 652.53572 -67.87814 654.54066 -67.87814 657.00454 C
-67.87814 693.60576 L
-67.87814 696.06964 -69.88309 698.07458 -72.34809 698.07458 C
-111.18898 698.07458 L
-113.65313 698.07458 -115.65808 696.06964 -115.65808 693.60576 C
-115.65808 657.00454 L
-115.65808 654.54066 -113.65313 652.53572 -111.18898 652.53572 C
@c
F

@rax %Note: Object
-115.65751 705.25332 -41.18343 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-112.02548 705.25332 m
-44.81631 705.25332 L
-42.81335 705.25332 -41.18343 706.88353 -41.18343 708.88649 C
-41.18343 720.30359 L
-41.18343 722.30655 -42.81335 723.93647 -44.81631 723.93647 C
-112.02548 723.93647 L
-114.02731 723.93647 -115.65751 722.30655 -115.65751 720.30359 C
-115.65751 708.88649 L
-115.65751 706.88353 -114.02844 705.25332 -112.02548 705.25332 C
@c
F

@rax %Note: Object
-34.61301 705.25332 12.81685 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-30.98013 705.25332 m
9.18397 705.25332 L
11.18693 705.25332 12.81685 706.88353 12.81685 708.88649 C
12.81685 720.30359 L
12.81685 722.30655 11.18693 723.93647 9.18397 723.93647 C
-30.98013 723.93647 L
-32.98309 723.93647 -34.61301 722.30655 -34.61301 720.30359 C
-34.61301 708.88649 L
-34.61301 706.88353 -32.98309 705.25332 -30.98013 705.25332 C
@c
F

@rax %Note: Object
18.99156 705.25332 66.42142 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
22.62444 705.25332 m
62.78854 705.25332 L
64.79150 705.25332 66.42142 706.88353 66.42142 708.88649 C
66.42142 720.30359 L
66.42142 722.30655 64.79150 723.93647 62.78854 723.93647 C
22.62444 723.93647 L
20.62148 723.93647 18.99156 722.30655 18.99156 720.30359 C
18.99156 708.88649 L
18.99156 706.88353 20.62148 705.25332 22.62444 705.25332 C
@c
F

@rax %Note: Object
72.64687 705.25332 120.07672 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
76.27975 705.25332 m
116.44469 705.25332 L
118.44765 705.25332 120.07672 706.88353 120.07672 708.88649 C
120.07672 720.30359 L
120.07672 722.30655 118.44765 723.93647 116.44469 723.93647 C
76.27975 723.93647 L
74.27679 723.93647 72.64687 722.30655 72.64687 720.30359 C
72.64687 708.88649 L
72.64687 706.88353 74.27679 705.25332 76.27975 705.25332 C
@c
F

@rax %Note: Object
180.46205 705.25332 227.89219 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
184.09521 705.25332 m
224.25931 705.25332 L
226.26227 705.25332 227.89219 706.88353 227.89219 708.88649 C
227.89219 720.30359 L
227.89219 722.30655 226.26227 723.93647 224.25931 723.93647 C
184.09521 723.93647 L
182.09225 723.93647 180.46205 722.30655 180.46205 720.30359 C
180.46205 708.88649 L
180.46205 706.88353 182.09225 705.25332 184.09521 705.25332 C
@c
F

@rax %Note: Object
126.69647 705.25332 174.12661 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
130.32964 705.25332 m
170.49345 705.25332 L
172.49669 705.25332 174.12661 706.88353 174.12661 708.88649 C
174.12661 720.30359 L
174.12661 722.30655 172.49669 723.93647 170.49345 723.93647 C
130.32964 723.93647 L
128.32668 723.93647 126.69647 722.30655 126.69647 720.30359 C
126.69647 708.88649 L
126.69647 706.88353 128.32668 705.25332 130.32964 705.25332 C
@c
F

@rax %Note: Object
233.71030 705.25332 281.14016 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
237.34318 705.25332 m
277.50728 705.25332 L
279.51024 705.25332 281.14016 706.88353 281.14016 708.88649 C
281.14016 720.30359 L
281.14016 722.30655 279.51024 723.93647 277.50728 723.93647 C
237.34318 723.93647 L
235.34022 723.93647 233.71030 722.30655 233.71030 720.30359 C
233.71030 708.88649 L
233.71030 706.88353 235.34022 705.25332 237.34318 705.25332 C
@c
F

@rax %Note: Object
287.71795 705.25332 335.14809 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
291.35112 705.25332 m
331.51493 705.25332 L
333.51817 705.25332 335.14809 706.88353 335.14809 708.88649 C
335.14809 720.30359 L
335.14809 722.30655 333.51817 723.93647 331.51493 723.93647 C
291.35112 723.93647 L
289.34816 723.93647 287.71795 722.30655 287.71795 720.30359 C
287.71795 708.88649 L
287.71795 706.88353 289.34816 705.25332 291.35112 705.25332 C
@c
F

@rax %Note: Object
341.48863 705.25332 388.91849 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
345.12151 705.25332 m
385.28561 705.25332 L
387.28857 705.25332 388.91849 706.88353 388.91849 708.88649 C
388.91849 720.30359 L
388.91849 722.30655 387.28857 723.93647 385.28561 723.93647 C
345.12151 723.93647 L
343.11855 723.93647 341.48863 722.30655 341.48863 720.30359 C
341.48863 708.88649 L
341.48863 706.88353 343.11855 705.25332 345.12151 705.25332 C
@c
F

@rax %Note: Object
394.89959 705.25332 442.32973 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
398.53276 705.25332 m
438.69657 705.25332 L
440.69981 705.25332 442.32973 706.88353 442.32973 708.88649 C
442.32973 720.30359 L
442.32973 722.30655 440.69981 723.93647 438.69657 723.93647 C
398.53276 723.93647 L
396.52980 723.93647 394.89959 722.30655 394.89959 720.30359 C
394.89959 708.88649 L
394.89959 706.88353 396.52980 705.25332 398.53276 705.25332 C
@c
F

@rax %Note: Object
448.90157 705.25332 496.33172 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
452.53474 705.25332 m
492.69855 705.25332 L
494.70180 705.25332 496.33172 706.88353 496.33172 708.88649 C
496.33172 720.30359 L
496.33172 722.30655 494.70180 723.93647 492.69855 723.93647 C
452.53474 723.93647 L
450.53178 723.93647 448.90157 722.30655 448.90157 720.30359 C
448.90157 708.88649 L
448.90157 706.88353 450.53178 705.25332 452.53474 705.25332 C
@c
F

@rax %Note: Object
502.46306 705.25332 549.89320 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
506.09622 705.25332 m
546.26003 705.25332 L
548.26328 705.25332 549.89320 706.88353 549.89320 708.88649 C
549.89320 720.30359 L
549.89320 722.30655 548.26328 723.93647 546.26003 723.93647 C
506.09622 723.93647 L
504.09326 723.93647 502.46306 722.30655 502.46306 720.30359 C
502.46306 708.88649 L
502.46306 706.88353 504.09326 705.25332 506.09622 705.25332 C
@c
F

@rax %Note: Object
556.25017 705.25332 603.68031 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
559.88220 705.25332 m
600.04715 705.25332 L
602.05039 705.25332 603.68031 706.88353 603.68031 708.88649 C
603.68031 720.30359 L
603.68031 722.30655 602.05039 723.93647 600.04715 723.93647 C
559.88334 723.93647 L
557.88038 723.93647 556.25017 722.30655 556.25017 720.30359 C
556.25017 708.88649 L
556.25017 706.88353 557.87924 705.25332 559.88220 705.25332 C
@c
F

@rax %Note: Object
609.69657 705.25332 657.12671 723.93647 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
613.32860 705.25332 m
653.49354 705.25332 L
655.49650 705.25332 657.12671 706.88353 657.12671 708.88649 C
657.12671 720.30359 L
657.12671 722.30655 655.49650 723.93647 653.49354 723.93647 C
613.32945 723.93647 L
611.32649 723.93647 609.69657 722.30655 609.69657 720.30359 C
609.69657 708.88649 L
609.69657 706.88353 611.32564 705.25332 613.32860 705.25332 C
@c
F

@rax %Note: Object
-115.65808 600.32098 -41.22510 645.86098 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-111.18898 600.32098 m
-45.69392 600.32098 L
-43.23005 600.32098 -41.22510 602.32592 -41.22510 604.79093 C
-41.22510 641.39187 L
-41.22510 643.85575 -43.23005 645.86098 -45.69392 645.86098 C
-111.18898 645.86098 L
-113.65313 645.86098 -115.65808 643.85575 -115.65808 641.39187 C
-115.65808 604.79093 L
-115.65808 602.32592 -113.65313 600.32098 -111.18898 600.32098 C
@c
F

@rax %Note: Object
609.67928 547.72866 657.45836 645.86069 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
623.29918 552.19861 m
623.29918 549.73389 625.30441 547.72866 627.76913 547.72866 C
652.98841 547.72866 L
655.45313 547.72866 657.45836 549.73389 657.45836 552.19776 C
657.45836 641.39187 L
657.45836 643.85575 655.45313 645.86069 652.98841 645.86069 C
614.14838 645.86069 L
611.68422 645.86069 609.67928 643.85575 609.67928 641.39187 C
609.67928 605.47861 L
609.67928 603.01474 611.68422 601.01065 614.14838 601.01065 C
618.72831 601.01065 L
621.24831 601.01065 623.29918 598.95978 623.29918 596.43865 C
623.29918 552.19861 L
@c
F

@rax %Note: Object
-115.12545 495.39288 -54.22139 541.11685 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-110.65635 541.11685 m
-113.12022 541.11685 -115.12545 539.11162 -115.12545 536.64775 C
-115.12545 499.86170 L
-115.12545 497.39783 -113.12022 495.39288 -110.65635 495.39288 C
-58.69134 495.39288 L
-56.22633 495.39288 -54.22139 497.39783 -54.22139 499.86170 C
-54.22139 536.64775 L
-54.22139 539.11162 -56.22633 541.11685 -58.69134 541.11685 C
-110.65635 541.11685 L
@c
F

@rax %Note: Object
-115.12573 547.72866 -27.36680 593.26866 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-27.36680 552.19776 m
-27.36680 588.80069 L
-27.36680 591.26372 -29.37175 593.26866 -31.83562 593.26866 C
-110.65663 593.26866 L
-113.12079 593.26866 -115.12573 591.26372 -115.12573 588.79984 C
-115.12573 552.19861 L
-115.12573 549.73389 -113.12079 547.72866 -110.65663 547.72866 C
-31.83562 547.72866 L
-29.37175 547.72866 -27.36680 549.73389 -27.36680 552.19776 C
@c
F

@rax %Note: Object
381.90529 443.62460 443.05625 489.16375 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
438.58743 489.16375 m
386.37524 489.16375 L
383.91024 489.16375 381.90529 487.15852 381.90529 484.69465 C
381.90529 448.09370 L
381.90529 445.62954 383.91024 443.62460 386.37524 443.62460 C
438.58743 443.62460 L
441.05131 443.62460 443.05625 445.62954 443.05625 448.09370 C
443.05625 484.69465 L
443.05625 487.15852 441.05131 489.16375 438.58743 489.16375 C
@c
F

@rax %Note: Object
46.29260 443.62460 107.34066 489.16375 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
102.87156 489.16375 m
50.76170 489.16375 L
48.29754 489.16375 46.29260 487.15852 46.29260 484.69465 C
46.29260 448.09370 L
46.29260 445.62954 48.29754 443.62460 50.76170 443.62460 C
102.87156 443.62460 L
105.33543 443.62460 107.34066 445.62954 107.34066 448.09370 C
107.34066 484.69465 L
107.34066 487.15852 105.33543 489.16375 102.87156 489.16375 C
@c
F

@rax %Note: Object
113.22283 443.62460 375.70677 489.16375 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
371.23682 489.16375 m
117.69279 489.16375 L
115.22778 489.16375 113.22283 487.15852 113.22283 484.69465 C
113.22283 448.09370 L
113.22283 445.62954 115.22778 443.62460 117.69279 443.62460 C
371.23682 443.62460 L
373.70183 443.62460 375.70677 445.62954 375.70677 448.09370 C
375.70677 484.69465 L
375.70677 487.15852 373.70183 489.16375 371.23682 489.16375 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
