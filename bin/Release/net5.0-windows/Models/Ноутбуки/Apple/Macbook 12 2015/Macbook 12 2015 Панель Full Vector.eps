%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -85 217 707 781 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: Macbook 12 2015 Панель Full V...
%%CreationDate: Thu May 30 17:33:21 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
-84.56967 225.42406 706.81748 780.20277 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
699.03439 501.31020 m
699.03439 498.21619 696.52545 495.70724 693.43143 495.70724 C
587.25553 495.70724 L
584.16151 495.70724 581.65228 498.21619 581.65228 501.31020 C
581.65228 538.09625 L
581.65228 541.19027 584.16151 543.69921 587.25553 543.69921 C
693.43143 543.69921 L
696.52545 543.69921 699.03439 541.19027 699.03439 538.09625 C
699.03439 501.31020 L
@c
698.75036 449.54107 m
698.75036 446.44706 696.24227 443.93811 693.14740 443.93811 C
654.30652 443.93811 L
651.21250 443.93811 648.70328 446.44706 648.70328 449.54107 C
648.70328 486.14315 L
648.70328 489.23717 651.21250 491.74611 654.30652 491.74611 C
693.14740 491.74611 L
696.24227 491.74611 698.75036 489.23717 698.75036 486.14315 C
698.75036 449.54107 L
@c
645.28753 449.54107 m
645.28753 446.44706 642.77943 443.93811 639.68428 443.93811 C
600.84340 443.93811 L
597.74854 443.93811 595.24044 446.44706 595.24044 449.54107 C
595.24044 486.14315 L
595.24044 489.23717 597.74854 491.74611 600.84340 491.74611 C
639.68428 491.74611 L
642.77943 491.74611 645.28753 489.23717 645.28753 486.14315 C
645.28753 449.54107 L
@c
591.71953 449.54107 m
591.71953 446.44706 589.21143 443.93811 586.11742 443.93811 C
547.27540 443.93811 L
544.18139 443.93811 541.67244 446.44706 541.67244 449.54107 C
541.67244 486.14315 L
541.67244 489.23717 544.18139 491.74611 547.27540 491.74611 C
586.11742 491.74611 L
589.21143 491.74611 591.71953 489.23717 591.71953 486.14315 C
591.71953 449.54107 L
@c
537.95254 449.54107 m
537.95254 446.44706 535.44444 443.93811 532.34929 443.93811 C
493.79443 443.93811 L
490.70041 443.93811 488.19146 446.44706 488.19146 449.54107 C
488.19146 486.14315 L
488.19146 489.23717 490.70041 491.74611 493.79443 491.74611 C
532.34929 491.74611 L
535.44444 491.74611 537.95254 489.23717 537.95254 486.14315 C
537.95254 449.54107 L
@c
484.34854 449.54107 m
484.34854 446.44706 481.84044 443.93811 478.74643 443.93811 C
426.53452 443.93811 L
423.43937 443.93811 420.93043 446.44706 420.93043 449.54107 C
420.93043 486.14315 L
420.93043 489.23717 423.43937 491.74611 426.53452 491.74611 C
478.74643 491.74611 L
481.84044 491.74611 484.34854 489.23717 484.34854 486.14315 C
484.34854 449.54107 L
@c
469.59534 241.44803 m
469.59534 237.85313 466.67027 234.92806 463.07650 234.92806 C
158.88841 234.92806 L
155.29436 234.92806 152.36929 237.85313 152.36929 241.44803 C
152.36929 427.95411 L
152.36929 431.54816 155.29436 434.47323 158.88841 434.47323 C
463.07650 434.47323 L
466.67027 434.47323 469.59534 431.54816 469.59534 427.95411 C
469.59534 241.44803 L
@c
152.24854 486.14315 m
152.24854 489.23717 154.75635 491.74611 157.85150 491.74611 C
411.39553 491.74611 L
414.49039 491.74611 416.99849 489.23717 416.99849 486.14315 C
416.99849 449.54107 L
416.99849 446.44706 414.49039 443.93811 411.39553 443.93811 C
157.85150 443.93811 L
154.75635 443.93811 152.24854 446.44706 152.24854 449.54107 C
152.24854 486.14315 L
@c
148.63351 449.54107 m
148.63351 446.44706 146.12428 443.93811 143.03027 443.93811 C
90.92041 443.93811 L
87.82639 443.93811 85.31745 446.44706 85.31745 449.54107 C
85.31745 486.14315 L
85.31745 489.23717 87.82639 491.74611 90.92041 491.74611 C
143.03027 491.74611 L
146.12428 491.74611 148.63351 489.23717 148.63351 486.14315 C
148.63351 449.54107 L
@c
81.52441 449.54107 m
81.52441 446.44706 79.01546 443.93811 75.92145 443.93811 C
37.08028 443.93811 L
33.98542 443.93811 31.47732 446.44706 31.47732 449.54107 C
31.47732 486.14315 L
31.47732 489.23717 33.98542 491.74611 37.08028 491.74611 C
75.92145 491.74611 L
79.01546 491.74611 81.52441 489.23717 81.52441 486.14315 C
81.52441 449.54107 L
@c
27.63553 449.54107 m
27.63553 446.44706 25.12630 443.93811 22.03228 443.93811 C
-16.80973 443.93811 L
-19.90346 443.93811 -22.41269 446.44706 -22.41269 449.54107 C
-22.41269 486.14315 L
-22.41269 489.23717 -19.90346 491.74611 -16.80973 491.74611 C
22.03228 491.74611 L
25.12630 491.74611 27.63553 489.23717 27.63553 486.14315 C
27.63553 449.54107 L
@c
-26.05351 449.54107 m
-26.05351 446.44706 -28.56274 443.93811 -31.65647 443.93811 C
-70.49764 443.93811 L
-73.59165 443.93811 -76.10060 446.44706 -76.10060 449.54107 C
-76.10060 486.14315 L
-76.10060 489.23717 -73.59165 491.74611 -70.49764 491.74611 C
-31.65647 491.74611 L
-28.56274 491.74611 -26.05351 489.23717 -26.05351 486.14315 C
-26.05351 449.54107 L
@c
-76.63266 606.23802 m
-76.63266 642.84009 L
-76.63266 645.93411 -74.12457 648.44220 -71.02970 648.44220 C
-5.53465 648.44220 L
-2.44063 648.44220 0.06746 645.93411 0.06746 642.84009 C
0.06746 606.23802 L
0.06746 603.14315 -2.44063 600.63506 -5.53465 600.63506 C
-71.02970 600.63506 L
-74.12457 600.63506 -76.63266 603.14315 -76.63266 606.23802 C
@c
-76.63266 695.05427 m
-76.63266 698.14800 -74.12457 700.65723 -71.02970 700.65723 C
-32.18854 700.65723 L
-29.09452 700.65723 -26.58557 698.14800 -26.58557 695.05427 C
-26.58557 658.45219 L
-26.58557 655.35817 -29.09452 652.85008 -32.18854 652.85008 C
-71.02970 652.85008 L
-74.12457 652.85008 -76.63266 655.35817 -76.63266 658.45219 C
-76.63266 695.05427 L
@c
-76.63266 721.75124 m
-76.63266 724.38321 -74.49874 726.51827 -71.86649 726.51827 C
-4.65647 726.51827 L
-2.02450 726.51827 0.10942 724.38321 0.10942 721.75124 C
0.10942 710.33414 L
0.10942 707.70217 -2.02450 705.56712 -4.65647 705.56712 C
-71.86649 705.56712 L
-74.49874 705.56712 -76.63266 707.70217 -76.63266 710.33414 C
-76.63266 721.75124 L
@c
21.76243 700.65723 m
24.85644 700.65723 27.36539 698.14800 27.36539 695.05427 C
27.36539 658.45219 L
27.36539 655.35817 24.85644 652.85008 21.76243 652.85008 C
-17.07959 652.85008 L
-20.17361 652.85008 -22.68255 655.35817 -22.68255 658.45219 C
-22.68255 695.05427 L
-22.68255 698.14800 -20.17361 700.65723 -17.07959 700.65723 C
21.76243 700.65723 L
@c
3.91946 766.08624 m
3.91946 766.55622 4.29931 766.93720 4.76929 766.93720 C
616.91131 766.93720 L
617.38129 766.93720 617.76227 766.55622 617.76227 766.08624 C
617.76227 738.87307 L
617.76227 738.40422 617.38129 738.02324 616.91131 738.02324 C
4.76929 738.02324 L
4.29931 738.02324 3.91946 738.40422 3.91946 738.87307 C
3.91946 766.08624 L
@c
640.20529 726.51827 m
642.83839 726.51827 644.97231 724.38321 644.97231 721.75124 C
644.97231 710.33414 L
644.97231 707.70217 642.83839 705.56712 640.20529 705.56712 C
600.04148 705.56712 L
597.40951 705.56712 595.27531 707.70217 595.27531 710.33414 C
595.27531 721.75124 L
595.27531 724.38321 597.40951 726.51827 600.04148 726.51827 C
640.20529 726.51827 L
@c
648.72142 721.75124 m
648.72142 724.38321 650.85534 726.51827 653.48844 726.51827 C
693.65254 726.51827 L
696.28450 726.51827 698.41843 724.38321 698.41843 721.75124 C
698.41843 710.33414 L
698.41843 707.70217 696.28450 705.56712 693.65254 705.56712 C
653.48731 705.56712 L
650.85534 705.56712 648.72142 707.70217 648.72142 710.33414 C
648.72142 721.75124 L
@c
693.14740 652.85008 m
627.22148 652.85008 L
624.12746 652.85008 621.61937 655.35817 621.61937 658.45304 C
621.61937 695.05427 L
621.61937 698.14800 624.12746 700.65723 627.22148 700.65723 C
693.14740 700.65723 L
696.24227 700.65723 698.75036 698.14800 698.75036 695.05427 C
698.75036 658.45219 L
698.75036 655.35817 696.24227 652.85008 693.14740 652.85008 C
@c
608.58028 590.24806 m
608.58028 593.34208 611.08838 595.85102 614.18239 595.85102 C
653.02441 595.85102 L
656.11843 595.85102 658.62737 593.34208 658.62737 590.24806 C
658.62737 553.64627 L
658.62737 550.55225 656.11843 548.04302 653.02441 548.04302 C
614.18239 548.04302 L
611.08838 548.04302 608.58028 550.55225 608.58028 553.64627 C
608.58028 590.24806 L
@c
600.85729 600.63506 m
597.76243 600.63506 595.25433 603.14315 595.25433 606.23802 C
595.25433 642.84009 L
595.25433 645.93411 597.76243 648.44220 600.85729 648.44220 C
639.69846 648.44220 L
642.79247 648.44220 645.30142 645.93411 645.30142 642.84009 C
645.30142 606.23802 L
645.30142 603.14315 642.79247 600.63506 639.69846 600.63506 C
600.85729 600.63506 L
@c
560.62828 548.04302 m
557.53427 548.04302 555.02532 550.55225 555.02532 553.64627 C
555.02532 590.24806 L
555.02532 593.34208 557.53427 595.85102 560.62828 595.85102 C
599.46945 595.85102 L
602.56346 595.85102 605.07241 593.34208 605.07241 590.24806 C
605.07241 553.64627 L
605.07241 550.55225 602.56346 548.04302 599.46945 548.04302 C
560.62828 548.04302 L
@c
528.50353 538.09625 m
528.50353 541.19027 531.01134 543.69921 534.10535 543.69921 C
572.94737 543.69921 L
576.04139 543.69921 578.55033 541.19027 578.55033 538.09625 C
578.55033 501.31020 L
578.55033 498.21619 576.04139 495.70724 572.94737 495.70724 C
534.10535 495.70724 L
531.01134 495.70724 528.50353 498.21619 528.50353 501.31020 C
528.50353 538.09625 L
@c
506.97043 548.04302 m
503.87641 548.04302 501.36746 550.55225 501.36746 553.64627 C
501.36746 590.24806 L
501.36746 593.34208 503.87641 595.85102 506.97043 595.85102 C
545.81131 595.85102 L
548.90646 595.85102 551.41427 593.34208 551.41427 590.24806 C
551.41427 553.64627 L
551.41427 550.55225 548.90646 548.04302 545.81131 548.04302 C
506.97043 548.04302 L
@c
474.50353 538.09625 m
474.50353 541.19027 477.01134 543.69921 480.10535 543.69921 C
518.94737 543.69921 L
522.04139 543.69921 524.55033 541.19027 524.55033 538.09625 C
524.55033 501.31020 L
524.55033 498.21619 522.04139 495.70724 518.94737 495.70724 C
480.10535 495.70724 L
477.01134 495.70724 474.50353 498.21619 474.50353 501.31020 C
474.50353 538.09625 L
@c
452.74649 548.04302 m
449.65247 548.04302 447.14353 550.55225 447.14353 553.64627 C
447.14353 590.24806 L
447.14353 593.34208 449.65247 595.85102 452.74649 595.85102 C
491.58737 595.85102 L
494.68139 595.85102 497.19033 593.34208 497.19033 590.24806 C
497.19033 553.64627 L
497.19033 550.55225 494.68139 548.04302 491.58737 548.04302 C
452.74649 548.04302 L
@c
420.79039 538.09625 m
420.79039 541.19027 423.29934 543.69921 426.39335 543.69921 C
465.23452 543.69921 L
468.32854 543.69921 470.83748 541.19027 470.83748 538.09625 C
470.83748 501.31020 L
470.83748 498.21619 468.32854 495.70724 465.23452 495.70724 C
426.39335 495.70724 L
423.29934 495.70724 420.79039 498.21619 420.79039 501.31020 C
420.79039 538.09625 L
@c
399.14249 548.04302 m
396.04847 548.04302 393.53953 550.55225 393.53953 553.64627 C
393.53953 590.24806 L
393.53953 593.34208 396.04847 595.85102 399.14249 595.85102 C
437.98450 595.85102 L
441.07852 595.85102 443.58746 593.34208 443.58746 590.24806 C
443.58746 553.64627 L
443.58746 550.55225 441.07852 548.04302 437.98450 548.04302 C
399.14249 548.04302 L
@c
366.88252 538.09625 m
366.88252 541.19027 369.39033 543.69921 372.48548 543.69921 C
411.32636 543.69921 L
414.42151 543.69921 416.92932 541.19027 416.92932 538.09625 C
416.92932 501.31020 L
416.92932 498.21619 414.42151 495.70724 411.32636 495.70724 C
372.48548 495.70724 L
369.39033 495.70724 366.88252 498.21619 366.88252 501.31020 C
366.88252 538.09625 L
@c
345.58044 548.04302 m
342.48643 548.04302 339.97748 550.55225 339.97748 553.64627 C
339.97748 590.24806 L
339.97748 593.34208 342.48643 595.85102 345.58044 595.85102 C
384.42132 595.85102 L
387.51534 595.85102 390.02428 593.34208 390.02428 590.24806 C
390.02428 553.64627 L
390.02428 550.55225 387.51534 548.04302 384.42132 548.04302 C
345.58044 548.04302 L
@c
313.26633 538.09625 m
313.26633 541.19027 315.77528 543.69921 318.86929 543.69921 C
357.71046 543.69921 L
360.80532 543.69921 363.31342 541.19027 363.31342 538.09625 C
363.31342 501.31020 L
363.31342 498.21619 360.80532 495.70724 357.71046 495.70724 C
318.86929 495.70724 L
315.77528 495.70724 313.26633 498.21619 313.26633 501.31020 C
313.26633 538.09625 L
@c
292.14935 548.04302 m
289.05534 548.04302 286.54639 550.55225 286.54639 553.64627 C
286.54639 590.24806 L
286.54639 593.34208 289.05534 595.85102 292.14935 595.85102 C
330.99137 595.85102 L
334.08539 595.85102 336.59433 593.34208 336.59433 590.24806 C
336.59433 553.64627 L
336.59433 550.55225 334.08539 548.04302 330.99137 548.04302 C
292.14935 548.04302 L
@c
259.68132 538.09625 m
259.68132 541.19027 262.19027 543.69921 265.28428 543.69921 C
304.12545 543.69921 L
307.22031 543.69921 309.72841 541.19027 309.72841 538.09625 C
309.72841 501.31020 L
309.72841 498.21619 307.22031 495.70724 304.12545 495.70724 C
265.28428 495.70724 L
262.19027 495.70724 259.68132 498.21619 259.68132 501.31020 C
259.68132 538.09625 L
@c
238.45351 548.04302 m
235.35950 548.04302 232.85027 550.55225 232.85027 553.64627 C
232.85027 590.24806 L
232.85027 593.34208 235.35950 595.85102 238.45351 595.85102 C
277.29439 595.85102 L
280.38841 595.85102 282.89735 593.34208 282.89735 590.24806 C
282.89735 553.64627 L
282.89735 550.55225 280.38841 548.04302 277.29439 548.04302 C
238.45351 548.04302 L
@c
206.15046 538.09625 m
206.15046 541.19027 208.65940 543.69921 211.75342 543.69921 C
250.59430 543.69921 L
253.68831 543.69921 256.19726 541.19027 256.19726 538.09625 C
256.19726 501.31020 L
256.19726 498.21619 253.68831 495.70724 250.59430 495.70724 C
211.75342 495.70724 L
208.65940 495.70724 206.15046 498.21619 206.15046 501.31020 C
206.15046 538.09625 L
@c
184.94050 548.04302 m
181.84649 548.04302 179.33726 550.55225 179.33726 553.64627 C
179.33726 590.24806 L
179.33726 593.34208 181.84649 595.85102 184.94050 595.85102 C
223.78139 595.85102 L
226.87540 595.85102 229.38435 593.34208 229.38435 590.24806 C
229.38435 553.64627 L
229.38435 550.55225 226.87540 548.04302 223.78139 548.04302 C
184.94050 548.04302 L
@c
152.67231 538.09625 m
152.67231 541.19027 155.18041 543.69921 158.27528 543.69921 C
197.11644 543.69921 L
200.21046 543.69921 202.71940 541.19027 202.71940 538.09625 C
202.71940 501.31020 L
202.71940 498.21619 200.21046 495.70724 197.11644 495.70724 C
158.27528 495.70724 L
155.18041 495.70724 152.67231 498.21619 152.67231 501.31020 C
152.67231 538.09625 L
@c
131.06551 548.04302 m
127.97150 548.04302 125.46227 550.55225 125.46227 553.64627 C
125.46227 590.24806 L
125.46227 593.34208 127.97150 595.85102 131.06551 595.85102 C
169.90753 595.85102 L
173.00126 595.85102 175.50935 593.34208 175.50935 590.24806 C
175.50935 553.64627 L
175.50935 550.55225 173.00126 548.04302 169.90753 548.04302 C
131.06551 548.04302 L
@c
98.51443 538.09625 m
98.51443 541.19027 101.02337 543.69921 104.11739 543.69921 C
142.95827 543.69921 L
146.05342 543.69921 148.56151 541.19027 148.56151 538.09625 C
148.56151 501.31020 L
148.56151 498.21619 146.05342 495.70724 142.95827 495.70724 C
104.11739 495.70724 L
101.02337 495.70724 98.51443 498.21619 98.51443 501.31020 C
98.51443 538.09625 L
@c
77.09329 548.04302 m
73.99928 548.04302 71.49033 550.55225 71.49033 553.64627 C
71.49033 590.24806 L
71.49033 593.34208 73.99928 595.85102 77.09329 595.85102 C
115.93446 595.85102 L
119.02932 595.85102 121.53742 593.34208 121.53742 590.24806 C
121.53742 553.64627 L
121.53742 550.55225 119.02932 548.04302 115.93446 548.04302 C
77.09329 548.04302 L
@c
44.76841 538.09625 m
44.76841 541.19027 47.27650 543.69921 50.37137 543.69921 C
89.21254 543.69921 L
92.30627 543.69921 94.81550 541.19027 94.81550 538.09625 C
94.81550 501.31020 L
94.81550 498.21619 92.30627 495.70724 89.21254 495.70724 C
50.37137 495.70724 L
47.27650 495.70724 44.76841 498.21619 44.76841 501.31020 C
44.76841 538.09625 L
@c
23.11739 548.04302 m
20.02337 548.04302 17.51443 550.55225 17.51443 553.64627 C
17.51443 590.24806 L
17.51443 593.34208 20.02337 595.85102 23.11739 595.85102 C
61.95827 595.85102 L
65.05342 595.85102 67.56151 593.34208 67.56151 590.24806 C
67.56151 553.64627 L
67.56151 550.55225 65.05342 548.04302 61.95827 548.04302 C
23.11739 548.04302 L
@c
-8.94274 538.09625 m
-8.94274 541.19027 -6.43465 543.69921 -3.33950 543.69921 C
35.50139 543.69921 L
38.59654 543.69921 41.10435 541.19027 41.10435 538.09625 C
41.10435 501.31020 L
41.10435 498.21619 38.59654 495.70724 35.50139 495.70724 C
-3.33950 495.70724 L
-6.43465 495.70724 -8.94274 498.21619 -8.94274 501.31020 C
-8.94274 538.09625 L
@c
48.40243 648.44220 m
51.49729 648.44220 54.00539 645.93411 54.00539 642.84009 C
54.00539 606.23802 L
54.00539 603.14315 51.49729 600.63506 48.40243 600.63506 C
9.56126 600.63506 L
6.46753 600.63506 3.95830 603.14315 3.95830 606.23802 C
3.95830 642.84009 L
3.95830 645.93411 6.46753 648.44220 9.56126 648.44220 C
48.40243 648.44220 L
@c
107.71427 710.33414 m
107.71427 707.70217 105.58035 705.56712 102.94753 705.56712 C
62.78343 705.56712 L
60.15033 705.56712 58.01641 707.70217 58.01641 710.33414 C
58.01641 721.75124 L
58.01641 724.38321 60.15033 726.51827 62.78343 726.51827 C
102.94753 726.51827 L
105.57950 726.51827 107.71427 724.38321 107.71427 721.75124 C
107.71427 710.33414 L
@c
108.00539 642.84009 m
108.00539 606.23802 L
108.00539 603.14315 105.49729 600.63506 102.40243 600.63506 C
63.56126 600.63506 L
60.46753 600.63506 57.95830 603.14315 57.95830 606.23802 C
57.95830 642.84009 L
57.95830 645.93411 60.46753 648.44220 63.56126 648.44220 C
102.40243 648.44220 L
105.49729 648.44220 108.00539 645.93411 108.00539 642.84009 C
@c
129.18132 700.65723 m
132.27534 700.65723 134.78428 698.14800 134.78428 695.05427 C
134.78428 658.45219 L
134.78428 655.35817 132.27534 652.85008 129.18132 652.85008 C
90.34044 652.85008 L
87.24529 652.85008 84.73748 655.35817 84.73748 658.45219 C
84.73748 695.05427 L
84.73748 698.14800 87.24529 700.65723 90.34044 700.65723 C
129.18132 700.65723 L
@c
161.36929 710.33414 m
161.36929 707.70217 159.23537 705.56712 156.60340 705.56712 C
116.43846 705.56712 L
113.80649 705.56712 111.67228 707.70217 111.67228 710.33414 C
111.67228 721.75124 L
111.67228 724.38321 113.80649 726.51827 116.43931 726.51827 C
156.60340 726.51827 L
159.23537 726.51827 161.36929 724.38321 161.36929 721.75124 C
161.36929 710.33414 L
@c
161.72249 642.84009 m
161.72249 606.23802 L
161.72249 603.14315 159.21326 600.63506 156.11953 600.63506 C
117.27836 600.63506 L
114.18350 600.63506 111.67540 603.14315 111.67540 606.23802 C
111.67540 642.84009 L
111.67540 645.93411 114.18350 648.44220 117.27836 648.44220 C
156.11953 648.44220 L
159.21326 648.44220 161.72249 645.93411 161.72249 642.84009 C
@c
182.99027 700.65723 m
186.08428 700.65723 188.59351 698.14800 188.59351 695.05427 C
188.59351 658.45219 L
188.59351 655.35817 186.08428 652.85008 182.99027 652.85008 C
144.14939 652.85008 L
141.05537 652.85008 138.54643 655.35817 138.54643 658.45219 C
138.54643 695.05427 L
138.54643 698.14800 141.05537 700.65723 144.14939 700.65723 C
182.99027 700.65723 L
@c
215.41946 710.33414 m
215.41946 707.70217 213.28441 705.56712 210.65244 705.56712 C
170.48835 705.56712 L
167.85553 705.56712 165.72246 707.70217 165.72246 710.33414 C
165.72246 721.75124 L
165.72246 724.38321 167.85553 726.51827 170.48835 726.51827 C
210.65244 726.51827 L
213.28441 726.51827 215.41946 724.38321 215.41946 721.75124 C
215.41946 710.33414 L
@c
215.72249 642.84009 m
215.72249 606.23802 L
215.72249 603.14315 213.21326 600.63506 210.11953 600.63506 C
171.27836 600.63506 L
168.18350 600.63506 165.67540 603.14315 165.67540 606.23802 C
165.67540 642.84009 L
165.67540 645.93411 168.18350 648.44220 171.27836 648.44220 C
210.11953 648.44220 L
213.21326 648.44220 215.72249 645.93411 215.72249 642.84009 C
@c
236.79950 700.65723 m
239.89351 700.65723 242.40246 698.14800 242.40246 695.05427 C
242.40246 658.45219 L
242.40246 655.35817 239.89351 652.85008 236.79950 652.85008 C
197.95833 652.85008 L
194.86431 652.85008 192.35537 655.35817 192.35537 658.45219 C
192.35537 695.05427 L
192.35537 698.14800 194.86431 700.65723 197.95833 700.65723 C
236.79950 700.65723 L
@c
269.18447 710.33414 m
269.18447 707.70217 267.05140 705.56712 264.41830 705.56712 C
224.25449 705.56712 L
221.62139 705.56712 219.48746 707.70217 219.48746 710.33414 C
219.48746 721.75124 L
219.48746 724.38321 221.62139 726.51827 224.25449 726.51827 C
264.41830 726.51827 L
267.05140 726.51827 269.18447 724.38321 269.18447 721.75124 C
269.18447 710.33414 L
@c
269.56346 642.84009 m
269.56346 606.23802 L
269.56346 603.14315 267.05537 600.63506 263.96050 600.63506 C
225.11934 600.63506 L
222.02532 600.63506 219.51638 603.14315 219.51638 606.23802 C
219.51638 642.84009 L
219.51638 645.93411 222.02532 648.44220 225.11934 648.44220 C
263.96050 648.44220 L
267.05537 648.44220 269.56346 645.93411 269.56346 642.84009 C
@c
290.45537 700.65723 m
293.55052 700.65723 296.05833 698.14800 296.05833 695.05427 C
296.05833 658.45219 L
296.05833 655.35817 293.55052 652.85008 290.45537 652.85008 C
251.61534 652.85008 L
248.52047 652.85008 246.01238 655.35817 246.01238 658.45219 C
246.01238 695.05427 L
246.01238 698.14800 248.52047 700.65723 251.61534 700.65723 C
290.45537 700.65723 L
@c
322.43244 710.33414 m
322.43244 707.70217 320.29937 705.56712 317.66627 705.56712 C
277.50246 705.56712 L
274.86935 705.56712 272.73543 707.70217 272.73543 710.33414 C
272.73543 721.75124 L
272.73543 724.38321 274.86935 726.51827 277.50246 726.51827 C
317.66627 726.51827 L
320.29937 726.51827 322.43244 724.38321 322.43244 721.75124 C
322.43244 710.33414 L
@c
323.43846 642.84009 m
323.43846 606.23802 L
323.43846 603.14315 320.93036 600.63506 317.83550 600.63506 C
278.99433 600.63506 L
275.90031 600.63506 273.39137 603.14315 273.39137 606.23802 C
273.39137 642.84009 L
273.39137 645.93411 275.90031 648.44220 278.99433 648.44220 C
317.83550 648.44220 L
320.93036 648.44220 323.43846 645.93411 323.43846 642.84009 C
@c
344.18551 700.65723 m
347.27953 700.65723 349.78847 698.14800 349.78847 695.05427 C
349.78847 658.45219 L
349.78847 655.35817 347.27953 652.85008 344.18551 652.85008 C
305.34435 652.85008 L
302.24948 652.85008 299.74139 655.35817 299.74139 658.45219 C
299.74139 695.05427 L
299.74139 698.14800 302.24948 700.65723 305.34435 700.65723 C
344.18551 700.65723 L
@c
376.44038 710.33414 m
376.44038 707.70217 374.30646 705.56712 371.67449 705.56712 C
331.51039 705.56712 L
328.87729 705.56712 326.74337 707.70217 326.74337 710.33414 C
326.74337 721.75124 L
326.74337 724.38321 328.87729 726.51827 331.51039 726.51827 C
371.67449 726.51827 L
374.30646 726.51827 376.44038 724.38321 376.44038 721.75124 C
376.44038 710.33414 L
@c
376.89931 642.84009 m
376.89931 606.23802 L
376.89931 603.14315 374.39036 600.63506 371.29635 600.63506 C
332.45433 600.63506 L
329.36031 600.63506 326.85137 603.14315 326.85137 606.23802 C
326.85137 642.84009 L
326.85137 645.93411 329.36031 648.44220 332.45433 648.44220 C
371.29635 648.44220 L
374.39036 648.44220 376.89931 645.93411 376.89931 642.84009 C
@c
397.88844 700.65723 m
400.98331 700.65723 403.49254 698.14800 403.49254 695.05427 C
403.49254 658.45219 L
403.49254 655.35817 400.98331 652.85008 397.88844 652.85008 C
359.04841 652.85008 L
355.95326 652.85008 353.44545 655.35817 353.44545 658.45219 C
353.44545 695.05427 L
353.44545 698.14800 355.95326 700.65723 359.04841 700.65723 C
397.88844 700.65723 L
@c
430.21134 710.33414 m
430.21134 707.70217 428.07628 705.56712 425.44431 705.56712 C
385.28050 705.56712 L
382.64740 705.56712 380.51348 707.70217 380.51348 710.33414 C
380.51348 721.75124 L
380.51348 724.38321 382.64740 726.51827 385.28050 726.51827 C
425.44431 726.51827 L
428.07628 726.51827 430.21134 724.38321 430.21134 721.75124 C
430.21134 710.33414 L
@c
430.82249 642.84009 m
430.82249 606.23802 L
430.82249 603.14315 428.31439 600.63506 425.21953 600.63506 C
386.37836 600.63506 L
383.28435 600.63506 380.77540 603.14315 380.77540 606.23802 C
380.77540 642.84009 L
380.77540 645.93411 383.28435 648.44220 386.37836 648.44220 C
425.21953 648.44220 L
428.31439 648.44220 430.82249 645.93411 430.82249 642.84009 C
@c
451.58542 700.65723 m
454.67943 700.65723 457.18838 698.14800 457.18838 695.05427 C
457.18838 658.45219 L
457.18838 655.35817 454.67943 652.85008 451.58542 652.85008 C
412.74340 652.85008 L
409.64939 652.85008 407.14044 655.35817 407.14044 658.45219 C
407.14044 695.05427 L
407.14044 698.14800 409.64939 700.65723 412.74340 700.65723 C
451.58542 700.65723 L
@c
483.62230 710.33414 m
483.62230 707.70217 481.48838 705.56712 478.85528 705.56712 C
438.69146 705.56712 L
436.05950 705.56712 433.92529 707.70217 433.92529 710.33414 C
433.92529 721.75124 L
433.92529 724.38321 436.05950 726.51827 438.69146 726.51827 C
478.85528 726.51827 L
481.48838 726.51827 483.62230 724.38321 483.62230 721.75124 C
483.62230 710.33414 L
@c
483.81931 642.84009 m
483.81931 606.23802 L
483.81931 603.14315 481.31036 600.63506 478.21635 600.63506 C
439.37433 600.63506 L
436.28031 600.63506 433.77250 603.14315 433.77250 606.23802 C
433.77250 642.84009 L
433.77250 645.93411 436.28031 648.44220 439.37433 648.44220 C
478.21635 648.44220 L
481.31036 648.44220 483.81931 645.93411 483.81931 642.84009 C
@c
505.55140 700.65723 m
508.64627 700.65723 511.15436 698.14800 511.15436 695.05427 C
511.15436 658.45219 L
511.15436 655.35817 508.64627 652.85008 505.55140 652.85008 C
466.71052 652.85008 L
463.61650 652.85008 461.10728 655.35817 461.10728 658.45219 C
461.10728 695.05427 L
461.10728 698.14800 463.61650 700.65723 466.71052 700.65723 C
505.55140 700.65723 L
@c
537.62343 710.33414 m
537.62343 707.70217 535.49036 705.56712 532.85726 705.56712 C
492.69345 705.56712 L
490.06035 705.56712 487.92643 707.70217 487.92643 710.33414 C
487.92643 721.75124 L
487.92643 724.38321 490.06035 726.51827 492.69345 726.51827 C
532.85726 726.51827 L
535.49036 726.51827 537.62343 724.38321 537.62343 721.75124 C
537.62343 710.33414 L
@c
537.96132 642.84009 m
537.96132 606.23802 L
537.96132 603.14315 535.45351 600.63506 532.35950 600.63506 C
493.51748 600.63506 L
490.42346 600.63506 487.91452 603.14315 487.91452 606.23802 C
487.91452 642.84009 L
487.91452 645.93411 490.42346 648.44220 493.51748 648.44220 C
532.35950 648.44220 L
535.45351 648.44220 537.96132 645.93411 537.96132 642.84009 C
@c
559.07235 700.65723 m
562.16636 700.65723 564.67446 698.14800 564.67446 695.05427 C
564.67446 658.45219 L
564.67446 655.35817 562.16636 652.85008 559.07235 652.85008 C
520.23033 652.85008 L
517.13631 652.85008 514.62737 655.35817 514.62737 658.45219 C
514.62737 695.05427 L
514.62737 698.14800 517.13631 700.65723 520.23033 700.65723 C
559.07235 700.65723 L
@c
591.18548 710.33414 m
591.18548 707.70217 589.05128 705.56712 586.41931 705.56712 C
546.25550 705.56712 L
543.62239 705.56712 541.48847 707.70217 541.48847 710.33414 C
541.48847 721.75124 L
541.48847 724.38321 543.62239 726.51827 546.25550 726.51827 C
586.41931 726.51827 L
589.05128 726.51827 591.18548 724.38321 591.18548 721.75124 C
591.18548 710.33414 L
@c
591.85134 642.84009 m
591.85134 606.23802 L
591.85134 603.14315 589.34353 600.63506 586.24838 600.63506 C
547.40750 600.63506 L
544.31348 600.63506 541.80539 603.14315 541.80539 606.23802 C
541.80539 642.84009 L
541.80539 645.93411 544.31348 648.44220 547.40750 648.44220 C
586.24838 648.44220 L
589.34353 648.44220 591.85134 645.93411 591.85134 642.84009 C
@c
573.94743 652.85008 m
570.85342 652.85008 568.34447 655.35817 568.34447 658.45219 C
568.34447 695.05427 L
568.34447 698.14800 570.85342 700.65723 573.94743 700.65723 C
612.78831 700.65723 L
615.88346 700.65723 618.39128 698.14800 618.39128 695.05427 C
618.39128 658.45219 L
618.39128 655.35817 615.88346 652.85008 612.78831 652.85008 C
573.94743 652.85008 L
@c
9.17830 705.56712 m
6.54633 705.56712 4.41241 707.70217 4.41241 710.33414 C
4.41241 721.75124 L
4.41241 724.38321 6.54633 726.51827 9.17830 726.51827 C
49.34353 726.51827 L
51.97550 726.51827 54.10942 724.38321 54.10942 721.75124 C
54.10942 710.33414 L
54.10942 707.70217 51.97550 705.56712 49.34353 705.56712 C
9.17830 705.56712 L
@c
30.82450 695.05427 m
30.82450 698.14800 33.33231 700.65723 36.42746 700.65723 C
75.26835 700.65723 L
78.36236 700.65723 80.87046 698.14800 80.87046 695.05427 C
80.87046 658.45219 L
80.87046 655.35817 78.36236 652.85008 75.26835 652.85008 C
36.42746 652.85008 L
33.33231 652.85008 30.82450 655.35817 30.82450 658.45219 C
30.82450 695.05427 L
@c
-12.92854 538.09625 m
-12.92854 501.31020 L
-12.92854 498.21619 -15.43748 495.70724 -18.53150 495.70724 C
-70.49764 495.70724 L
-73.59165 495.70724 -76.10060 498.21619 -76.10060 501.31020 C
-76.10060 538.09625 L
-76.10060 541.19027 -73.59165 543.69921 -70.49764 543.69921 C
-18.53150 543.69921 L
-15.43748 543.69921 -12.92854 541.19027 -12.92854 538.09625 C
@c
-70.49764 548.04302 m
-73.59165 548.04302 -76.10060 550.55225 -76.10060 553.64627 C
-76.10060 590.24806 L
-76.10060 593.34208 -73.59165 595.85102 -70.49764 595.85102 C
8.32337 595.85102 L
11.41739 595.85102 13.92633 593.34208 13.92633 590.24806 C
13.92633 553.64627 L
13.92633 550.55225 11.41739 548.04302 8.32337 548.04302 C
-70.49764 548.04302 L
@c
658.88731 601.32416 m
654.30652 601.32416 L
651.21250 601.32416 648.70328 603.83225 648.70328 606.92712 C
648.70328 642.84009 L
648.70328 645.93411 651.21250 648.44220 654.30652 648.44220 C
667.64438 648.44220 L
693.14740 648.44220 L
696.24227 648.44220 698.75036 645.93411 698.75036 642.84009 C
698.75036 607.29506 L
698.75036 553.64627 L
698.75036 550.55225 696.24227 548.04302 693.14740 548.04302 C
667.92728 548.04302 L
664.83326 548.04302 662.32431 550.55225 662.32431 553.64627 C
662.32431 597.88715 L
662.32431 599.78523 660.78539 601.32416 658.88731 601.32416 C
@c
706.81748 514.40627 m
706.67235 738.71717 L
706.67235 739.97802 706.67943 740.96816 706.68652 741.96510 C
706.69247 742.97509 706.69928 743.99216 706.69928 745.01405 C
706.69928 754.46816 705.58441 763.45512 699.03638 770.70416 C
693.91928 776.36806 686.45650 779.95020 674.94444 780.15005 C
670.08444 780.23509 665.13146 780.19909 660.34233 780.16507 C
657.70639 780.14608 655.07329 780.12709 652.44047 780.12709 C
618.25833 780.12709 L
617.94539 780.12709 617.69140 779.87310 617.69140 779.56016 C
617.69140 773.96627 L
617.69140 773.49713 617.31043 773.11616 616.84129 773.11616 C
5.12334 773.11616 L
4.65449 773.11616 4.27351 773.49713 4.27351 773.96627 C
4.27351 779.56016 L
4.27351 779.87310 4.01953 780.12709 3.70630 780.12709 C
-30.19153 780.12709 L
-32.82463 780.12709 -35.45858 780.14608 -38.09367 780.16507 C
-42.88252 780.19909 -47.83663 780.23509 -52.69550 780.15005 C
-64.20869 779.95020 -71.67146 776.36806 -76.78857 770.70416 C
-83.33660 763.45512 -84.45061 754.46816 -84.45061 745.01405 C
-84.45061 743.99216 -84.44466 742.97509 -84.43871 741.96510 C
-84.43162 740.96816 -84.42454 739.97802 -84.42454 738.71717 C
-84.56967 515.73912 L
-84.14050 280.88702 L
-84.14050 278.74403 -84.14362 258.57411 -84.14362 258.57411 C
-84.14362 250.52712 -82.77364 241.25017 -76.50454 234.31209 C
-69.77849 226.86718 -60.18661 226.25518 -52.08860 226.06016 C
-48.70148 225.97824 -37.41959 225.73701 -35.25562 225.73701 C
235.86350 225.42406 L
235.95335 225.42406 236.02932 225.47225 236.08630 225.54113 C
237.91635 227.77313 242.91553 229.66611 245.64331 229.66611 C
375.75439 229.66611 L
378.48246 229.66611 383.19732 227.77313 385.02737 225.54113 C
385.08435 225.47225 385.16031 225.42406 385.25131 225.42406 C
657.50343 225.73701 L
659.66740 225.73701 670.95043 225.97824 674.33641 226.06016 C
682.43528 226.25518 692.02743 226.86718 698.75348 234.31209 C
705.02145 241.25017 706.39228 250.52712 706.39228 258.57411 C
706.39228 258.57411 706.38945 278.74403 706.38945 280.88702 C
706.81748 514.40627 L
@c
F

@rax %Note: Object
153.21997 235.77874 468.74494 433.62255 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
463.07594 433.62255 m
158.88898 433.62255 L
155.76293 433.62255 153.21997 431.07959 153.21997 427.95354 C
153.21997 241.44775 L
153.21997 238.32170 155.76293 235.77874 158.88898 235.77874 C
463.07594 235.77874 L
466.20198 235.77874 468.74494 238.32170 468.74494 241.44775 C
468.74494 427.95354 L
468.74494 431.07959 466.20198 433.62255 463.07594 433.62255 C
@c
F

@rax %Note: Object
649.83657 445.07197 697.61679 490.61197 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
693.14769 490.61197 m
654.30680 490.61197 L
651.84180 490.61197 649.83657 488.60702 649.83657 486.14287 C
649.83657 449.54192 L
649.83657 447.07691 651.84180 445.07197 654.30680 445.07197 C
693.14769 445.07197 L
695.61156 445.07197 697.61679 447.07691 697.61679 449.54192 C
697.61679 486.14287 L
697.61679 488.60702 695.61156 490.61197 693.14769 490.61197 C
@c
F

@rax %Note: Object
596.37373 445.07197 644.15367 490.61197 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
639.68485 490.61197 m
600.84283 490.61197 L
598.37868 490.61197 596.37373 488.60702 596.37373 486.14287 C
596.37373 449.54192 L
596.37373 447.07691 598.37868 445.07197 600.84283 445.07197 C
639.68485 445.07197 L
642.14872 445.07197 644.15367 447.07691 644.15367 449.54192 C
644.15367 486.14287 L
644.15367 488.60702 642.14872 490.61197 639.68485 490.61197 C
@c
F

@rax %Note: Object
542.80630 445.07197 590.58652 490.61197 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
586.11628 490.61197 m
547.27540 490.61197 L
544.81153 490.61197 542.80630 488.60702 542.80630 486.14287 C
542.80630 449.54192 L
542.80630 447.07691 544.81153 445.07197 547.27540 445.07197 C
586.11628 445.07197 L
588.58129 445.07197 590.58652 447.07691 590.58652 449.54192 C
590.58652 486.14287 L
590.58652 488.60702 588.58129 490.61197 586.11628 490.61197 C
@c
F

@rax %Note: Object
489.32589 445.07197 536.81868 490.61197 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
532.34986 490.61197 m
493.79386 490.61197 L
491.32970 490.61197 489.32589 488.60702 489.32589 486.14287 C
489.32589 449.54192 L
489.32589 447.07691 491.32970 445.07197 493.79386 445.07197 C
532.34986 445.07197 L
534.81373 445.07197 536.81868 447.07691 536.81868 449.54192 C
536.81868 486.14287 L
536.81868 488.60702 534.81373 490.61197 532.34986 490.61197 C
@c
F

@rax %Note: Object
32.61061 445.07197 80.39055 490.61197 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
75.92173 490.61197 m
37.08057 490.61197 L
34.61556 490.61197 32.61061 488.60702 32.61061 486.14287 C
32.61061 449.54192 L
32.61061 447.07691 34.61556 445.07197 37.08057 445.07197 C
75.92173 445.07197 L
78.38561 445.07197 80.39055 447.07691 80.39055 449.54192 C
80.39055 486.14287 L
80.39055 488.60702 78.38561 490.61197 75.92173 490.61197 C
@c
F

@rax %Note: Object
-21.27912 445.07197 26.50082 490.61197 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
22.03200 490.61197 m
-16.80917 490.61197 L
-19.27417 490.61197 -21.27912 488.60702 -21.27912 486.14287 C
-21.27912 449.54192 L
-21.27912 447.07691 -19.27417 445.07197 -16.80917 445.07197 C
22.03200 445.07197 L
24.49587 445.07197 26.50082 447.07691 26.50082 449.54192 C
26.50082 486.14287 L
26.50082 488.60702 24.49587 490.61197 22.03200 490.61197 C
@c
F

@rax %Note: Object
-74.96646 445.07197 -27.18737 490.61197 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-31.65647 490.61197 m
-70.49764 490.61197 L
-72.96151 490.61197 -74.96646 488.60702 -74.96646 486.14287 C
-74.96646 449.54192 L
-74.96646 447.07691 -72.96151 445.07197 -70.49764 445.07197 C
-31.65647 445.07197 L
-29.19260 445.07197 -27.18737 447.07691 -27.18737 449.54192 C
-27.18737 486.14287 L
-27.18737 488.60702 -29.19260 490.61197 -31.65647 490.61197 C
@c
F

@rax %Note: Object
99.64828 496.84139 147.42850 542.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
104.11739 496.84139 m
142.95940 496.84139 L
145.42328 496.84139 147.42850 498.84548 147.42850 501.31049 C
147.42850 538.09540 L
147.42850 540.56041 145.42328 542.56450 142.95940 542.56450 C
104.11739 542.56450 L
101.65351 542.56450 99.64828 540.56041 99.64828 538.09540 C
99.64828 501.31049 L
99.64828 498.84548 101.65351 496.84139 104.11739 496.84139 C
@c
F

@rax %Note: Object
153.80561 496.84139 201.58554 542.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
158.27556 496.84139 m
197.11672 496.84139 L
199.58060 496.84139 201.58554 498.84548 201.58554 501.31049 C
201.58554 538.09540 L
201.58554 540.56041 199.58060 542.56450 197.11672 542.56450 C
158.27556 542.56450 L
155.81055 542.56450 153.80561 540.56041 153.80561 538.09540 C
153.80561 501.31049 L
153.80561 498.84548 155.81055 496.84139 158.27556 496.84139 C
@c
F

@rax %Note: Object
207.28403 496.84139 255.06397 542.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
211.75313 496.84139 m
250.59515 496.84139 L
253.05902 496.84139 255.06397 498.84548 255.06397 501.31049 C
255.06397 538.09540 L
255.06397 540.56041 253.05902 542.56450 250.59515 542.56450 C
211.75313 542.56450 L
209.28898 542.56450 207.28403 540.56041 207.28403 538.09540 C
207.28403 501.31049 L
207.28403 498.84548 209.28898 496.84139 211.75313 496.84139 C
@c
F

@rax %Note: Object
260.81546 496.84139 308.59540 542.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
265.28428 496.84139 m
304.12630 496.84139 L
306.59046 496.84139 308.59540 498.84548 308.59540 501.31049 C
308.59540 538.09540 L
308.59540 540.56041 306.59046 542.56450 304.12630 542.56450 C
265.28428 542.56450 L
262.82041 542.56450 260.81546 540.56041 260.81546 538.09540 C
260.81546 501.31049 L
260.81546 498.84548 262.82041 496.84139 265.28428 496.84139 C
@c
F

@rax %Note: Object
314.40019 496.84139 362.18041 542.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
318.86929 496.84139 m
357.71131 496.84139 L
360.17518 496.84139 362.18041 498.84548 362.18041 501.31049 C
362.18041 538.09540 L
362.18041 540.56041 360.17518 542.56450 357.71131 542.56450 C
318.86929 542.56450 L
316.40542 542.56450 314.40019 540.56041 314.40019 538.09540 C
314.40019 501.31049 L
314.40019 498.84548 316.40542 496.84139 318.86929 496.84139 C
@c
F

@rax %Note: Object
368.01638 496.84139 415.79660 542.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
372.48548 496.84139 m
411.32636 496.84139 L
413.79137 496.84139 415.79660 498.84548 415.79660 501.31049 C
415.79660 538.09540 L
415.79660 540.56041 413.79137 542.56450 411.32636 542.56450 C
372.48548 542.56450 L
370.02161 542.56450 368.01638 540.56041 368.01638 538.09540 C
368.01638 501.31049 L
368.01638 498.84548 370.02161 496.84139 372.48548 496.84139 C
@c
F

@rax %Note: Object
421.92369 496.84139 469.70391 542.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
426.39279 496.84139 m
465.23480 496.84139 L
467.69868 496.84139 469.70391 498.84548 469.70391 501.31049 C
469.70391 538.09540 L
469.70391 540.56041 467.69868 542.56450 465.23480 542.56450 C
426.39279 542.56450 L
423.92891 542.56450 421.92369 540.56041 421.92369 538.09540 C
421.92369 501.31049 L
421.92369 498.84548 423.92891 496.84139 426.39279 496.84139 C
@c
F

@rax %Note: Object
475.63682 496.84139 523.41676 542.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
480.10564 496.84139 m
518.94765 496.84139 L
521.41181 496.84139 523.41676 498.84548 523.41676 501.31049 C
523.41676 538.09540 L
523.41676 540.56041 521.41181 542.56450 518.94765 542.56450 C
480.10564 542.56450 L
477.64176 542.56450 475.63682 540.56041 475.63682 538.09540 C
475.63682 501.31049 L
475.63682 498.84548 477.64176 496.84139 480.10564 496.84139 C
@c
F

@rax %Note: Object
529.63682 496.84139 577.41676 542.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
534.10564 496.84139 m
572.94765 496.84139 L
575.41181 496.84139 577.41676 498.84548 577.41676 501.31049 C
577.41676 538.09540 L
577.41676 540.56041 575.41181 542.56450 572.94765 542.56450 C
534.10564 542.56450 L
531.64176 542.56450 529.63682 540.56041 529.63682 538.09540 C
529.63682 501.31049 L
529.63682 498.84548 531.64176 496.84139 534.10564 496.84139 C
@c
F

@rax %Note: Object
582.78586 496.84167 697.90082 542.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
693.43087 542.56450 m
587.25496 542.56450 L
584.79080 542.56450 582.78586 540.56041 582.78586 538.09540 C
582.78586 501.31049 L
582.78586 498.84548 584.79080 496.84167 587.25496 496.84167 C
693.43087 496.84167 L
695.89587 496.84167 697.90082 498.84548 697.90082 501.31049 C
697.90082 538.09540 L
697.90082 540.56041 695.89587 542.56450 693.43087 542.56450 C
@c
F

@rax %Note: Object
45.90227 496.84139 93.68220 542.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
50.37137 496.84139 m
89.21225 496.84139 L
91.67726 496.84139 93.68220 498.84548 93.68220 501.31049 C
93.68220 538.09540 L
93.68220 540.56041 91.67726 542.56450 89.21225 542.56450 C
50.37137 542.56450 L
47.90721 542.56450 45.90227 540.56041 45.90227 538.09540 C
45.90227 501.31049 L
45.90227 498.84548 47.90721 496.84139 50.37137 496.84139 C
@c
F

@rax %Note: Object
-7.80860 496.84139 39.97049 542.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-3.33950 496.84139 m
35.50139 496.84139 L
37.96526 496.84139 39.97049 498.84548 39.97049 501.31049 C
39.97049 538.09540 L
39.97049 540.56041 37.96526 542.56450 35.50139 542.56450 C
-3.33950 542.56450 L
-5.80365 542.56450 -7.80860 540.56041 -7.80860 538.09540 C
-7.80860 501.31049 L
-7.80860 498.84548 -5.80365 496.84139 -3.33950 496.84139 C
@c
F

@rax %Note: Object
18.64885 549.17660 66.42794 594.71660 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
66.42794 553.64570 m
66.42794 590.24778 L
66.42794 592.71165 64.42299 594.71660 61.95883 594.71660 C
23.11795 594.71660 L
20.65380 594.71660 18.64885 592.71165 18.64885 590.24778 C
18.64885 553.64570 L
18.64885 551.18154 20.65380 549.17660 23.11795 549.17660 C
61.95883 549.17660 L
64.42299 549.17660 66.42794 551.18154 66.42794 553.64570 C
@c
F

@rax %Note: Object
72.62447 549.17660 120.40356 594.71660 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
120.40356 553.64570 m
120.40356 590.24778 L
120.40356 592.71165 118.39861 594.71660 115.93446 594.71660 C
77.09357 594.71660 L
74.62942 594.71660 72.62447 592.71165 72.62447 590.24778 C
72.62447 553.64570 L
72.62447 551.18154 74.62942 549.17660 77.09357 549.17660 C
115.93446 549.17660 L
118.39861 549.17660 120.40356 551.18154 120.40356 553.64570 C
@c
F

@rax %Note: Object
126.59726 549.17660 174.37606 594.71660 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
174.37606 553.64570 m
174.37606 590.24778 L
174.37606 592.71165 172.37112 594.71660 169.90611 594.71660 C
131.06523 594.71660 L
128.60220 594.71660 126.59726 592.71165 126.59726 590.24778 C
126.59726 553.64570 L
126.59726 551.18154 128.60220 549.17660 131.06523 549.17660 C
169.90611 549.17660 L
172.37112 549.17660 174.37606 551.18154 174.37606 553.64570 C
@c
F

@rax %Note: Object
180.47112 549.17660 228.25020 594.71660 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
228.25020 553.64570 m
228.25020 590.24778 L
228.25020 592.71165 226.24526 594.71660 223.78110 594.71660 C
184.94022 594.71660 L
182.47606 594.71660 180.47112 592.71165 180.47112 590.24778 C
180.47112 553.64570 L
180.47112 551.18154 182.47606 549.17660 184.94022 549.17660 C
223.78110 549.17660 L
226.24526 549.17660 228.25020 551.18154 228.25020 553.64570 C
@c
F

@rax %Note: Object
233.98498 549.17660 281.76378 594.71660 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
281.76378 553.64570 m
281.76378 590.24778 L
281.76378 592.71165 279.75883 594.71660 277.29383 594.71660 C
238.45294 594.71660 L
235.98992 594.71660 233.98498 592.71165 233.98498 590.24778 C
233.98498 553.64570 L
233.98498 551.18154 235.98992 549.17660 238.45294 549.17660 C
277.29383 549.17660 L
279.75883 549.17660 281.76378 551.18154 281.76378 553.64570 C
@c
F

@rax %Note: Object
287.68110 549.17660 335.46019 594.71660 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
335.46019 553.64570 m
335.46019 590.24778 L
335.46019 592.71165 333.45524 594.71660 330.99024 594.71660 C
292.14907 594.71660 L
289.68633 594.71660 287.68110 592.71165 287.68110 590.24778 C
287.68110 553.64570 L
287.68110 551.18154 289.68633 549.17660 292.14907 549.17660 C
330.99024 549.17660 L
333.45524 549.17660 335.46019 551.18154 335.46019 553.64570 C
@c
F

@rax %Note: Object
341.11191 549.17660 388.89071 594.71660 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
388.89071 553.64570 m
388.89071 590.24778 L
388.89071 592.71165 386.88576 594.71660 384.42076 594.71660 C
345.57987 594.71660 L
343.11685 594.71660 341.11191 592.71165 341.11191 590.24778 C
341.11191 553.64570 L
341.11191 551.18154 343.11685 549.17660 345.57987 549.17660 C
384.42076 549.17660 L
386.88576 549.17660 388.89071 551.18154 388.89071 553.64570 C
@c
F

@rax %Note: Object
394.67424 549.17660 442.45332 594.71660 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
442.45332 553.64570 m
442.45332 590.24778 L
442.45332 592.71165 440.44838 594.71660 437.98337 594.71660 C
399.14220 594.71660 L
396.67918 594.71660 394.67424 592.71165 394.67424 590.24778 C
394.67424 553.64570 L
394.67424 551.18154 396.67918 549.17660 399.14220 549.17660 C
437.98337 549.17660 L
440.44838 549.17660 442.45332 551.18154 442.45332 553.64570 C
@c
F

@rax %Note: Object
448.27767 549.17660 496.05676 594.71660 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
496.05676 553.64570 m
496.05676 590.24778 L
496.05676 592.71165 494.05181 594.71660 491.58680 594.71660 C
452.74592 594.71660 L
450.28290 594.71660 448.27767 592.71165 448.27767 590.24778 C
448.27767 553.64570 L
448.27767 551.18154 450.28290 549.17660 452.74592 549.17660 C
491.58680 549.17660 L
494.05181 549.17660 496.05676 551.18154 496.05676 553.64570 C
@c
F

@rax %Note: Object
556.15975 549.17660 603.93883 594.71660 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
603.93883 553.64570 m
603.93883 590.24778 L
603.93883 592.71165 601.93361 594.71660 599.46860 594.71660 C
560.62772 594.71660 L
558.16469 594.71660 556.15975 592.71165 556.15975 590.24778 C
556.15975 553.64570 L
556.15975 551.18154 558.16469 549.17660 560.62772 549.17660 C
599.46860 549.17660 L
601.93361 549.17660 603.93883 551.18154 603.93883 553.64570 C
@c
F

@rax %Note: Object
502.50132 549.17660 550.28126 594.71660 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
550.28126 553.64570 m
550.28126 590.24778 L
550.28126 592.71165 548.27631 594.71660 545.81131 594.71660 C
506.97043 594.71660 L
504.50627 594.71660 502.50132 592.71165 502.50132 590.24778 C
502.50132 553.64570 L
502.50132 551.18154 504.50627 549.17660 506.97043 549.17660 C
545.81131 549.17660 L
548.27631 549.17660 550.28126 551.18154 550.28126 553.64570 C
@c
F

@rax %Note: Object
609.71386 549.17688 657.49380 594.71688 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
614.18268 549.17688 m
653.02469 549.17688 L
655.48885 549.17688 657.49380 551.18183 657.49380 553.64570 C
657.49380 590.24778 L
657.49380 592.71194 655.48885 594.71688 653.02469 594.71688 C
614.18268 594.71688 L
611.71880 594.71688 609.71386 592.71194 609.71386 590.24778 C
609.71386 553.64570 L
609.71386 551.18183 611.71880 549.17688 614.18268 549.17688 C
@c
F

@rax %Note: Object
434.90523 601.76863 482.68517 647.30863 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
439.37518 647.30863 m
436.91017 647.30863 434.90523 645.30369 434.90523 642.83981 C
434.90523 606.23887 L
434.90523 603.77386 436.91017 601.76863 439.37518 601.76863 C
478.21606 601.76863 L
480.68022 601.76863 482.68517 603.77386 482.68517 606.23887 C
482.68517 642.83981 L
482.68517 645.30369 480.68022 647.30863 478.21606 647.30863 C
439.37518 647.30863 L
@c
F

@rax %Note: Object
489.04866 601.76863 536.82888 647.30863 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
493.51776 647.30863 m
491.05389 647.30863 489.04866 645.30369 489.04866 642.83981 C
489.04866 606.23887 L
489.04866 603.77386 491.05389 601.76863 493.51776 601.76863 C
532.35893 601.76863 L
534.82394 601.76863 536.82888 603.77386 536.82888 606.23887 C
536.82888 642.83981 L
536.82888 645.30369 534.82394 647.30863 532.35893 647.30863 C
493.51776 647.30863 L
@c
F

@rax %Note: Object
542.93868 601.76891 590.71776 647.30891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
542.93868 642.83981 m
542.93868 606.23802 L
542.93868 603.77386 544.94362 601.76891 547.40778 601.76891 C
586.24980 601.76891 L
588.71282 601.76891 590.71776 603.77386 590.71776 606.23802 C
590.71776 642.83981 L
590.71776 645.30397 588.71282 647.30891 586.24980 647.30891 C
547.40778 647.30891 L
544.94362 647.30891 542.93868 645.30397 542.93868 642.83981 C
@c
F

@rax %Note: Object
596.38819 601.76835 644.16728 647.30835 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
644.16728 606.23830 m
644.16728 642.84038 L
644.16728 645.30340 642.16233 647.30835 639.69817 647.30835 C
600.85729 647.30835 L
598.39313 647.30835 596.38819 645.30340 596.38819 642.84038 C
596.38819 606.23830 L
596.38819 603.77357 598.39313 601.76835 600.85729 601.76835 C
639.69817 601.76835 L
642.16233 601.76835 644.16728 603.77357 644.16728 606.23830 C
@c
F

@rax %Note: Object
381.90926 601.76891 429.68835 647.30891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
381.90926 642.83981 m
381.90926 606.23802 L
381.90926 603.77386 383.91449 601.76891 386.37836 601.76891 C
425.22038 601.76891 L
427.68340 601.76891 429.68835 603.77386 429.68835 606.23802 C
429.68835 642.83981 L
429.68835 645.30397 427.68340 647.30891 425.22038 647.30891 C
386.37836 647.30891 L
383.91449 647.30891 381.90926 645.30397 381.90926 642.83981 C
@c
F

@rax %Note: Object
327.98523 601.76863 375.76517 647.30863 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
332.45518 647.30863 m
329.99017 647.30863 327.98523 645.30369 327.98523 642.83981 C
327.98523 606.23887 L
327.98523 603.77386 329.99017 601.76863 332.45518 601.76863 C
371.29635 601.76863 L
373.76022 601.76863 375.76517 603.77386 375.76517 606.23887 C
375.76517 642.83981 L
375.76517 645.30369 373.76022 647.30863 371.29635 647.30863 C
332.45518 647.30863 L
@c
F

@rax %Note: Object
274.52551 601.76891 322.30460 647.30891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
274.52551 642.83981 m
274.52551 606.23802 L
274.52551 603.77386 276.53046 601.76891 278.99461 601.76891 C
317.83663 601.76891 L
320.29965 601.76891 322.30460 603.77386 322.30460 606.23802 C
322.30460 642.83981 L
322.30460 645.30397 320.29965 647.30891 317.83663 647.30891 C
278.99461 647.30891 L
276.53046 647.30891 274.52551 645.30397 274.52551 642.83981 C
@c
F

@rax %Note: Object
220.65052 601.76891 268.42961 647.30891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
220.65052 642.83981 m
220.65052 606.23802 L
220.65052 603.77386 222.65546 601.76891 225.11962 601.76891 C
263.96164 601.76891 L
266.42466 601.76891 268.42961 603.77386 268.42961 606.23802 C
268.42961 642.83981 L
268.42961 645.30397 266.42466 647.30891 263.96164 647.30891 C
225.11962 647.30891 L
222.65546 647.30891 220.65052 645.30397 220.65052 642.83981 C
@c
F

@rax %Note: Object
166.80869 601.76891 214.58778 647.30891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
166.80869 642.83981 m
166.80869 606.23802 L
166.80869 603.77386 168.81392 601.76891 171.27893 601.76891 C
210.11981 601.76891 L
212.58283 601.76891 214.58778 603.77386 214.58778 606.23802 C
214.58778 642.83981 L
214.58778 645.30397 212.58283 647.30891 210.11981 647.30891 C
171.27893 647.30891 L
168.81392 647.30891 166.80869 645.30397 166.80869 642.83981 C
@c
F

@rax %Note: Object
112.80869 601.76891 160.58778 647.30891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
112.80869 642.83981 m
112.80869 606.23802 L
112.80869 603.77386 114.81392 601.76891 117.27893 601.76891 C
156.11981 601.76891 L
158.58283 601.76891 160.58778 603.77386 160.58778 606.23802 C
160.58778 642.83981 L
160.58778 645.30397 158.58283 647.30891 156.11981 647.30891 C
117.27893 647.30891 L
114.81392 647.30891 112.80869 645.30397 112.80869 642.83981 C
@c
F

@rax %Note: Object
59.09272 601.76863 106.87266 647.30863 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
63.56183 647.30863 m
61.09767 647.30863 59.09272 645.30369 59.09272 642.83981 C
59.09272 606.23887 L
59.09272 603.77386 61.09767 601.76863 63.56183 601.76863 C
102.40271 601.76863 L
104.86772 601.76863 106.87266 603.77386 106.87266 606.23887 C
106.87266 642.83981 L
106.87266 645.30369 104.86772 647.30863 102.40271 647.30863 C
63.56183 647.30863 L
@c
F

@rax %Note: Object
5.09244 601.76891 52.87153 647.30891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
5.09244 642.83981 m
5.09244 606.23802 L
5.09244 603.77386 7.09739 601.76891 9.56154 601.76891 C
48.40243 601.76891 L
50.86658 601.76891 52.87153 603.77386 52.87153 606.23802 C
52.87153 642.83981 L
52.87153 645.30397 50.86658 647.30891 48.40243 647.30891 C
9.56154 647.30891 L
7.09739 647.30891 5.09244 645.30397 5.09244 642.83981 C
@c
F

@rax %Note: Object
-21.54869 653.98394 26.23153 699.52280 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-21.54869 695.05370 m
-21.54869 658.45191 L
-21.54869 655.98888 -19.54346 653.98394 -17.07959 653.98394 C
21.76243 653.98394 L
24.22630 653.98394 26.23153 655.98888 26.23153 658.45191 C
26.23153 695.05370 L
26.23153 697.51786 24.22630 699.52280 21.76243 699.52280 C
-17.07959 699.52280 L
-19.54346 699.52280 -21.54869 697.51786 -21.54869 695.05370 C
@c
F

@rax %Note: Object
31.95808 653.98365 79.73688 699.52252 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
36.42690 653.98365 m
75.26806 653.98365 L
77.73194 653.98365 79.73688 655.98860 79.73688 658.45247 C
79.73688 695.05342 L
79.73688 697.51757 77.73194 699.52252 75.26806 699.52252 C
36.42690 699.52252 L
33.96302 699.52252 31.95808 697.51757 31.95808 695.05342 C
31.95808 658.45247 L
31.95808 655.98860 33.96302 653.98365 36.42690 653.98365 C
@c
F

@rax %Note: Object
85.87077 653.98394 133.65071 699.52280 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
85.87077 695.05370 m
85.87077 658.45191 L
85.87077 655.98888 87.87572 653.98394 90.33987 653.98394 C
129.18076 653.98394 L
131.64576 653.98394 133.65071 655.98888 133.65071 658.45191 C
133.65071 695.05370 L
133.65071 697.51786 131.64576 699.52280 129.18076 699.52280 C
90.33987 699.52280 L
87.87572 699.52280 85.87077 697.51786 85.87077 695.05370 C
@c
F

@rax %Note: Object
193.48951 653.98394 241.26860 699.52280 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
193.48951 695.05370 m
193.48951 658.45191 L
193.48951 655.98888 195.49446 653.98394 197.95861 653.98394 C
236.79950 653.98394 L
239.26337 653.98394 241.26860 655.98888 241.26860 658.45191 C
241.26860 695.05370 L
241.26860 697.51786 239.26337 699.52280 236.79950 699.52280 C
197.95861 699.52280 L
195.49446 699.52280 193.48951 697.51786 193.48951 695.05370 C
@c
F

@rax %Note: Object
139.68000 653.98394 187.45880 699.52280 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
139.68000 695.05370 m
139.68000 658.45191 L
139.68000 655.98888 141.68494 653.98394 144.14995 653.98394 C
182.99083 653.98394 L
185.45386 653.98394 187.45880 655.98888 187.45880 658.45191 C
187.45880 695.05370 L
187.45880 697.51786 185.45386 699.52280 182.99083 699.52280 C
144.14995 699.52280 L
141.68494 699.52280 139.68000 697.51786 139.68000 695.05370 C
@c
F

@rax %Note: Object
247.14567 653.98394 294.92476 699.52280 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
247.14567 695.05370 m
247.14567 658.45191 L
247.14567 655.98888 249.15061 653.98394 251.61477 653.98394 C
290.45679 653.98394 L
292.91981 653.98394 294.92476 655.98888 294.92476 658.45191 C
294.92476 695.05370 L
294.92476 697.51786 292.91981 699.52280 290.45679 699.52280 C
251.61477 699.52280 L
249.15061 699.52280 247.14567 697.51786 247.14567 695.05370 C
@c
F

@rax %Note: Object
300.87524 653.98394 348.65433 699.52280 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
300.87524 695.05370 m
300.87524 658.45191 L
300.87524 655.98888 302.88019 653.98394 305.34406 653.98394 C
344.18523 653.98394 L
346.64910 653.98394 348.65433 655.98888 348.65433 658.45191 C
348.65433 695.05370 L
348.65433 697.51786 346.64910 699.52280 344.18523 699.52280 C
305.34406 699.52280 L
302.88019 699.52280 300.87524 697.51786 300.87524 695.05370 C
@c
F

@rax %Note: Object
354.57817 653.98394 402.35839 699.52280 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
354.57817 695.05370 m
354.57817 658.45191 L
354.57817 655.98888 356.58340 653.98394 359.04841 653.98394 C
397.88929 653.98394 L
400.35317 653.98394 402.35839 655.98888 402.35839 658.45191 C
402.35839 695.05370 L
402.35839 697.51786 400.35317 699.52280 397.88929 699.52280 C
359.04841 699.52280 L
356.58340 699.52280 354.57817 697.51786 354.57817 695.05370 C
@c
F

@rax %Note: Object
408.27458 653.98394 456.05367 699.52280 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
408.27458 695.05370 m
408.27458 658.45191 L
408.27458 655.98888 410.27953 653.98394 412.74454 653.98394 C
451.58570 653.98394 L
454.04872 653.98394 456.05367 655.98888 456.05367 658.45191 C
456.05367 695.05370 L
456.05367 697.51786 454.04872 699.52280 451.58570 699.52280 C
412.74454 699.52280 L
410.27953 699.52280 408.27458 697.51786 408.27458 695.05370 C
@c
F

@rax %Note: Object
462.24142 653.98394 510.02050 699.52280 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
462.24142 695.05370 m
462.24142 658.45191 L
462.24142 655.98888 464.24636 653.98394 466.71052 653.98394 C
505.55254 653.98394 L
508.01528 653.98394 510.02050 655.98888 510.02050 658.45191 C
510.02050 695.05370 L
510.02050 697.51786 508.01528 699.52280 505.55254 699.52280 C
466.71052 699.52280 L
464.24636 699.52280 462.24142 697.51786 462.24142 695.05370 C
@c
F

@rax %Note: Object
515.76180 653.98394 563.54088 699.52280 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
515.76180 695.05370 m
515.76180 658.45191 L
515.76180 655.98888 517.76702 653.98394 520.23090 653.98394 C
559.07178 653.98394 L
561.53594 653.98394 563.54088 655.98888 563.54088 658.45191 C
563.54088 695.05370 L
563.54088 697.51786 561.53594 699.52280 559.07178 699.52280 C
520.23090 699.52280 L
517.76702 699.52280 515.76180 697.51786 515.76180 695.05370 C
@c
F

@rax %Note: Object
569.47890 653.98337 617.25798 699.52224 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
617.25798 658.45219 m
617.25798 695.05427 L
617.25798 697.51729 615.25304 699.52224 612.78803 699.52224 C
573.94687 699.52224 L
571.48413 699.52224 569.47890 697.51729 569.47890 695.05427 C
569.47890 658.45219 L
569.47890 655.98831 571.48413 653.98337 573.94687 653.98337 C
612.78803 653.98337 L
615.25304 653.98337 617.25798 655.98831 617.25798 658.45219 C
@c
F

@rax %Note: Object
622.75266 653.98365 697.61764 699.52252 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
693.14769 699.52252 m
627.22176 699.52252 L
624.75761 699.52252 622.75266 697.51757 622.75266 695.05342 C
622.75266 658.45247 L
622.75266 655.98860 624.75761 653.98365 627.22176 653.98365 C
693.14769 653.98365 L
695.61269 653.98365 697.61764 655.98860 697.61764 658.45247 C
697.61764 695.05342 L
697.61764 697.51757 695.61269 699.52252 693.14769 699.52252 C
@c
F

@rax %Note: Object
-75.49909 653.98365 -27.71915 699.52252 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-71.02998 653.98365 m
-32.18910 653.98365 L
-29.72409 653.98365 -27.71915 655.98860 -27.71915 658.45247 C
-27.71915 695.05342 L
-27.71915 697.51757 -29.72409 699.52252 -32.18910 699.52252 C
-71.02998 699.52252 L
-73.49414 699.52252 -75.49909 697.51757 -75.49909 695.05342 C
-75.49909 658.45247 L
-75.49909 655.98860 -73.49414 653.98365 -71.02998 653.98365 C
@c
F

@rax %Note: Object
-75.49937 706.70183 -1.02444 725.38384 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-71.86649 706.70183 m
-4.65761 706.70183 L
-2.65436 706.70183 -1.02444 708.33061 -1.02444 710.33386 C
-1.02444 721.75068 L
-1.02444 723.75364 -2.65436 725.38384 -4.65761 725.38384 C
-71.86649 725.38384 L
-73.86945 725.38384 -75.49937 723.75364 -75.49937 721.75068 C
-75.49937 710.33386 L
-75.49937 708.33061 -73.86945 706.70183 -71.86649 706.70183 C
@c
F

@rax %Note: Object
5.54570 706.70211 52.97584 725.38413 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
52.97584 710.33414 m
52.97584 721.75124 L
52.97584 723.75420 51.34592 725.38413 49.34268 725.38413 C
9.17887 725.38413 L
7.17591 725.38413 5.54570 723.75420 5.54570 721.75124 C
5.54570 710.33414 L
5.54570 708.33118 7.17591 706.70211 9.17887 706.70211 C
49.34268 706.70211 L
51.34592 706.70211 52.97584 708.33118 52.97584 710.33414 C
@c
F

@rax %Note: Object
59.15055 706.70183 106.58041 725.38384 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
102.94753 725.38384 m
62.78343 725.38384 L
60.78047 725.38384 59.15055 723.75392 59.15055 721.75096 C
59.15055 710.33386 L
59.15055 708.33090 60.78047 706.70183 62.78258 706.70183 C
102.94753 706.70183 L
104.95049 706.70183 106.58041 708.33090 106.58041 710.33386 C
106.58041 721.75096 L
106.58041 723.75392 104.95049 725.38384 102.94753 725.38384 C
@c
F

@rax %Note: Object
112.80557 706.70183 160.23572 725.38384 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
156.60283 725.38384 m
116.43874 725.38384 L
114.43578 725.38384 112.80557 723.75392 112.80557 721.75096 C
112.80557 710.33386 L
112.80557 708.33090 114.43578 706.70183 116.43874 706.70183 C
156.60369 706.70183 L
158.60665 706.70183 160.23572 708.33090 160.23572 710.33386 C
160.23572 721.75096 L
160.23572 723.75392 158.60580 725.38384 156.60283 725.38384 C
@c
F

@rax %Note: Object
220.62132 706.70183 268.05118 725.38384 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
264.41830 725.38384 m
224.25420 725.38384 L
222.25124 725.38384 220.62132 723.75392 220.62132 721.75096 C
220.62132 710.33386 L
220.62132 708.33090 222.25124 706.70183 224.25420 706.70183 C
264.41830 706.70183 L
266.42126 706.70183 268.05118 708.33090 268.05118 710.33386 C
268.05118 721.75096 L
268.05118 723.75392 266.42126 725.38384 264.41830 725.38384 C
@c
F

@rax %Note: Object
166.85546 706.70183 214.28561 725.38384 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
210.65244 725.38384 m
170.48863 725.38384 L
168.48539 725.38384 166.85546 723.75392 166.85546 721.75096 C
166.85546 710.33386 L
166.85546 708.33090 168.48539 706.70183 170.48863 706.70183 C
210.65244 706.70183 L
212.65540 706.70183 214.28561 708.33090 214.28561 710.33386 C
214.28561 721.75096 L
214.28561 723.75392 212.65540 725.38384 210.65244 725.38384 C
@c
F

@rax %Note: Object
273.86929 706.70183 321.29915 725.38384 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
317.66627 725.38384 m
277.50217 725.38384 L
275.49921 725.38384 273.86929 723.75392 273.86929 721.75096 C
273.86929 710.33386 L
273.86929 708.33090 275.49921 706.70183 277.50217 706.70183 C
317.66627 706.70183 L
319.66923 706.70183 321.29915 708.33090 321.29915 710.33386 C
321.29915 721.75096 L
321.29915 723.75392 319.66923 725.38384 317.66627 725.38384 C
@c
F

@rax %Note: Object
327.87694 706.70183 375.30709 725.38384 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
371.67392 725.38384 m
331.51011 725.38384 L
329.50687 725.38384 327.87694 723.75392 327.87694 721.75096 C
327.87694 710.33386 L
327.87694 708.33090 329.50687 706.70183 331.51011 706.70183 C
371.67392 706.70183 L
373.67688 706.70183 375.30709 708.33090 375.30709 710.33386 C
375.30709 721.75096 L
375.30709 723.75392 373.67688 725.38384 371.67392 725.38384 C
@c
F

@rax %Note: Object
381.64762 706.70183 429.07748 725.38384 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
425.44460 725.38384 m
385.28050 725.38384 L
383.27754 725.38384 381.64762 723.75392 381.64762 721.75096 C
381.64762 710.33386 L
381.64762 708.33090 383.27754 706.70183 385.28050 706.70183 C
425.44460 706.70183 L
427.44756 706.70183 429.07748 708.33090 429.07748 710.33386 C
429.07748 721.75096 L
429.07748 723.75392 427.44756 725.38384 425.44460 725.38384 C
@c
F

@rax %Note: Object
435.05858 706.70183 482.48872 725.38384 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
478.85556 725.38384 m
438.69175 725.38384 L
436.68879 725.38384 435.05858 723.75392 435.05858 721.75096 C
435.05858 710.33386 L
435.05858 708.33090 436.68879 706.70183 438.69175 706.70183 C
478.85556 706.70183 L
480.85880 706.70183 482.48872 708.33090 482.48872 710.33386 C
482.48872 721.75096 L
482.48872 723.75392 480.85880 725.38384 478.85556 725.38384 C
@c
F

@rax %Note: Object
489.06057 706.70183 536.49071 725.38384 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
532.85754 725.38384 m
492.69260 725.38384 L
490.68964 725.38384 489.06057 723.75392 489.06057 721.75096 C
489.06057 710.33386 L
489.06057 708.33090 490.68964 706.70183 492.69260 706.70183 C
532.85754 706.70183 L
534.86050 706.70183 536.49071 708.33090 536.49071 710.33386 C
536.49071 721.75096 L
536.49071 723.75392 534.86050 725.38384 532.85754 725.38384 C
@c
F

@rax %Note: Object
542.62205 706.70183 590.05219 725.38384 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
586.41902 725.38384 m
546.25521 725.38384 L
544.25197 725.38384 542.62205 723.75392 542.62205 721.75096 C
542.62205 710.33386 L
542.62205 708.33090 544.25197 706.70183 546.25521 706.70183 C
586.41902 706.70183 L
588.42198 706.70183 590.05219 708.33090 590.05219 710.33386 C
590.05219 721.75096 L
590.05219 723.75392 588.42198 725.38384 586.41902 725.38384 C
@c
F

@rax %Note: Object
596.40831 706.70211 643.83846 725.38413 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
596.40831 721.75096 m
596.40831 710.33414 L
596.40831 708.33118 598.03852 706.70211 600.04148 706.70211 C
640.20643 706.70211 L
642.20939 706.70211 643.83846 708.33118 643.83846 710.33414 C
643.83846 721.75096 L
643.83846 723.75392 642.20939 725.38413 640.20643 725.38413 C
600.04148 725.38413 L
598.03852 725.38413 596.40831 723.75392 596.40831 721.75096 C
@c
F

@rax %Note: Object
649.85556 706.70183 697.28542 725.38384 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
653.48759 706.70183 m
693.65254 706.70183 L
695.65550 706.70183 697.28542 708.33061 697.28542 710.33386 C
697.28542 721.75068 L
697.28542 723.75364 695.65550 725.38384 693.65254 725.38384 C
653.48759 725.38384 L
651.48463 725.38384 649.85556 723.75364 649.85556 721.75068 C
649.85556 710.33386 L
649.85556 708.33061 651.48463 706.70183 653.48759 706.70183 C
@c
F

@rax %Note: Object
-75.49909 601.76863 -1.06611 647.30863 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-71.02998 601.76863 m
-5.53521 601.76863 L
-3.07106 601.76863 -1.06611 603.77357 -1.06611 606.23858 C
-1.06611 642.83953 L
-1.06611 645.30369 -3.07106 647.30863 -5.53521 647.30863 C
-71.02998 647.30863 L
-73.49414 647.30863 -75.49909 645.30369 -75.49909 642.83953 C
-75.49909 606.23858 L
-75.49909 603.77357 -73.49414 601.76863 -71.02998 601.76863 C
@c
F

@rax %Note: Object
649.83713 549.17660 697.61707 647.30863 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
663.45817 553.64570 m
663.45817 551.18154 665.46312 549.17660 667.92728 549.17660 C
693.14712 549.17660 L
695.61213 549.17660 697.61707 551.18154 697.61707 553.64570 C
697.61707 642.83953 L
697.61707 645.30369 695.61213 647.30863 693.14712 647.30863 C
654.30709 647.30863 L
651.84208 647.30863 649.83713 645.30369 649.83713 642.83953 C
649.83713 606.92655 L
649.83713 604.46268 651.84208 602.45858 654.30709 602.45858 C
658.88731 602.45858 L
661.40731 602.45858 663.45817 600.40772 663.45817 597.88772 C
663.45817 553.64570 L
@c
F

@rax %Note: Object
-74.96702 496.84167 -14.06296 542.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
-70.49792 542.56450 m
-72.96180 542.56450 -74.96702 540.56041 -74.96702 538.09540 C
-74.96702 501.31049 L
-74.96702 498.84548 -72.96180 496.84167 -70.49792 496.84167 C
-18.53178 496.84167 L
-16.06791 496.84167 -14.06296 498.84548 -14.06296 501.31049 C
-14.06296 538.09540 L
-14.06296 540.56041 -16.06791 542.56450 -18.53178 542.56450 C
-70.49792 542.56450 L
@c
F

@rax %Note: Object
-74.96674 549.17660 12.79219 594.71660 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
12.79219 553.64570 m
12.79219 590.24863 L
12.79219 592.71165 10.78724 594.71660 8.32309 594.71660 C
-70.49792 594.71660 L
-72.96180 594.71660 -74.96674 592.71165 -74.96674 590.24778 C
-74.96674 553.64570 L
-74.96674 551.18154 -72.96180 549.17660 -70.49792 549.17660 C
8.32309 549.17660 L
10.78724 549.17660 12.79219 551.18154 12.79219 553.64570 C
@c
F

@rax %Note: Object
422.06428 445.07197 483.21524 490.61197 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
478.74643 490.61197 m
426.53339 490.61197 L
424.06923 490.61197 422.06428 488.60702 422.06428 486.14287 C
422.06428 449.54192 L
422.06428 447.07691 424.06923 445.07197 426.53339 445.07197 C
478.74643 445.07197 L
481.21030 445.07197 483.21524 447.07691 483.21524 449.54192 C
483.21524 486.14287 L
483.21524 488.60702 481.21030 490.61197 478.74643 490.61197 C
@c
F

@rax %Note: Object
86.45159 445.07197 147.49937 490.61197 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
143.03055 490.61197 m
90.92041 490.61197 L
88.45654 490.61197 86.45159 488.60702 86.45159 486.14287 C
86.45159 449.54192 L
86.45159 447.07691 88.45654 445.07197 90.92041 445.07197 C
143.03055 445.07197 L
145.49443 445.07197 147.49937 447.07691 147.49937 449.54192 C
147.49937 486.14287 L
147.49937 488.60702 145.49443 490.61197 143.03055 490.61197 C
@c
F

@rax %Note: Object
153.38183 445.07225 415.86576 490.61225 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
157.85093 445.07225 m
411.39581 445.07225 L
413.86082 445.07225 415.86576 447.07748 415.86576 449.54135 C
415.86576 486.14230 L
415.86576 488.60646 413.86082 490.61225 411.39581 490.61225 C
157.85093 490.61225 L
155.38677 490.61225 153.38183 488.60646 153.38183 486.14230 C
153.38183 449.54135 L
153.38183 447.07748 155.38677 445.07225 157.85093 445.07225 C
@c
F

@rax %Note: Object
235.03776 217.86633 386.13260 224.74687 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
383.20753 224.28907 m
380.92365 224.59408 378.62277 224.74687 376.31877 224.74687 C
244.85272 224.74687 L
242.54872 224.74687 240.24671 224.59408 237.96255 224.28907 C
235.03776 223.89704 L
235.03776 220.40901 L
237.45657 219.15099 240.67162 218.30202 242.65276 218.06702 C
244.22258 217.92813 245.79865 217.86094 247.37471 217.86690 C
373.79565 217.86690 L
375.37257 217.86094 376.94778 217.92813 378.51874 218.06702 C
380.49874 218.30202 383.71465 219.15099 386.13260 220.40901 C
386.13260 223.89704 L
383.20753 224.28907 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
