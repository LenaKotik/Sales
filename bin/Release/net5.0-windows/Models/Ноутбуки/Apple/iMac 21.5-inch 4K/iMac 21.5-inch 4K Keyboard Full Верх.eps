%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -123 296 727 664 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: iMac 21.5-inch 4K Keyboard Fu...
%%CreationDate: Fri Jun  7 01:20:04 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
-93.23546 310.71487 696.34261 634.66554 @E
/$fm 1 def
 0 O 0 @g
0.7500 0.6800 0.6700 0.9000  create_cmyk_color set_solid_fill
689.16302 586.37310 m
689.16302 583.30602 686.67222 580.81550 683.59465 580.81550 C
647.00192 580.81550 L
643.92406 580.81550 641.43354 583.30602 641.43354 586.37310 C
641.43354 621.14542 L
641.43354 624.21534 643.92406 626.70302 647.00192 626.70302 C
683.59465 626.70302 L
686.67222 626.70302 689.16302 624.21534 689.16302 621.14542 C
689.16302 586.37310 L
@c
689.20299 534.10479 m
689.20299 531.02438 686.71247 528.53357 683.63206 528.53357 C
620.26441 528.53357 L
617.19477 528.53357 614.70397 531.02438 614.70397 534.10479 C
614.70397 568.86378 L
614.70397 571.94419 617.19477 574.43471 620.26441 574.43471 C
683.63206 574.43471 L
686.71247 574.43471 689.20299 571.94419 689.20299 568.86378 C
689.20299 534.10479 L
@c
689.21376 481.65420 m
689.21376 478.58428 686.72324 476.09376 683.64283 476.09376 C
647.10369 476.09376 L
644.03405 476.09376 641.54324 478.58428 641.54324 481.65420 C
641.54324 516.42369 L
641.54324 519.49332 644.03405 521.99490 647.10369 521.99490 C
683.64283 521.99490 L
686.72324 521.99490 689.21376 519.49332 689.21376 516.42369 C
689.21376 481.65420 L
@c
688.79282 429.21411 m
688.79282 426.14447 686.30230 423.65367 683.23266 423.65367 C
606.27231 423.65367 L
603.20268 423.65367 600.71187 426.14447 600.71187 429.21411 C
600.71187 463.98387 L
600.71187 467.05606 603.20268 469.54403 606.27231 469.54403 C
683.23266 469.54403 L
686.30230 469.54403 688.79282 467.05606 688.79282 463.98387 C
688.79282 429.21411 L
@c
688.79282 377.00476 m
688.79282 373.93512 686.30230 371.44431 683.23266 371.44431 C
579.52431 371.44431 L
576.45439 371.44431 573.95310 373.93512 573.95310 377.00476 C
573.95310 411.77424 L
573.95310 414.84416 576.45439 417.33468 579.52431 417.33468 C
683.23266 417.33468 L
686.30230 417.33468 688.79282 414.84416 688.79282 411.77424 C
688.79282 377.00476 L
@c
688.41496 324.33420 m
688.41496 321.26457 685.92416 318.77376 682.84375 318.77376 C
646.58353 318.77376 L
643.50312 318.77376 641.01260 321.26457 641.01260 324.33420 C
641.01260 359.13600 L
641.01260 362.20564 643.50312 364.69644 646.58353 364.69644 C
682.84375 364.69644 L
685.92416 364.69644 688.41496 362.20564 688.41496 359.13600 C
688.41496 324.33420 L
@c
634.41184 324.33420 m
634.41184 321.26457 631.92387 318.77376 628.85424 318.77376 C
592.58324 318.77376 L
589.51361 318.77376 587.02280 321.26457 587.02280 324.33420 C
587.02280 359.13600 L
587.02280 362.20564 589.51361 364.69644 592.58324 364.69644 C
628.85424 364.69644 L
631.92387 364.69644 634.41184 362.20564 634.41184 359.13600 C
634.41184 324.33420 L
@c
580.61282 324.33420 m
580.61282 321.26457 578.12485 318.77376 575.05238 318.77376 C
538.78394 318.77376 L
535.70353 318.77376 533.21301 321.26457 533.21301 324.33420 C
533.21301 359.13600 L
533.21301 362.20564 535.70353 364.69644 538.78394 364.69644 C
575.05238 364.69644 L
578.12485 364.69644 580.61282 362.20564 580.61282 359.13600 C
580.61282 324.33420 L
@c
527.07345 324.33420 m
527.07345 321.26457 524.58293 318.77376 521.50507 318.77376 C
485.23408 318.77376 L
482.16444 318.77376 479.67392 321.26457 479.67392 324.33420 C
479.67392 359.13600 L
479.67392 362.20564 482.16444 364.69644 485.23408 364.69644 C
521.50507 364.69644 L
524.58293 364.69644 527.07345 362.20564 527.07345 359.13600 C
527.07345 324.33420 L
@c
473.20469 324.33420 m
473.20469 321.26457 470.71389 318.77376 467.63348 318.77376 C
418.02208 318.77376 L
414.95499 318.77376 412.46419 321.26457 412.46419 324.33420 C
412.46419 359.13600 L
412.46419 362.20564 414.95499 364.69644 418.02208 364.69644 C
467.63348 364.69644 L
470.71389 364.69644 473.20469 362.20564 473.20469 359.13600 C
473.20469 324.33420 L
@c
411.78331 411.77424 m
411.78331 414.84416 414.27411 417.33468 417.34375 417.33468 C
453.89339 417.33468 L
456.96331 417.33468 459.45383 414.84416 459.45383 411.77424 C
459.45383 377.00476 L
459.45383 373.93512 456.96331 371.44431 453.89339 371.44431 C
417.34375 371.44431 L
414.27411 371.44431 411.78331 373.93512 411.78331 377.00476 C
411.78331 411.77424 L
@c
406.14265 377.00476 m
406.14265 373.93512 403.65468 371.44431 400.58220 371.44431 C
363.95461 371.44431 L
360.88498 371.44431 358.39417 373.93512 358.39417 377.00476 C
358.39417 411.77424 L
358.39417 414.84416 360.88498 417.33468 363.95461 417.33468 C
400.58220 417.33468 L
403.65468 417.33468 406.14265 414.84416 406.14265 411.77424 C
406.14265 377.00476 L
@c
406.14265 324.33420 m
406.14265 321.26457 403.65468 318.77376 400.58220 318.77376 C
148.78460 318.77376 L
145.71213 318.77376 143.21339 321.26457 143.21339 324.33420 C
143.21339 359.13600 L
143.21339 362.20564 145.71213 364.69644 148.78460 364.69644 C
400.58220 364.69644 L
403.65468 364.69644 406.14265 362.20564 406.14265 359.13600 C
406.14265 324.33420 L
@c
137.11436 377.00476 m
137.11436 373.93512 134.62356 371.44431 131.54315 371.44431 C
94.92378 371.44431 L
91.85386 371.44431 89.35540 373.93512 89.35540 377.00476 C
89.35540 411.77424 L
89.35540 414.84416 91.85386 417.33468 94.92378 417.33468 C
131.54315 417.33468 L
134.62356 417.33468 137.11436 414.84416 137.11436 411.77424 C
137.11436 377.00476 L
@c
137.11436 324.33420 m
137.11436 321.26457 134.62356 318.77376 131.54315 318.77376 C
81.65282 318.77376 L
78.58318 318.77376 76.09238 321.26457 76.09238 324.33420 C
76.09238 359.13600 L
76.09238 362.20564 78.58318 364.69644 81.65282 364.69644 C
131.54315 364.69644 L
134.62356 364.69644 137.11436 362.20564 137.11436 359.13600 C
137.11436 324.33420 L
@c
69.40346 324.33420 m
69.40346 321.26457 66.91294 318.77376 63.84302 318.77376 C
27.51307 318.77376 L
24.43266 318.77376 21.94469 321.26457 21.94469 324.33420 C
21.94469 359.13600 L
21.94469 362.20564 24.43266 364.69644 27.51307 364.69644 C
63.84302 364.69644 L
66.91294 364.69644 69.40346 362.20564 69.40346 359.13600 C
69.40346 324.33420 L
@c
15.60416 324.33420 m
15.60416 321.26457 13.11364 318.77376 10.03323 318.77376 C
-26.28624 318.77376 L
-29.36665 318.77376 -31.85717 321.26457 -31.85717 324.33420 C
-31.85717 359.13600 L
-31.85717 362.20564 -29.36665 364.69644 -26.28624 364.69644 C
10.03323 364.69644 L
13.11364 364.69644 15.60416 362.20564 15.60416 359.13600 C
15.60416 324.33420 L
@c
-38.07694 324.33420 m
-38.07694 321.26457 -40.56775 318.77376 -43.63739 318.77376 C
-79.96734 318.77376 L
-83.04775 318.77376 -85.53572 321.26457 -85.53572 324.33420 C
-85.53572 359.13600 L
-85.53572 362.20564 -83.04775 364.69644 -79.96734 364.69644 C
-43.63739 364.69644 L
-40.56775 364.69644 -38.07694 362.20564 -38.07694 359.13600 C
-38.07694 324.33420 L
@c
-85.53572 411.77424 m
-85.53572 414.84416 -83.04775 417.33468 -79.96734 417.33468 C
23.92328 417.33468 L
27.00369 417.33468 29.49449 414.84416 29.49449 411.77424 C
29.49449 377.00476 L
29.49449 373.93512 27.00369 371.44431 23.92328 371.44431 C
-79.96734 371.44431 L
-83.04775 371.44431 -85.53572 373.93512 -85.53572 377.00476 C
-85.53572 411.77424 L
@c
-85.53572 463.98387 m
-85.53572 467.05606 -83.04775 469.54403 -79.96734 469.54403 C
-3.30746 469.54403 L
-0.22706 469.54403 2.26375 467.05606 2.26375 463.98387 C
2.26375 429.21411 L
2.26375 426.14447 -0.22706 423.65367 -3.30746 423.65367 C
-79.96734 423.65367 L
-83.04775 423.65367 -85.53572 426.14447 -85.53572 429.21411 C
-85.53572 463.98387 L
@c
-85.53572 516.42369 m
-85.53572 519.49332 -83.04775 521.99490 -79.96734 521.99490 C
-16.41487 521.99490 L
-13.33701 521.99490 -10.84620 519.49332 -10.84620 516.42369 C
-10.84620 481.65420 L
-10.84620 478.58428 -13.33701 476.09376 -16.41487 476.09376 C
-79.96734 476.09376 L
-83.04775 476.09376 -85.53572 478.58428 -85.53572 481.65420 C
-85.53572 516.42369 L
@c
-85.53572 568.86378 m
-85.53572 571.94419 -83.04775 574.43471 -79.96734 574.43471 C
-43.42564 574.43471 L
-40.35600 574.43471 -37.86520 571.94419 -37.86520 568.86378 C
-37.86520 534.10479 L
-37.86520 531.02438 -40.35600 528.53357 -43.42564 528.53357 C
-79.96734 528.53357 L
-83.04775 528.53357 -85.53572 531.02438 -85.53572 534.10479 C
-85.53572 568.86378 L
@c
-85.53572 621.14542 m
-85.53572 624.21534 -83.04775 626.70302 -79.96734 626.70302 C
-16.42535 626.70302 L
-13.34778 626.70302 -10.85698 624.21534 -10.85698 621.14542 C
-10.85698 586.37310 L
-10.85698 583.30602 -13.34778 580.81550 -16.42535 580.81550 C
-79.96734 580.81550 L
-83.04775 580.81550 -85.53572 583.30602 -85.53572 586.37310 C
-85.53572 621.14542 L
@c
-4.56746 621.14542 m
-4.56746 624.21534 -2.07694 626.70302 1.00346 626.70302 C
37.73310 626.70302 L
40.80529 626.70302 43.29326 624.21534 43.29326 621.14542 C
43.29326 586.37310 L
43.29326 583.30602 40.80529 580.81550 37.73310 580.81550 C
1.00346 580.81550 L
-2.07694 580.81550 -4.56746 583.30602 -4.56746 586.37310 C
-4.56746 621.14542 L
@c
48.77320 621.14542 m
48.77320 624.21534 51.27477 626.70302 54.34441 626.70302 C
91.07376 626.70302 L
94.14340 626.70302 96.63420 624.21534 96.63420 621.14542 C
96.63420 586.37310 L
96.63420 583.30602 94.14340 580.81550 91.07376 580.81550 C
54.34441 580.81550 L
51.27477 580.81550 48.77320 583.30602 48.77320 586.37310 C
48.77320 621.14542 L
@c
102.63430 621.14542 m
102.63430 624.21534 105.12482 626.70302 108.19446 626.70302 C
144.92409 626.70302 L
148.00450 626.70302 150.49502 624.21534 150.49502 621.14542 C
150.49502 586.37310 L
150.49502 583.30602 148.00450 580.81550 144.92409 580.81550 C
108.19446 580.81550 L
105.12482 580.81550 102.63430 583.30602 102.63430 586.37310 C
102.63430 621.14542 L
@c
156.73380 621.14542 m
156.73380 624.21534 159.22431 626.70302 162.30472 626.70302 C
198.97257 626.70302 L
202.04220 626.70302 204.53301 624.21534 204.53301 621.14542 C
204.53301 586.37310 L
204.53301 583.30602 202.04220 580.81550 198.97257 580.81550 C
162.30472 580.81550 L
159.22431 580.81550 156.73380 583.30602 156.73380 586.37310 C
156.73380 621.14542 L
@c
210.39335 621.14542 m
210.39335 624.21534 212.88416 626.70302 215.95380 626.70302 C
252.68315 626.70302 L
255.75307 626.70302 258.25436 624.21534 258.25436 621.14542 C
258.25436 586.37310 L
258.25436 583.30602 255.75307 580.81550 252.68315 580.81550 C
215.95380 580.81550 L
212.88416 580.81550 210.39335 583.30602 210.39335 586.37310 C
210.39335 621.14542 L
@c
263.81480 621.14542 m
263.81480 624.21534 266.30277 626.70302 269.38318 626.70302 C
306.09383 626.70302 L
309.16346 626.70302 311.65398 624.21534 311.65398 621.14542 C
311.65398 586.37310 L
311.65398 583.30602 309.16346 580.81550 306.09383 580.81550 C
269.38318 580.81550 L
266.30277 580.81550 263.81480 583.30602 263.81480 586.37310 C
263.81480 621.14542 L
@c
317.53361 621.14542 m
317.53361 624.21534 320.03206 626.70302 323.10454 626.70302 C
359.83389 626.70302 L
362.90381 626.70302 365.40510 624.21534 365.40510 621.14542 C
365.40510 586.37310 L
365.40510 583.30602 362.90381 580.81550 359.83389 580.81550 C
323.10454 580.81550 L
320.03206 580.81550 317.53361 583.30602 317.53361 586.37310 C
317.53361 621.14542 L
@c
371.69461 621.14542 m
371.69461 624.21534 374.18542 626.70302 377.26299 626.70302 C
413.99235 626.70302 L
417.06227 626.70302 419.55279 624.21534 419.55279 621.14542 C
419.55279 586.37310 L
419.55279 583.30602 417.06227 580.81550 413.99235 580.81550 C
377.26299 580.81550 L
374.18542 580.81550 371.69461 583.30602 371.69461 586.37310 C
371.69461 621.14542 L
@c
425.59313 621.14542 m
425.59313 624.21534 428.08365 626.70302 431.16406 626.70302 C
467.89370 626.70302 L
470.96334 626.70302 473.45386 624.21534 473.45386 621.14542 C
473.45386 586.37310 L
473.45386 583.30602 470.96334 580.81550 467.89370 580.81550 C
431.16406 580.81550 L
428.08365 580.81550 425.59313 583.30602 425.59313 586.37310 C
425.59313 621.14542 L
@c
479.51291 621.14542 m
479.51291 624.21534 482.01420 626.70302 485.08413 626.70302 C
521.81348 626.70302 L
524.88312 626.70302 527.38441 624.21534 527.38441 621.14542 C
527.38441 586.37310 L
527.38441 583.30602 524.88312 580.81550 521.81348 580.81550 C
485.08413 580.81550 L
482.01420 580.81550 479.51291 583.30602 479.51291 586.37310 C
479.51291 621.14542 L
@c
533.51320 621.14542 m
533.51320 624.21534 536.01449 626.70302 539.08441 626.70302 C
575.75480 626.70302 L
578.82444 626.70302 581.31524 624.21534 581.31524 621.14542 C
581.31524 586.37310 L
581.31524 583.30602 578.82444 580.81550 575.75480 580.81550 C
539.08441 580.81550 L
536.01449 580.81550 533.51320 583.30602 533.51320 586.37310 C
533.51320 621.14542 L
@c
608.29370 534.10479 m
608.29370 531.02438 605.80318 528.53357 602.72277 528.53357 C
566.24258 528.53357 L
563.16501 528.53357 560.67420 531.02438 560.67420 534.10479 C
560.67420 568.86378 L
560.67420 571.94419 563.16501 574.43471 566.24258 574.43471 C
602.72277 574.43471 L
605.80318 574.43471 608.29370 571.94419 608.29370 568.86378 C
608.29370 534.10479 L
@c
592.80321 476.09376 m
589.72280 476.09376 587.23483 478.58428 587.23483 481.65420 C
587.23483 516.42369 L
587.23483 519.49332 589.72280 521.99490 592.80321 521.99490 C
629.42258 521.99490 L
632.49222 521.99490 634.98302 519.49332 634.98302 516.42369 C
634.98302 481.65420 L
634.98302 478.58428 632.49222 476.09376 629.42258 476.09376 C
592.80321 476.09376 L
@c
552.11386 423.65367 m
549.04422 423.65367 546.54293 426.14447 546.54293 429.21411 C
546.54293 463.98387 L
546.54293 467.05606 549.04422 469.54403 552.11386 469.54403 C
588.73351 469.54403 L
591.81392 469.54403 594.30189 467.05606 594.30189 463.98387 C
594.30189 429.21411 L
594.30189 426.14447 591.81392 423.65367 588.73351 423.65367 C
552.11386 423.65367 L
@c
519.85361 411.77424 m
519.85361 414.84416 522.34441 417.33468 525.41405 417.33468 C
562.04419 417.33468 L
565.11383 417.33468 567.60180 414.84416 567.60180 411.77424 C
567.60180 377.00476 L
567.60180 373.93512 565.11383 371.44431 562.04419 371.44431 C
525.41405 371.44431 L
522.34441 371.44431 519.85361 373.93512 519.85361 377.00476 C
519.85361 411.77424 L
@c
498.59348 423.65367 m
495.51307 423.65367 493.02227 426.14447 493.02227 429.21411 C
493.02227 463.98387 L
493.02227 467.05606 495.51307 469.54403 498.59348 469.54403 C
535.21285 469.54403 L
538.29354 469.54403 540.78406 467.05606 540.78406 463.98387 C
540.78406 429.21411 L
540.78406 426.14447 538.29354 423.65367 535.21285 423.65367 C
498.59348 423.65367 L
@c
465.77282 411.77424 m
465.77282 414.84416 468.26362 417.33468 471.34403 417.33468 C
507.96340 417.33468 L
511.04409 417.33468 513.53178 414.84416 513.53178 411.77424 C
513.53178 377.00476 L
513.53178 373.93512 511.04409 371.44431 507.96340 371.44431 C
471.34403 371.44431 L
468.26362 371.44431 465.77282 373.93512 465.77282 377.00476 C
465.77282 411.77424 L
@c
438.99250 463.98387 m
438.99250 467.05606 441.48331 469.54403 444.56372 469.54403 C
481.18309 469.54403 L
484.25301 469.54403 486.75430 467.05606 486.75430 463.98387 C
486.75430 429.21411 L
486.75430 426.14447 484.25301 423.65367 481.18309 423.65367 C
444.56372 423.65367 L
441.48331 423.65367 438.99250 426.14447 438.99250 429.21411 C
438.99250 463.98387 L
@c
500.40312 534.10479 m
500.40312 531.02438 497.91260 528.53357 494.84268 528.53357 C
458.30381 528.53357 L
455.22340 528.53357 452.73260 531.02438 452.73260 534.10479 C
452.73260 568.86378 L
452.73260 571.94419 455.22340 574.43471 458.30381 574.43471 C
494.84268 574.43471 L
497.91260 574.43471 500.40312 571.94419 500.40312 568.86378 C
500.40312 534.10479 L
@c
521.71427 521.99490 m
524.79213 521.99490 527.28265 519.49332 527.28265 516.42369 C
527.28265 481.65420 L
527.28265 478.58428 524.79213 476.09376 521.71427 476.09376 C
485.09461 476.09376 L
482.02243 476.09376 479.52369 478.58428 479.52369 481.65420 C
479.52369 516.42369 L
479.52369 519.49332 482.02243 521.99490 485.09461 521.99490 C
521.71427 521.99490 L
@c
575.68507 521.99490 m
578.75216 521.99490 581.24268 519.49332 581.24268 516.42369 C
581.24268 481.65420 L
581.24268 478.58428 578.75216 476.09376 575.68507 476.09376 C
539.06287 476.09376 L
535.98246 476.09376 533.49449 478.58428 533.49449 481.65420 C
533.49449 516.42369 L
533.49449 519.49332 535.98246 521.99490 539.06287 521.99490 C
575.68507 521.99490 L
@c
554.08167 534.10479 m
554.08167 531.02438 551.58293 528.53357 548.51329 528.53357 C
511.97414 528.53357 L
508.90450 528.53357 506.41398 531.02438 506.41398 534.10479 C
506.41398 568.86378 L
506.41398 571.94419 508.90450 574.43471 511.97414 574.43471 C
548.51329 574.43471 L
551.58293 574.43471 554.08167 571.94419 554.08167 568.86378 C
554.08167 534.10479 L
@c
431.41351 476.09376 m
428.33310 476.09376 425.84230 478.58428 425.84230 481.65420 C
425.84230 516.42369 L
425.84230 519.49332 428.33310 521.99490 431.41351 521.99490 C
468.03288 521.99490 L
471.10280 521.99490 473.60409 519.49332 473.60409 516.42369 C
473.60409 481.65420 L
473.60409 478.58428 471.10280 476.09376 468.03288 476.09376 C
431.41351 476.09376 L
@c
385.33266 463.98387 m
385.33266 467.05606 387.82346 469.54403 390.90387 469.54403 C
427.52324 469.54403 L
430.59317 469.54403 433.08369 467.05606 433.08369 463.98387 C
433.08369 429.21411 L
433.08369 426.14447 430.59317 423.65367 427.52324 423.65367 C
390.90387 423.65367 L
387.82346 423.65367 385.33266 426.14447 385.33266 429.21411 C
385.33266 463.98387 L
@c
398.59285 534.10479 m
398.59285 568.86378 L
398.59285 571.94419 401.08365 574.43471 404.15329 574.43471 C
440.69244 574.43471 L
443.76463 574.43471 446.26337 571.94419 446.26337 568.86378 C
446.26337 534.10479 L
446.26337 531.02438 443.76463 528.53357 440.69244 528.53357 C
404.15329 528.53357 L
401.08365 528.53357 398.59285 531.02438 398.59285 534.10479 C
@c
377.36220 476.09376 m
374.29257 476.09376 371.80460 478.58428 371.80460 481.65420 C
371.80460 516.42369 L
371.80460 519.49332 374.29257 521.99490 377.36220 521.99490 C
413.97364 521.99490 L
417.04356 521.99490 419.53408 519.49332 419.53408 516.42369 C
419.53408 481.65420 L
419.53408 478.58428 417.04356 476.09376 413.97364 476.09376 C
377.36220 476.09376 L
@c
337.06431 423.65367 m
333.99468 423.65367 331.49339 426.14447 331.49339 429.21411 C
331.49339 463.98387 L
331.49339 467.05606 333.99468 469.54403 337.06431 469.54403 C
373.68397 469.54403 L
376.76438 469.54403 379.25490 467.05606 379.25490 463.98387 C
379.25490 429.21411 L
379.25490 426.14447 376.76438 423.65367 373.68397 423.65367 C
337.06431 423.65367 L
@c
304.37263 411.77424 m
304.37263 414.84416 306.87392 417.33468 309.94356 417.33468 C
346.56321 417.33468 L
349.64362 417.33468 352.13414 414.84416 352.13414 411.77424 C
352.13414 377.00476 L
352.13414 373.93512 349.64362 371.44431 346.56321 371.44431 C
309.94356 371.44431 L
306.87392 371.44431 304.37263 373.93512 304.37263 377.00476 C
304.37263 411.77424 L
@c
283.81209 423.65367 m
280.73424 423.65367 278.24372 426.14447 278.24372 429.21411 C
278.24372 463.98387 L
278.24372 467.05606 280.73424 469.54403 283.81209 469.54403 C
319.86340 469.54403 L
322.94381 469.54403 325.43433 467.05606 325.43433 463.98387 C
325.43433 429.21411 L
325.43433 426.14447 322.94381 423.65367 319.86340 423.65367 C
283.81209 423.65367 L
@c
250.57332 411.77424 m
250.57332 414.84416 253.06384 417.33468 256.14454 417.33468 C
292.76391 417.33468 L
295.83354 417.33468 298.33228 414.84416 298.33228 411.77424 C
298.33228 377.00476 L
298.33228 373.93512 295.83354 371.44431 292.76391 371.44431 C
256.14454 371.44431 L
253.06384 371.44431 250.57332 373.93512 250.57332 377.00476 C
250.57332 411.77424 L
@c
229.85206 423.65367 m
226.78243 423.65367 224.29446 426.14447 224.29446 429.21411 C
224.29446 463.98387 L
224.29446 467.05606 226.78243 469.54403 229.85206 469.54403 C
266.19279 469.54403 L
269.27320 469.54403 271.76372 467.05606 271.76372 463.98387 C
271.76372 429.21411 L
271.76372 426.14447 269.27320 423.65367 266.19279 423.65367 C
229.85206 423.65367 L
@c
196.64277 411.77424 m
196.64277 414.84416 199.13329 417.33468 202.20321 417.33468 C
238.83335 417.33468 L
241.90299 417.33468 244.39380 414.84416 244.39380 411.77424 C
244.39380 377.00476 L
244.39380 373.93512 241.90299 371.44431 238.83335 371.44431 C
202.20321 371.44431 L
199.13329 371.44431 196.64277 373.93512 196.64277 377.00476 C
196.64277 411.77424 L
@c
176.02328 423.65367 m
172.95364 423.65367 170.45490 426.14447 170.45490 429.21411 C
170.45490 463.98387 L
170.45490 467.05606 172.95364 469.54403 176.02328 469.54403 C
212.30249 469.54403 L
215.37468 469.54403 217.86548 467.05606 217.86548 463.98387 C
217.86548 429.21411 L
217.86548 426.14447 215.37468 423.65367 212.30249 423.65367 C
176.02328 423.65367 L
@c
143.21339 411.77424 m
143.21339 414.84416 145.71213 417.33468 148.78460 417.33468 C
185.40397 417.33468 L
188.48466 417.33468 190.97235 414.84416 190.97235 411.77424 C
190.97235 377.00476 L
190.97235 373.93512 188.48466 371.44431 185.40397 371.44431 C
148.78460 371.44431 L
145.71213 371.44431 143.21339 373.93512 143.21339 377.00476 C
143.21339 411.77424 L
@c
116.56460 463.98387 m
116.56460 467.05606 119.05257 469.54403 122.12504 469.54403 C
158.69339 469.54403 L
161.77380 469.54403 164.26460 467.05606 164.26460 463.98387 C
164.26460 429.21411 L
164.26460 426.14447 161.77380 423.65367 158.69339 423.65367 C
122.12504 423.65367 L
119.05257 423.65367 116.56460 426.14447 116.56460 429.21411 C
116.56460 463.98387 L
@c
177.61323 534.10479 m
177.61323 531.02438 175.11449 528.53357 172.04202 528.53357 C
135.79257 528.53357 L
132.71471 528.53357 130.22419 531.02438 130.22419 534.10479 C
130.22419 568.86378 L
130.22419 571.94419 132.71471 574.43471 135.79257 574.43471 C
172.04202 574.43471 L
175.11449 574.43471 177.61323 571.94419 177.61323 568.86378 C
177.61323 534.10479 L
@c
198.65339 521.99490 m
201.73380 521.99490 204.22460 519.49332 204.22460 516.42369 C
204.22460 481.65420 L
204.22460 478.58428 201.73380 476.09376 198.65339 476.09376 C
162.03402 476.09376 L
158.95361 476.09376 156.46280 478.58428 156.46280 481.65420 C
156.46280 516.42369 L
156.46280 519.49332 158.95361 521.99490 162.03402 521.99490 C
198.65339 521.99490 L
@c
230.78494 534.10479 m
230.78494 531.02438 228.29443 528.53357 225.22195 528.53357 C
188.70435 528.53357 L
185.63471 528.53357 183.13342 531.02438 183.13342 534.10479 C
183.13342 568.86378 L
183.13342 571.94419 185.63471 574.43471 188.70435 574.43471 C
225.22195 574.43471 L
228.29443 574.43471 230.78494 571.94419 230.78494 568.86378 C
230.78494 534.10479 L
@c
252.54397 521.99490 m
255.61361 521.99490 258.10413 519.49332 258.10413 516.42369 C
258.10413 481.65420 L
258.10413 478.58428 255.61361 476.09376 252.54397 476.09376 C
215.91354 476.09376 L
212.84391 476.09376 210.35339 478.58428 210.35339 481.65420 C
210.35339 516.42369 L
210.35339 519.49332 212.84391 521.99490 215.91354 521.99490 C
252.54397 521.99490 L
@c
285.09364 534.10479 m
285.09364 531.02438 282.60312 528.53357 279.53320 528.53357 C
242.99433 528.53357 L
239.92441 528.53357 237.43389 531.02438 237.43389 534.10479 C
237.43389 568.86378 L
237.43389 571.94419 239.92441 574.43471 242.99433 574.43471 C
279.53320 574.43471 L
282.60312 574.43471 285.09364 571.94419 285.09364 568.86378 C
285.09364 534.10479 L
@c
306.22252 521.99490 m
309.29471 521.99490 311.78268 519.49332 311.78268 516.42369 C
311.78268 481.65420 L
311.78268 478.58428 309.29471 476.09376 306.22252 476.09376 C
269.61364 476.09376 L
266.54400 476.09376 264.05320 478.58428 264.05320 481.65420 C
264.05320 516.42369 L
264.05320 519.49332 266.54400 521.99490 269.61364 521.99490 C
306.22252 521.99490 L
@c
338.84447 534.10479 m
338.84447 531.02438 336.35395 528.53357 333.27354 528.53357 C
296.74261 528.53357 L
293.66476 528.53357 291.17424 531.02438 291.17424 534.10479 C
291.17424 568.86378 L
291.17424 571.94419 293.66476 574.43471 296.74261 574.43471 C
333.27354 574.43471 L
336.35395 574.43471 338.84447 571.94419 338.84447 568.86378 C
338.84447 534.10479 L
@c
345.08324 534.10479 m
345.08324 568.86378 L
345.08324 571.94419 347.57376 574.43471 350.64369 574.43471 C
387.18255 574.43471 L
390.26324 574.43471 392.75376 571.94419 392.75376 568.86378 C
392.75376 534.10479 L
392.75376 531.02438 390.26324 528.53357 387.18255 528.53357 C
350.64369 528.53357 L
347.57376 528.53357 345.08324 531.02438 345.08324 534.10479 C
@c
359.97335 521.99490 m
363.04299 521.99490 365.53380 519.49332 365.53380 516.42369 C
365.53380 481.65420 L
365.53380 478.58428 363.04299 476.09376 359.97335 476.09376 C
323.36476 476.09376 L
320.29228 476.09376 317.80431 478.58428 317.80431 481.65420 C
317.80431 516.42369 L
317.80431 519.49332 320.29228 521.99490 323.36476 521.99490 C
359.97335 521.99490 L
@c
108.71461 476.09376 m
105.64498 476.09376 103.15417 478.58428 103.15417 481.65420 C
103.15417 516.42369 L
103.15417 519.49332 105.64498 521.99490 108.71461 521.99490 C
145.05279 521.99490 L
148.13320 521.99490 150.62372 519.49332 150.62372 516.42369 C
150.62372 481.65420 L
150.62372 478.58428 148.13320 476.09376 145.05279 476.09376 C
108.71461 476.09376 L
@c
68.23446 423.65367 m
65.15405 423.65367 62.66353 426.14447 62.66353 429.21411 C
62.66353 463.98387 L
62.66353 467.05606 65.15405 469.54403 68.23446 469.54403 C
104.85411 469.54403 L
107.93452 469.54403 110.42504 467.05606 110.42504 463.98387 C
110.42504 429.21411 L
110.42504 426.14447 107.93452 423.65367 104.85411 423.65367 C
68.23446 423.65367 L
@c
35.49430 411.77424 m
35.49430 414.84416 37.99304 417.33468 41.06268 417.33468 C
77.68233 417.33468 L
80.76274 417.33468 83.25326 414.84416 83.25326 411.77424 C
83.25326 377.00476 L
83.25326 373.93512 80.76274 371.44431 77.68233 371.44431 C
41.06268 371.44431 L
37.99304 371.44431 35.49430 373.93512 35.49430 377.00476 C
35.49430 411.77424 L
@c
8.66324 463.98387 m
8.66324 467.05606 11.15376 469.54403 14.23417 469.54403 C
50.85383 469.54403 L
53.93424 469.54403 56.42476 467.05606 56.42476 463.98387 C
56.42476 429.21411 L
56.42476 426.14447 53.93424 423.65367 50.85383 423.65367 C
14.23417 423.65367 L
11.15376 423.65367 8.66324 426.14447 8.66324 429.21411 C
8.66324 463.98387 L
@c
70.07357 534.10479 m
70.07357 531.02438 67.58306 528.53357 64.50265 528.53357 C
27.97427 528.53357 L
24.89386 528.53357 22.40306 531.02438 22.40306 534.10479 C
22.40306 568.86378 L
22.40306 571.94419 24.89386 574.43471 27.97427 574.43471 C
64.50265 574.43471 L
67.58306 574.43471 70.07357 571.94419 70.07357 568.86378 C
70.07357 534.10479 L
@c
76.43310 534.10479 m
76.43310 568.86378 L
76.43310 571.94419 78.92362 574.43471 81.99326 574.43471 C
118.20274 574.43471 L
121.27238 574.43471 123.76290 571.94419 123.76290 568.86378 C
123.76290 534.10479 L
123.76290 531.02438 121.27238 528.53357 118.20274 528.53357 C
81.99326 528.53357 L
78.92362 528.53357 76.43310 531.02438 76.43310 534.10479 C
@c
91.41420 521.99490 m
94.48413 521.99490 96.97465 519.49332 96.97465 516.42369 C
96.97465 481.65420 L
96.97465 478.58428 94.48413 476.09376 91.41420 476.09376 C
54.83225 476.09376 L
51.76261 476.09376 49.27465 478.58428 49.27465 481.65420 C
49.27465 516.42369 L
49.27465 519.49332 51.76261 521.99490 54.83225 521.99490 C
91.41420 521.99490 L
@c
-25.82759 528.53357 m
-28.89751 528.53357 -31.38520 531.02438 -31.38520 534.10479 C
-31.38520 568.86378 L
-31.38520 571.94419 -28.89751 574.43471 -25.82759 574.43471 C
10.71411 574.43471 L
13.79452 574.43471 16.28249 571.94419 16.28249 568.86378 C
16.28249 534.10479 L
16.28249 531.02438 13.79452 528.53357 10.71411 528.53357 C
-25.82759 528.53357 L
@c
-4.60488 516.42369 m
-4.60488 519.49332 -2.11720 521.99490 0.95272 521.99490 C
37.58287 521.99490 L
40.65250 521.99490 43.14331 519.49332 43.14331 516.42369 C
43.14331 481.65420 L
43.14331 478.58428 40.65250 476.09376 37.58287 476.09376 C
0.95272 476.09376 L
-2.11720 476.09376 -4.60488 478.58428 -4.60488 481.65420 C
-4.60488 516.42369 L
@c
587.45452 621.14542 m
587.45452 624.21534 589.94249 626.70302 593.01496 626.70302 C
629.68280 626.70302 L
632.75244 626.70302 635.25373 624.21534 635.25373 621.14542 C
635.25373 586.37310 L
635.25373 583.30602 632.75244 580.81550 629.68280 580.81550 C
593.01496 580.81550 L
589.94249 580.81550 587.45452 583.30602 587.45452 586.37310 C
587.45452 621.14542 L
@c
683.06372 634.66554 m
-79.94580 634.66554 L
-87.28639 634.66554 -93.23546 628.71392 -93.23546 621.37616 C
-93.23546 324.23499 L
-93.23546 316.90517 -87.28639 310.71487 -79.94580 310.71487 C
683.06372 310.71487 L
690.39354 310.71487 696.34261 316.90517 696.34261 324.23499 C
696.34261 621.37616 L
696.34261 628.71392 690.39354 634.66554 683.06372 634.66554 C
@c
F

@rax %Note: Object
-122.44479 320.26450 -97.49565 625.12413 @E
/$fm 1 def
 0 O 0 @g
0.7500 0.6800 0.6700 0.9000  create_cmyk_color set_solid_fill
-117.18482 320.26450 m
-122.44479 625.12413 L
-97.49565 625.12413 L
-108.71291 320.26450 L
-117.18482 320.26450 L
@c
F

@rax %Note: Object
-122.44479 320.26450 -97.49565 625.12413 @E
/$fm 1 def
0 J 0 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 1.00006 1.00006 0.00000 @w
-117.18482 320.26450 m
-122.44479 625.12413 L
-97.49565 625.12413 L
-108.71291 320.26450 L
-117.18482 320.26450 L
@c
S

@rax %Note: Object
700.88627 320.26450 725.83540 625.12413 @E
/$fm 1 def
 0 O 0 @g
0.7500 0.6800 0.6700 0.9000  create_cmyk_color set_solid_fill
706.14369 320.26450 m
700.88627 625.12413 L
725.83540 625.12413 L
714.61559 320.26450 L
706.14369 320.26450 L
@c
F

@rax %Note: Object
700.88627 320.26450 725.83540 625.12413 @E
/$fm 1 def
0 J 0 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 1.00006 1.00006 0.00000 @w
706.14369 320.26450 m
700.88627 625.12413 L
725.83540 625.12413 L
714.61559 320.26450 L
706.14369 320.26450 L
@c
S

@rax %Note: Object
-102.59490 297.39685 704.85477 306.36482 @E
/$fm 1 def
 0 O 0 @g
0.7500 0.6800 0.6700 0.9000  create_cmyk_color set_solid_fill
704.85477 306.36482 m
697.59184 305.76416 L
-95.64576 305.76416 L
-102.59490 306.36482 L
-102.59490 297.39685 L
-95.40709 297.86598 L
697.45238 297.86598 L
704.85477 297.41556 L
704.85477 306.36482 L
@c
F

@rax %Note: Object
-102.59490 297.39685 704.85477 306.36482 @E
/$fm 1 def
0 J 0 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 1.00006 1.00006 0.00000 @w
704.85477 306.36482 m
697.59184 305.76416 L
-95.64576 305.76416 L
-102.59490 306.36482 L
-102.59490 297.39685 L
-95.40709 297.86598 L
697.45238 297.86598 L
704.85477 297.41556 L
704.85477 306.36482 L
@c
S

@rax %Note: Object
-91.23562 638.45093 694.34249 663.40290 @E
/$fm 1 def
 0 O 0 @g
0.7500 0.6800 0.6700 0.9000  create_cmyk_color set_solid_fill
668.13335 647.22331 m
661.09294 647.22331 L
659.17332 647.22331 657.60236 648.79427 657.60236 650.71389 C
657.60236 652.63351 659.17332 654.20164 661.09294 654.20164 C
668.13335 654.20164 L
670.05298 654.20164 671.62394 652.63351 671.62394 650.71389 C
671.62394 648.79427 670.05298 647.22331 668.13335 647.22331 C
@c
310.17430 648.89348 m
292.93285 648.89348 L
291.65386 648.89348 290.61383 649.93380 290.61383 651.21250 C
290.61383 652.49121 291.65386 653.53153 292.93285 653.53153 C
310.17430 653.53153 L
311.45301 653.53153 312.49332 652.49121 312.49332 651.21250 C
312.49332 649.93380 311.45301 648.89348 310.17430 648.89348 C
@c
95.14346 648.00340 m
-65.80630 648.00340 L
-67.51701 648.00340 -68.91647 649.40287 -68.91647 651.11329 C
-68.91647 652.82372 -67.51701 654.22318 -65.80630 654.22318 C
95.14346 654.22318 L
96.85389 654.22318 98.25335 652.82372 98.25335 651.11329 C
98.25335 649.40287 96.85389 648.00340 95.14346 648.00340 C
@c
-91.23562 663.40290 m
-91.23562 638.45093 L
694.34249 638.45093 L
694.34249 663.40290 L
-91.23562 663.40290 L
@c
F

@rax %Note: Object
-91.23562 638.45093 694.34249 663.40290 @E
/$fm 1 def
0 J 0 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 1.00006 1.00006 0.00000 @w
668.13335 647.22331 m
661.09294 647.22331 L
659.17332 647.22331 657.60236 648.79427 657.60236 650.71389 C
657.60236 652.63351 659.17332 654.20164 661.09294 654.20164 C
668.13335 654.20164 L
670.05298 654.20164 671.62394 652.63351 671.62394 650.71389 C
671.62394 648.79427 670.05298 647.22331 668.13335 647.22331 C
@c
310.17430 648.89348 m
292.93285 648.89348 L
291.65386 648.89348 290.61383 649.93380 290.61383 651.21250 C
290.61383 652.49121 291.65386 653.53153 292.93285 653.53153 C
310.17430 653.53153 L
311.45301 653.53153 312.49332 652.49121 312.49332 651.21250 C
312.49332 649.93380 311.45301 648.89348 310.17430 648.89348 C
@c
95.14346 648.00340 m
-65.80630 648.00340 L
-67.51701 648.00340 -68.91647 649.40287 -68.91647 651.11329 C
-68.91647 652.82372 -67.51701 654.22318 -65.80630 654.22318 C
95.14346 654.22318 L
96.85389 654.22318 98.25335 652.82372 98.25335 651.11329 C
98.25335 649.40287 96.85389 648.00340 95.14346 648.00340 C
@c
-91.23562 663.40290 m
-91.23562 638.45093 L
694.34249 638.45093 L
694.34249 663.40290 L
-91.23562 663.40290 L
@c
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
