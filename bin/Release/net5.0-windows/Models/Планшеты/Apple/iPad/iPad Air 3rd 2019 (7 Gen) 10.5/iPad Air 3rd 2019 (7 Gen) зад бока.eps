%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 154 190 669 919 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2019 (64-Bit)
%%Title: iPad Air 3rd Gen зад бока.eps
%%CreationDate: Sat Jan 18 13:55:08 2020
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2019 (64-Bit) Версия 21.3.0.755
/EpsFile true def
%%BeginResource: procset wCorel21Dict 21.0 0
/wCorel21Dict 300 dict def wCorel21Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel21Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 841 1190
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
155.22605 190.66762 667.99701 918.13578 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.7500 0.6800 0.6700 0.9000  create_cmyk_color set_outline
0 0.50003 0.50003 0.00000 @w
660.49115 561.56683 m
658.04400 561.56683 656.06003 563.52076 656.06003 565.92964 C
656.06003 568.33965 658.04400 570.29386 660.49115 570.29386 C
662.93717 570.29386 664.92000 568.33965 664.92000 565.92964 C
664.92000 563.52076 662.93717 561.56683 660.49115 561.56683 C
@c
660.49115 550.32180 m
658.04400 550.32180 656.06003 552.27487 656.06003 554.68460 C
656.06003 557.09461 658.04400 559.04882 660.49115 559.04882 C
662.93717 559.04882 664.92000 557.09461 664.92000 554.68460 C
664.92000 552.27487 662.93717 550.32180 660.49115 550.32180 C
@c
660.49115 539.17172 m
658.04400 539.17172 656.06003 541.12479 656.06003 543.53480 C
656.06003 545.94482 658.04400 547.89874 660.49115 547.89874 C
662.93717 547.89874 664.92000 545.94482 664.92000 543.53480 C
664.92000 541.12479 662.93717 539.17172 660.49115 539.17172 C
@c
543.09827 197.30381 m
541.75011 197.30381 540.65622 198.38069 540.65622 199.70986 C
540.65622 201.03874 541.75011 202.11562 543.09827 202.11562 C
544.44813 202.11562 545.54202 201.03874 545.54202 199.70986 C
545.54202 198.38069 544.44813 197.30381 543.09827 197.30381 C
@c
536.61713 197.30381 m
535.26813 197.30381 534.17424 198.38069 534.17424 199.70986 C
534.17424 201.03874 535.26813 202.11562 536.61713 202.11562 C
537.96699 202.11562 539.06003 201.03874 539.06003 199.70986 C
539.06003 198.38069 537.96699 197.30381 536.61713 197.30381 C
@c
530.14110 197.30381 m
528.79323 197.30381 527.69820 198.38069 527.69820 199.70986 C
527.69820 201.03874 528.79323 202.11562 530.14110 202.11562 C
531.49124 202.11562 532.58513 201.03874 532.58513 199.70986 C
532.58513 198.38069 531.49124 197.30381 530.14110 197.30381 C
@c
523.77307 197.30381 m
522.42406 197.30381 521.33017 198.38069 521.33017 199.70986 C
521.33017 201.03874 522.42406 202.11562 523.77307 202.11562 C
525.12208 202.11562 526.21512 201.03874 526.21512 199.70986 C
526.21512 198.38069 525.12208 197.30381 523.77307 197.30381 C
@c
517.55216 197.30381 m
516.20117 197.30381 515.10813 198.38069 515.10813 199.70986 C
515.10813 201.03874 516.20117 202.11562 517.55216 202.11562 C
518.90003 202.11562 519.99307 201.03874 519.99307 199.70986 C
519.99307 198.38069 518.90003 197.30381 517.55216 197.30381 C
@c
511.05203 197.30381 m
509.70217 197.30381 508.60913 198.38069 508.60913 199.70986 C
508.60913 201.03874 509.70217 202.11562 511.05203 202.11562 C
512.40104 202.11562 513.49521 201.03874 513.49521 199.70986 C
513.49521 198.38069 512.40104 197.30381 511.05203 197.30381 C
@c
504.80419 197.30381 m
503.45405 197.30381 502.36101 198.38069 502.36101 199.70986 C
502.36101 201.03874 503.45405 202.11562 504.80419 202.11562 C
506.15206 202.11562 507.24709 201.03874 507.24709 199.70986 C
507.24709 198.38069 506.15206 197.30381 504.80419 197.30381 C
@c
498.47811 197.30381 m
497.12910 197.30381 496.03606 198.38069 496.03606 199.70986 C
496.03606 201.03874 497.12910 202.11562 498.47811 202.11562 C
499.82712 202.11562 500.92101 201.03874 500.92101 199.70986 C
500.92101 198.38069 499.82712 197.30381 498.47811 197.30381 C
@c
492.16507 197.30381 m
490.81521 197.30381 489.72104 198.38069 489.72104 199.70986 C
489.72104 201.03874 490.81521 202.11562 492.16507 202.11562 C
493.51323 202.11562 494.60825 201.03874 494.60825 199.70986 C
494.60825 198.38069 493.51323 197.30381 492.16507 197.30381 C
@c
485.86507 197.30381 m
484.51606 197.30381 483.42302 198.38069 483.42302 199.70986 C
483.42302 201.03874 484.51606 202.11562 485.86507 202.11562 C
487.21521 202.11562 488.30825 201.03874 488.30825 199.70986 C
488.30825 198.38069 487.21521 197.30381 485.86507 197.30381 C
@c
479.39924 197.30381 m
478.05024 197.30381 476.95606 198.38069 476.95606 199.70986 C
476.95606 201.03874 478.05024 202.11562 479.39924 202.11562 C
480.74825 202.11562 481.84299 201.03874 481.84299 199.70986 C
481.84299 198.38069 480.74825 197.30381 479.39924 197.30381 C
@c
452.07524 542.35077 m
451.77817 541.54772 451.47515 540.73077 451.15824 539.91865 C
449.20800 534.95660 446.30107 530.07477 442.27219 524.99480 C
440.60400 522.89376 439.18214 521.41975 437.66107 520.21474 C
435.36302 518.39461 432.88413 517.47165 430.28816 517.47165 C
429.16110 517.47165 427.99011 517.64570 426.80523 517.98983 C
424.93209 518.53266 423.05811 519.23169 421.24507 519.90661 C
421.01518 519.99364 L
418.61820 520.88570 416.15717 521.33868 413.69924 521.33868 C
410.93206 521.33868 408.07899 520.76381 405.21912 519.63165 C
403.15521 518.81386 401.12306 518.04170 398.96306 517.59071 C
398.23427 517.43877 397.50917 517.36167 396.80504 517.36167 C
394.61414 517.36167 392.56016 518.07883 390.52800 519.55370 C
388.11713 521.30580 386.15924 523.57663 384.56107 525.56683 C
379.65912 531.67266 375.99222 538.49764 373.66611 545.85383 C
371.59512 552.39676 370.71099 558.48784 370.96016 564.47660 C
371.26205 571.73868 373.34920 577.36460 377.26526 582.29887 C
381.34205 587.43383 386.80413 590.22170 393.25011 591.08287 C
393.92816 591.17386 394.62605 591.21978 395.32620 591.21978 C
397.50321 591.21978 399.74400 591.09676 402.45704 590.18173 C
403.23515 589.91868 L
405.38920 589.19386 407.61723 588.44381 409.77723 587.63565 C
410.55222 587.34680 411.32721 587.20677 412.15011 587.20677 C
413.13827 587.20677 414.16809 587.40860 415.39124 587.84287 C
418.53203 588.95575 421.17307 589.87162 423.84813 590.71975 C
426.13002 591.44372 428.16813 591.79578 430.08009 591.79578 C
430.33209 591.79578 430.58409 591.78983 430.83723 591.77679 C
436.81805 591.47887 441.31209 589.86765 445.26302 586.75578 C
446.74611 585.58961 448.05005 584.22784 449.23521 582.60472 C
442.06413 577.54573 438.31899 570.95263 438.92702 562.16778 C
439.51606 553.63975 443.89417 547.35477 452.30400 542.96787 C
452.07524 542.35077 L
@c
419.43600 195.09080 m
403.78620 195.09080 L
401.23814 195.09080 399.17225 197.12580 399.17225 199.63587 C
399.17225 202.14567 401.23814 204.18066 403.78620 204.18066 C
419.43600 204.18066 L
421.98520 204.18066 424.05109 202.14567 424.05109 199.63587 C
424.05109 197.12580 421.98520 195.09080 419.43600 195.09080 C
@c
343.44425 197.23975 m
342.09524 197.23975 341.00107 198.31663 341.00107 199.64665 C
341.00107 200.97468 342.09524 202.05269 343.44425 202.05269 C
344.79326 202.05269 345.88715 200.97468 345.88715 199.64665 C
345.88715 198.31663 344.79326 197.23975 343.44425 197.23975 C
@c
336.94101 197.23975 m
335.59313 197.23975 334.49811 198.31663 334.49811 199.64665 C
334.49811 200.97468 335.59313 202.05269 336.94101 202.05269 C
338.29115 202.05269 339.38504 200.97468 339.38504 199.64665 C
339.38504 198.31663 338.29115 197.23975 336.94101 197.23975 C
@c
330.61521 197.23975 m
329.26507 197.23975 328.17203 198.31663 328.17203 199.64665 C
328.17203 200.97468 329.26507 202.05269 330.61521 202.05269 C
331.96422 202.05269 333.05811 200.97468 333.05811 199.64665 C
333.05811 198.31663 331.96422 197.23975 330.61521 197.23975 C
@c
324.33817 197.23975 m
322.98803 197.23975 321.89414 198.31663 321.89414 199.64665 C
321.89414 200.97468 322.98803 202.05269 324.33817 202.05269 C
325.68605 202.05269 326.78107 200.97468 326.78107 199.64665 C
326.78107 198.31663 325.68605 197.23975 324.33817 197.23975 C
@c
318.03109 197.23975 m
316.68208 197.23975 315.58819 198.31663 315.58819 199.64665 C
315.58819 200.97468 316.68208 202.05269 318.03109 202.05269 C
319.38123 202.05269 320.47313 200.97468 320.47313 199.64665 C
320.47313 198.31663 319.38123 197.23975 318.03109 197.23975 C
@c
311.83824 197.23975 m
310.48809 197.23975 309.39420 198.31663 309.39420 199.64665 C
309.39420 200.97468 310.48809 202.05269 311.83824 202.05269 C
313.18724 202.05269 314.28000 200.97468 314.28000 199.64665 C
314.28000 198.31663 313.18724 197.23975 311.83824 197.23975 C
@c
305.60825 197.23975 m
304.26009 197.23975 303.16620 198.31663 303.16620 199.64665 C
303.16620 200.97468 304.26009 202.05269 305.60825 202.05269 C
306.95924 202.05269 308.05200 200.97468 308.05200 199.64665 C
308.05200 198.31663 306.95924 197.23975 305.60825 197.23975 C
@c
299.18126 197.23975 m
297.83310 197.23975 296.73921 198.31663 296.73921 199.64665 C
296.73921 200.97468 297.83310 202.05269 299.18126 202.05269 C
300.53112 202.05269 301.62501 200.97468 301.62501 199.64665 C
301.62501 198.31663 300.53112 197.23975 299.18126 197.23975 C
@c
292.65222 197.23975 m
291.30406 197.23975 290.21017 198.31663 290.21017 199.64665 C
290.21017 200.97468 291.30406 202.05269 292.65222 202.05269 C
294.00123 202.05269 295.09512 200.97468 295.09512 199.64665 C
295.09512 198.31663 294.00123 197.23975 292.65222 197.23975 C
@c
286.40409 197.23975 m
285.05509 197.23975 283.96120 198.31663 283.96120 199.64665 C
283.96120 200.97468 285.05509 202.05269 286.40409 202.05269 C
287.75424 202.05269 288.84699 200.97468 288.84699 199.64665 C
288.84699 198.31663 287.75424 197.23975 286.40409 197.23975 C
@c
279.87307 197.23975 m
278.52321 197.23975 277.42904 198.31663 277.42904 199.64665 C
277.42904 200.97468 278.52321 202.05269 279.87307 202.05269 C
281.22123 202.05269 282.31512 200.97468 282.31512 199.64665 C
282.31512 198.31663 281.22123 197.23975 279.87307 197.23975 C
@c
411.52706 881.68961 m
412.61811 881.68961 413.50224 880.80576 413.50224 879.71471 C
413.50224 878.62479 412.61811 877.74066 411.52706 877.74066 C
410.43713 877.74066 409.55301 878.62479 409.55301 879.71471 C
409.55301 880.80576 410.43713 881.68961 411.52706 881.68961 C
@c
411.52706 910.21266 m
412.61811 910.21266 413.50224 909.32882 413.50224 908.23861 C
413.50224 907.14869 412.61811 906.26485 411.52706 906.26485 C
410.43713 906.26485 409.55301 907.14869 409.55301 908.23861 C
409.55301 909.32882 410.43713 910.21266 411.52706 910.21266 C
@c
424.51512 613.96469 m
426.81713 615.10167 429.29915 615.38570 431.23408 615.60369 C
431.23918 615.35962 431.29219 615.14079 431.29899 614.89984 C
431.32507 613.97376 431.30608 613.45077 431.20913 612.59187 C
430.54214 606.64876 428.00315 602.27887 423.21713 598.23581 C
421.08605 596.43581 418.14510 595.03380 415.35014 594.48472 C
414.72907 594.36283 414.07313 594.27666 413.39707 594.22961 C
413.16718 594.21260 412.93502 594.20778 412.70117 594.20778 C
412.03304 594.21572 L
411.89017 595.39861 411.91909 596.53984 412.11808 597.69184 C
413.43420 605.28161 417.59518 610.54866 424.51512 613.96469 C
@c
193.85008 870.86268 m
188.87924 870.86268 184.84724 874.83373 184.84724 879.73172 C
184.84724 884.62885 188.87924 888.59877 193.85008 888.59877 C
198.82318 888.59877 202.85320 884.62885 202.85320 879.73172 C
202.85320 874.83373 198.82318 870.86268 193.85008 870.86268 C
@c
168.63222 791.85572 m
168.63222 789.58970 166.79509 787.75285 164.52907 787.75285 C
162.26220 787.75285 160.42620 789.58970 160.42620 791.85572 C
160.42620 852.27562 L
160.42620 854.54164 162.26220 856.37877 164.52907 856.37877 C
166.79509 856.37877 168.63222 854.54164 168.63222 852.27562 C
168.63222 791.85572 L
@c
667.99304 876.93562 m
657.05726 876.93562 L
654.22006 876.93562 651.68419 878.86970 651.09713 881.64680 C
648.84813 892.29487 639.39912 900.28687 628.08208 900.28687 C
625.03512 900.28687 L
621.47112 900.28687 618.58318 903.17480 618.58318 906.73880 C
618.58318 918.13578 L
222.93213 918.13578 L
222.93213 906.26769 L
222.93213 902.96362 220.25509 900.28687 216.95102 900.28687 C
195.13814 900.28687 L
183.82025 900.28687 174.37209 892.29487 172.12309 881.64680 C
171.53603 878.86970 169.00101 876.93562 166.16324 876.93562 C
155.22718 876.93562 L
155.22605 231.66765 L
166.16721 231.66765 L
168.99704 231.66765 171.53603 229.73783 172.12706 226.95761 C
174.37720 216.30784 183.81600 208.31783 195.13701 208.31783 C
195.97606 208.31783 L
199.27899 208.31783 201.95717 205.64079 201.95717 202.33786 C
201.95717 190.66762 L
621.26617 190.66762 L
621.26617 202.33786 L
621.26617 205.64079 623.94406 208.31783 627.24699 208.31783 C
628.08718 208.31783 L
639.39600 208.31783 648.84614 216.30784 651.09600 226.95761 C
651.68617 229.73783 654.21723 231.66765 657.05613 231.66765 C
667.99701 231.66765 L
667.99304 876.93562 L
@c
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel21Dict 21.0 0
%%EOF
