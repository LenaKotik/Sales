%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 23 81 563 812 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: iPad Pro 11 Зад Full Vector.eps
%%CreationDate: Thu May 30 16:45:49 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
23.60693 81.03969 562.18195 811.98369 @E
/$fm 1 def
 0 O 0 @g
0.7500 0.6800 0.6700 0.9000  create_cmyk_color set_solid_fill
553.75994 448.80661 m
554.87991 448.80661 555.78983 447.85672 555.78983 446.68658 C
555.78983 445.51672 554.87991 444.56683 553.75994 444.56683 C
552.63997 444.56683 551.73005 445.51672 551.73005 446.68658 C
551.73005 447.85672 552.63997 448.80661 553.75994 448.80661 C
@c
464.81301 802.16362 m
463.46287 802.16362 462.38287 803.24362 462.38287 804.59376 C
462.38287 805.93370 463.46287 807.02362 464.81301 807.02362 C
466.15294 807.02362 467.24287 805.93370 467.24287 804.59376 C
467.24287 803.24362 466.15294 802.16362 464.81301 802.16362 C
@c
464.63584 86.01279 m
463.40589 86.01279 462.41603 87.00265 462.41603 88.22268 C
462.41603 89.44271 463.40589 90.44277 464.63584 90.44277 C
465.85587 90.44277 466.84602 89.44271 466.84602 88.22268 C
466.84602 87.00265 465.85587 86.01279 464.63584 86.01279 C
@c
458.75282 802.16362 m
457.41288 802.16362 456.32296 803.24362 456.32296 804.59376 C
456.32296 805.93370 457.41288 807.02362 458.75282 807.02362 C
460.10296 807.02362 461.18296 805.93370 461.18296 804.59376 C
461.18296 803.24362 460.10296 802.16362 458.75282 802.16362 C
@c
458.66580 86.01279 m
457.44605 86.01279 456.44598 87.00265 456.44598 88.22268 C
456.44598 89.44271 457.44605 90.44277 458.66580 90.44277 C
459.88583 90.44277 460.87597 89.44271 460.87597 88.22268 C
460.87597 87.00265 459.88583 86.01279 458.66580 86.01279 C
@c
452.75301 802.16362 m
451.41279 802.16362 450.32287 803.24362 450.32287 804.59376 C
450.32287 805.93370 451.41279 807.02362 452.75301 807.02362 C
454.10287 807.02362 455.18287 805.93370 455.18287 804.59376 C
455.18287 803.24362 454.10287 802.16362 452.75301 802.16362 C
@c
452.63594 86.01279 m
451.40598 86.01279 450.41584 87.00265 450.41584 88.22268 C
450.41584 89.44271 451.40598 90.44277 452.63594 90.44277 C
453.85597 90.44277 454.84583 89.44271 454.84583 88.22268 C
454.84583 87.00265 453.85597 86.01279 452.63594 86.01279 C
@c
446.64293 802.16362 m
445.30299 802.16362 444.21279 803.24362 444.21279 804.59376 C
444.21279 805.93370 445.30299 807.02362 446.64293 807.02362 C
447.98287 807.02362 449.07279 805.93370 449.07279 804.59376 C
449.07279 803.24362 447.98287 802.16362 446.64293 802.16362 C
@c
446.75688 86.01279 m
445.53600 86.01279 444.54586 87.00265 444.54586 88.22268 C
444.54586 89.44271 445.53600 90.44277 446.75688 90.44277 C
447.97578 90.44277 448.97584 89.44271 448.97584 88.22268 C
448.97584 87.00265 447.97578 86.01279 446.75688 86.01279 C
@c
440.68280 802.16362 m
439.34287 802.16362 438.25294 803.24362 438.25294 804.59376 C
438.25294 805.93370 439.34287 807.02362 440.68280 807.02362 C
442.02302 807.02362 443.11294 805.93370 443.11294 804.59376 C
443.11294 803.24362 442.02302 802.16362 440.68280 802.16362 C
@c
440.75679 86.01279 m
439.53591 86.01279 438.54605 87.00265 438.54605 88.22268 C
438.54605 89.44271 439.53591 90.44277 440.75679 90.44277 C
441.97597 90.44277 442.97603 89.44271 442.97603 88.22268 C
442.97603 87.00265 441.97597 86.01279 440.75679 86.01279 C
@c
434.66287 802.16362 m
433.32293 802.16362 432.23301 803.24362 432.23301 804.59376 C
432.23301 805.93370 433.32293 807.02362 434.66287 807.02362 C
436.00280 807.02362 437.09301 805.93370 437.09301 804.59376 C
437.09301 803.24362 436.00280 802.16362 434.66287 802.16362 C
@c
434.66598 86.01279 m
433.44595 86.01279 432.44589 87.00265 432.44589 88.22268 C
432.44589 89.44271 433.44595 90.44277 434.66598 90.44277 C
435.88602 90.44277 436.87587 89.44271 436.87587 88.22268 C
436.87587 87.00265 435.88602 86.01279 434.66598 86.01279 C
@c
428.67298 802.16362 m
427.33304 802.16362 426.24283 803.24362 426.24283 804.59376 C
426.24283 805.93370 427.33304 807.02362 428.67298 807.02362 C
430.01291 807.02362 431.10283 805.93370 431.10283 804.59376 C
431.10283 803.24362 430.01291 802.16362 428.67298 802.16362 C
@c
428.57603 86.01279 m
427.35600 86.01279 426.36586 87.00265 426.36586 88.22268 C
426.36586 89.44271 427.35600 90.44277 428.57603 90.44277 C
429.79578 90.44277 430.78592 89.44271 430.78592 88.22268 C
430.78592 87.00265 429.79578 86.01279 428.57603 86.01279 C
@c
422.56290 802.16362 m
421.22296 802.16362 420.13304 803.24362 420.13304 804.59376 C
420.13304 805.93370 421.22296 807.02362 422.56290 807.02362 C
423.90283 807.02362 424.99304 805.93370 424.99304 804.59376 C
424.99304 803.24362 423.90283 802.16362 422.56290 802.16362 C
@c
422.42598 86.01279 m
421.20595 86.01279 420.21581 87.00265 420.21581 88.22268 C
420.21581 89.44271 421.20595 90.44277 422.42598 90.44277 C
423.65594 90.44277 424.64580 89.44271 424.64580 88.22268 C
424.64580 87.00265 423.65594 86.01279 422.42598 86.01279 C
@c
416.63282 802.16362 m
415.28296 802.16362 414.19304 803.24362 414.19304 804.59376 C
414.19304 805.93370 415.28296 807.02362 416.63282 807.02362 C
417.97304 807.02362 419.06296 805.93370 419.06296 804.59376 C
419.06296 803.24362 417.97304 802.16362 416.63282 802.16362 C
@c
416.59597 86.01279 m
415.37594 86.01279 414.38580 87.00265 414.38580 88.22268 C
414.38580 89.44271 415.37594 90.44277 416.59597 90.44277 C
417.82592 90.44277 418.81578 89.44271 418.81578 88.22268 C
418.81578 87.00265 417.82592 86.01279 416.59597 86.01279 C
@c
410.68290 802.16362 m
409.34296 802.16362 408.25304 803.24362 408.25304 804.59376 C
408.25304 805.93370 409.34296 807.02362 410.68290 807.02362 C
412.02283 807.02362 413.11304 805.93370 413.11304 804.59376 C
413.11304 803.24362 412.02283 802.16362 410.68290 802.16362 C
@c
410.51594 86.01279 m
409.29591 86.01279 408.30605 87.00265 408.30605 88.22268 C
408.30605 89.44271 409.29591 90.44277 410.51594 90.44277 C
411.73682 90.44277 412.72583 89.44271 412.72583 88.22268 C
412.72583 87.00265 411.73682 86.01279 410.51594 86.01279 C
@c
404.56290 802.16362 m
403.21304 802.16362 402.13304 803.24362 402.13304 804.59376 C
402.13304 805.93370 403.21304 807.02362 404.56290 807.02362 C
405.90283 807.02362 406.99304 805.93370 406.99304 804.59376 C
406.99304 803.24362 405.90283 802.16362 404.56290 802.16362 C
@c
404.53597 86.01279 m
403.31594 86.01279 402.32580 87.00265 402.32580 88.22268 C
402.32580 89.44271 403.31594 90.44277 404.53597 90.44277 C
405.75685 90.44277 406.74586 89.44271 406.74586 88.22268 C
406.74586 87.00265 405.75685 86.01279 404.53597 86.01279 C
@c
398.59285 802.16362 m
397.25291 802.16362 396.16299 803.24362 396.16299 804.59376 C
396.16299 805.93370 397.25291 807.02362 398.59285 807.02362 C
399.93279 807.02362 401.02299 805.93370 401.02299 804.59376 C
401.02299 803.24362 399.93279 802.16362 398.59285 802.16362 C
@c
398.52595 86.01279 m
397.30592 86.01279 396.31578 87.00265 396.31578 88.22268 C
396.31578 89.44271 397.30592 90.44277 398.52595 90.44277 C
399.74598 90.44277 400.73698 89.44271 400.73698 88.22268 C
400.73698 87.00265 399.74598 86.01279 398.52595 86.01279 C
@c
392.51282 802.16362 m
391.17288 802.16362 390.08296 803.24362 390.08296 804.59376 C
390.08296 805.93370 391.17288 807.02362 392.51282 807.02362 C
393.85304 807.02362 394.94296 805.93370 394.94296 804.59376 C
394.94296 803.24362 393.85304 802.16362 392.51282 802.16362 C
@c
392.51594 86.01279 m
391.29591 86.01279 390.30605 87.00265 390.30605 88.22268 C
390.30605 89.44271 391.29591 90.44277 392.51594 90.44277 C
393.73682 90.44277 394.72583 89.44271 394.72583 88.22268 C
394.72583 87.00265 393.73682 86.01279 392.51594 86.01279 C
@c
307.08283 125.13572 m
303.96302 125.13572 301.43282 127.66564 301.43282 130.78573 C
301.43282 133.90668 303.96302 136.43575 307.08283 136.43575 C
310.20293 136.43575 312.73285 133.90668 312.73285 130.78573 C
312.73285 127.66564 310.20293 125.13572 307.08283 125.13572 C
@c
287.17285 130.78573 m
287.17285 133.90668 289.70277 136.43575 292.82287 136.43575 C
295.94296 136.43575 298.47288 133.90668 298.47288 130.78573 C
298.47288 127.66564 295.94296 125.13572 292.82287 125.13572 C
289.70277 125.13572 287.17285 127.66564 287.17285 130.78573 C
@c
301.01301 84.13257 m
284.74980 84.13257 L
282.40980 84.13257 280.51285 86.02980 280.51285 88.36980 C
280.51285 90.70866 282.40980 92.60674 284.74980 92.60674 C
301.01301 92.60674 L
303.35301 92.60674 305.24995 90.70866 305.24995 88.36980 C
305.24995 86.02980 303.35301 84.13257 301.01301 84.13257 C
@c
273.13285 130.78573 m
273.13285 133.90668 275.65285 136.43575 278.77294 136.43575 C
281.89304 136.43575 284.42296 133.90668 284.42296 130.78573 C
284.42296 127.66564 281.89304 125.13572 278.77294 125.13572 C
275.65285 125.13572 273.13285 127.66564 273.13285 130.78573 C
@c
193.39285 802.44765 m
192.05291 802.44765 190.96299 803.52765 190.96299 804.87666 C
190.96299 806.21660 192.05291 807.30680 193.39285 807.30680 C
194.74299 807.30680 195.82299 806.21660 195.82299 804.87666 C
195.82299 803.52765 194.74299 802.44765 193.39285 802.44765 C
@c
192.98296 86.01279 m
191.76293 86.01279 190.77279 87.00265 190.77279 88.22268 C
190.77279 89.44271 191.76293 90.44277 192.98296 90.44277 C
194.21291 90.44277 195.20277 89.44271 195.20277 88.22268 C
195.20277 87.00265 194.21291 86.01279 192.98296 86.01279 C
@c
187.39304 802.44765 m
186.05282 802.44765 184.96290 803.52765 184.96290 804.87666 C
184.96290 806.21660 186.05282 807.30680 187.39304 807.30680 C
188.73298 807.30680 189.82290 806.21660 189.82290 804.87666 C
189.82290 803.52765 188.73298 802.44765 187.39304 802.44765 C
@c
187.02283 86.01279 m
185.79288 86.01279 184.80302 87.00265 184.80302 88.22268 C
184.80302 89.44271 185.79288 90.44277 187.02283 90.44277 C
188.24287 90.44277 189.23301 89.44271 189.23301 88.22268 C
189.23301 87.00265 188.24287 86.01279 187.02283 86.01279 C
@c
181.33285 802.44765 m
179.98299 802.44765 178.89279 803.52765 178.89279 804.87666 C
178.89279 806.21660 179.98299 807.30680 181.33285 807.30680 C
182.67279 807.30680 183.76299 806.21660 183.76299 804.87666 C
183.76299 803.52765 182.67279 802.44765 181.33285 802.44765 C
@c
180.98277 86.01279 m
179.76302 86.01279 178.77288 87.00265 178.77288 88.22268 C
178.77288 89.44271 179.76302 90.44277 180.98277 90.44277 C
182.21301 90.44277 183.20287 89.44271 183.20287 88.22268 C
183.20287 87.00265 182.21301 86.01279 180.98277 86.01279 C
@c
175.27294 802.44765 m
173.93301 802.44765 172.84280 803.52765 172.84280 804.87666 C
172.84280 806.21660 173.93301 807.30680 175.27294 807.30680 C
176.62280 807.30680 177.70280 806.21660 177.70280 804.87666 C
177.70280 803.52765 176.62280 802.44765 175.27294 802.44765 C
@c
175.11279 86.01279 m
173.89304 86.01279 172.90290 87.00265 172.90290 88.22268 C
172.90290 89.44271 173.89304 90.44277 175.11279 90.44277 C
176.33282 90.44277 177.32296 89.44271 177.32296 88.22268 C
177.32296 87.00265 176.33282 86.01279 175.11279 86.01279 C
@c
169.22296 802.44765 m
167.87282 802.44765 166.78290 803.52765 166.78290 804.87666 C
166.78290 806.21660 167.87282 807.30680 169.22296 807.30680 C
170.56290 807.30680 171.65282 806.21660 171.65282 804.87666 C
171.65282 803.52765 170.56290 802.44765 169.22296 802.44765 C
@c
169.11298 86.01279 m
167.89294 86.01279 166.90280 87.00265 166.90280 88.22268 C
166.90280 89.44271 167.89294 90.44277 169.11298 90.44277 C
170.33301 90.44277 171.32287 89.44271 171.32287 88.22268 C
171.32287 87.00265 170.33301 86.01279 169.11298 86.01279 C
@c
163.22287 802.44765 m
161.88293 802.44765 160.79301 803.52765 160.79301 804.87666 C
160.79301 806.21660 161.88293 807.30680 163.22287 807.30680 C
164.56280 807.30680 165.65301 806.21660 165.65301 804.87666 C
165.65301 803.52765 164.56280 802.44765 163.22287 802.44765 C
@c
163.02302 86.01279 m
161.79279 86.01279 160.80293 87.00265 160.80293 88.22268 C
160.80293 89.44271 161.79279 90.44277 163.02302 90.44277 C
164.24277 90.44277 165.23291 89.44271 165.23291 88.22268 C
165.23291 87.00265 164.24277 86.01279 163.02302 86.01279 C
@c
157.16296 802.44765 m
155.82302 802.44765 154.73282 803.52765 154.73282 804.87666 C
154.73282 806.21660 155.82302 807.30680 157.16296 807.30680 C
158.50290 807.30680 159.59282 806.21660 159.59282 804.87666 C
159.59282 803.52765 158.50290 802.44765 157.16296 802.44765 C
@c
156.93279 86.01279 m
155.71304 86.01279 154.72290 87.00265 154.72290 88.22268 C
154.72290 89.44271 155.71304 90.44277 156.93279 90.44277 C
158.15282 90.44277 159.14296 89.44271 159.14296 88.22268 C
159.14296 87.00265 158.15282 86.01279 156.93279 86.01279 C
@c
151.23288 802.44765 m
149.88302 802.44765 148.80302 803.52765 148.80302 804.87666 C
148.80302 806.21660 149.88302 807.30680 151.23288 807.30680 C
152.57282 807.30680 153.66302 806.21660 153.66302 804.87666 C
153.66302 803.52765 152.57282 802.44765 151.23288 802.44765 C
@c
150.78302 86.01279 m
149.56299 86.01279 148.57285 87.00265 148.57285 88.22268 C
148.57285 89.44271 149.56299 90.44277 150.78302 90.44277 C
152.00277 90.44277 152.99291 89.44271 152.99291 88.22268 C
152.99291 87.00265 152.00277 86.01279 150.78302 86.01279 C
@c
145.25291 802.44765 m
143.90277 802.44765 142.82277 803.52765 142.82277 804.87666 C
142.82277 806.21660 143.90277 807.30680 145.25291 807.30680 C
146.59285 807.30680 147.68277 806.21660 147.68277 804.87666 C
147.68277 803.52765 146.59285 802.44765 145.25291 802.44765 C
@c
144.95301 86.01279 m
143.73298 86.01279 142.74283 87.00265 142.74283 88.22268 C
142.74283 89.44271 143.73298 90.44277 144.95301 90.44277 C
146.17304 90.44277 147.16290 89.44271 147.16290 88.22268 C
147.16290 87.00265 146.17304 86.01279 144.95301 86.01279 C
@c
139.18280 802.44765 m
137.84287 802.44765 136.75294 803.52765 136.75294 804.87666 C
136.75294 806.21660 137.84287 807.30680 139.18280 807.30680 C
140.52302 807.30680 141.61294 806.21660 141.61294 804.87666 C
141.61294 803.52765 140.52302 802.44765 139.18280 802.44765 C
@c
138.87298 86.01279 m
137.64302 86.01279 136.65288 87.00265 136.65288 88.22268 C
136.65288 89.44271 137.64302 90.44277 138.87298 90.44277 C
140.09301 90.44277 141.08287 89.44271 141.08287 88.22268 C
141.08287 87.00265 140.09301 86.01279 138.87298 86.01279 C
@c
133.10277 802.44765 m
131.76283 802.44765 130.67291 803.52765 130.67291 804.87666 C
130.67291 806.21660 131.76283 807.30680 133.10277 807.30680 C
134.45291 807.30680 135.53291 806.21660 135.53291 804.87666 C
135.53291 803.52765 134.45291 802.44765 133.10277 802.44765 C
@c
132.89301 86.01279 m
131.67298 86.01279 130.67291 87.00265 130.67291 88.22268 C
130.67291 89.44271 131.67298 90.44277 132.89301 90.44277 C
134.11304 90.44277 135.10290 89.44271 135.10290 88.22268 C
135.10290 87.00265 134.11304 86.01279 132.89301 86.01279 C
@c
127.16277 802.44765 m
125.81291 802.44765 124.73291 803.52765 124.73291 804.87666 C
124.73291 806.21660 125.81291 807.30680 127.16277 807.30680 C
128.50299 807.30680 129.59291 806.21660 129.59291 804.87666 C
129.59291 803.52765 128.50299 802.44765 127.16277 802.44765 C
@c
126.88299 86.01279 m
125.65304 86.01279 124.66290 87.00265 124.66290 88.22268 C
124.66290 89.44271 125.65304 90.44277 126.88299 90.44277 C
128.10302 90.44277 129.09288 89.44271 129.09288 88.22268 C
129.09288 87.00265 128.10302 86.01279 126.88299 86.01279 C
@c
121.04277 802.44765 m
119.70283 802.44765 118.61291 803.52765 118.61291 804.87666 C
118.61291 806.21660 119.70283 807.30680 121.04277 807.30680 C
122.38299 807.30680 123.47291 806.21660 123.47291 804.87666 C
123.47291 803.52765 122.38299 802.44765 121.04277 802.44765 C
@c
120.87298 86.01279 m
119.64302 86.01279 118.65288 87.00265 118.65288 88.22268 C
118.65288 89.44271 119.64302 90.44277 120.87298 90.44277 C
122.09301 90.44277 123.08287 89.44271 123.08287 88.22268 C
123.08287 87.00265 122.09301 86.01279 120.87298 86.01279 C
@c
107.09688 801.17660 m
80.09093 801.17660 L
77.97997 801.17660 76.26898 802.88759 76.26898 804.99770 C
76.26898 807.10980 77.97997 808.82079 80.09093 808.82079 C
107.09688 808.82079 L
109.20784 808.82079 110.91883 807.10980 110.91883 804.99770 C
110.91883 802.88759 109.20784 801.17660 107.09688 801.17660 C
@c
75.86589 742.20066 m
65.47578 742.20066 57.04583 750.62976 57.04583 761.02072 C
57.04583 771.41083 65.47578 779.82973 75.86589 779.82973 C
86.25685 779.82973 94.67603 771.41083 94.67603 761.02072 C
94.67603 750.62976 86.25685 742.20066 75.86589 742.20066 C
@c
73.59392 733.49065 m
73.59392 734.73874 74.61694 735.74674 75.86589 735.74674 C
77.11483 735.74674 78.13786 734.73874 78.13786 733.49065 C
78.13786 732.22583 77.11483 731.21783 75.86589 731.21783 C
74.61694 731.21783 73.59392 732.22583 73.59392 733.49065 C
@c
75.86589 712.84677 m
72.66586 712.84677 70.08605 715.43679 70.08605 718.62661 C
70.08605 721.82665 72.66586 724.41666 75.86589 724.41666 C
79.05600 724.41666 81.64602 721.82665 81.64602 718.62661 C
81.64602 715.43679 79.05600 712.84677 75.86589 712.84677 C
@c
274.02690 806.84277 m
275.25685 806.84277 276.24104 805.84469 276.24104 804.62863 C
276.24104 803.39981 275.25685 802.41477 274.02690 802.41477 C
272.81197 802.41477 271.81389 803.39981 271.81389 804.62863 C
271.81389 805.84469 272.81197 806.84277 274.02690 806.84277 C
@c
312.14693 806.84277 m
313.37688 806.84277 314.36079 805.84469 314.36079 804.62863 C
314.36079 803.39981 313.37688 802.41477 312.14693 802.41477 C
310.93200 802.41477 309.93392 803.39981 309.93392 804.62863 C
309.93392 805.84469 310.93200 806.84277 312.14693 806.84277 C
@c
562.18195 795.62268 m
562.18195 811.41676 L
293.09301 811.98369 L
23.60693 811.41676 L
23.60693 795.62268 L
29.33093 795.62268 L
29.33093 795.63260 L
71.60003 795.34970 L
55.83005 793.33965 43.32983 780.83972 41.31978 765.05981 C
41.31978 764.68961 L
25.24280 764.68961 L
25.24280 742.64825 L
32.51934 742.64825 l
34.84602 742.64825 36.74920 740.74507 36.74920 738.41839 c
36.74920 682.77203 l
36.74920 680.44535 34.84602 678.54217 32.51934 678.54217 c
25.24280 678.54217 L
25.24280 483.38986 L
32.62876 483.38986 l
35.51357 483.38986 37.87342 481.03002 37.87342 478.14520 c
37.87342 415.13357 l
37.87342 412.24876 35.51357 409.88891 32.62876 409.88891 c
25.24280 409.88891 L
25.24280 127.21578 L
41.31893 127.21578 L
41.31978 126.82970 L
43.32983 111.04980 55.84989 98.52973 71.64000 96.54973 C
24.88479 96.54973 L
24.88479 81.03969 L
561.00784 81.03969 L
561.00784 96.54973 L
514.83005 96.54973 L
530.61080 98.52775 543.11783 111.01975 545.15083 126.77272 C
545.15083 127.21578 L
561.22696 127.21578 L
561.22696 764.69669 L
545.16104 764.59578 L
545.15991 765.01956 L
543.17991 780.81959 530.65984 793.33965 514.87002 795.34970 C
556.74198 795.63260 L
556.74198 795.62268 L
562.18195 795.62268 L
@c
F

@rax %Note: Object
60.75751 745.91093 90.96548 776.11890 @E
/$fm 1 def
 0 O 0 @g
0.7500 0.6800 0.6700 0.9000  create_cmyk_color set_solid_fill
75.86135 752.96494 m
71.41550 752.96494 67.81153 756.56891 67.81153 761.01591 C
67.81153 765.46091 71.41550 769.06602 75.86135 769.06602 C
80.30750 769.06602 83.91146 765.46091 83.91146 761.01591 C
83.91146 756.56891 80.30750 752.96494 75.86135 752.96494 C
@c
75.86135 776.11890 m
67.51928 776.11890 60.75751 769.35798 60.75751 761.01591 C
60.75751 752.67383 67.51928 745.91093 75.86135 745.91093 C
84.20343 745.91093 90.96548 752.67383 90.96548 761.01591 C
90.96548 769.35798 84.20343 776.11890 75.86135 776.11890 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
