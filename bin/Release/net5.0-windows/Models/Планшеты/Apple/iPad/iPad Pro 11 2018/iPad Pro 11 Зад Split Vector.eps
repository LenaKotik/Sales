%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 17 72 574 816 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: iPad Pro 11 Зад Split Vector.eps
%%CreationDate: Thu May 30 16:48:17 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
43.55291 95.08054 547.95090 793.59335 @E
/$fm 1 def
 0 O 0 @g
0.7500 0.6800 0.6700 0.9000  create_cmyk_color set_solid_fill
309.90586 122.47143 m
306.78576 122.47143 304.25669 125.00050 304.25669 128.12060 C
304.25669 131.23956 306.78576 133.76948 309.90586 133.76948 C
313.02595 133.76948 315.55474 131.23956 315.55474 128.12060 C
315.55474 125.00050 313.02595 122.47143 309.90586 122.47143 C
@c
295.63994 122.47143 m
292.52069 122.47143 289.99077 125.00050 289.99077 128.12060 C
289.99077 131.23956 292.52069 133.76948 295.63994 133.76948 C
298.75975 133.76948 301.28882 131.23956 301.28882 128.12060 C
301.28882 125.00050 298.75975 122.47143 295.63994 122.47143 C
@c
281.59795 122.47143 m
278.47786 122.47143 275.94879 125.00050 275.94879 128.12060 C
275.94879 131.23956 278.47786 133.76948 281.59795 133.76948 C
284.71691 133.76948 287.24683 131.23956 287.24683 128.12060 C
287.24683 125.00050 284.71691 122.47143 281.59795 122.47143 C
@c
78.66170 739.31839 m
68.27074 739.31839 59.84674 747.74154 59.84674 758.13335 C
59.84674 768.52545 68.27074 776.94746 78.66170 776.94746 C
89.05380 776.94746 97.47780 768.52545 97.47780 758.13335 C
97.47780 747.74154 89.05380 739.31839 78.66170 739.31839 C
@c
77.15395 730.69257 m
77.15395 731.52539 77.82973 732.19946 78.66170 732.19946 C
79.49480 732.19946 80.17087 731.52539 80.17087 730.69257 C
80.17087 729.85946 79.49480 729.18340 78.66170 729.18340 C
77.82973 729.18340 77.15395 729.85946 77.15395 730.69257 C
@c
78.66170 710.24542 m
75.46791 710.24542 72.87874 712.83543 72.87874 716.02951 C
72.87874 719.22359 75.46791 721.81361 78.66170 721.81361 C
81.85691 721.81361 84.44580 719.22359 84.44580 716.02951 C
84.44580 712.83543 81.85691 710.24542 78.66170 710.24542 C
@c
512.92573 793.59335 m
78.57780 793.59335 L
59.23474 793.59335 43.55291 777.91238 43.55291 758.56961 C
43.55291 130.10655 L
43.55291 110.76236 59.23474 95.08054 78.57780 95.08054 C
512.92573 95.08054 L
532.26992 95.08054 547.95090 110.76236 547.95090 130.10655 C
547.95090 758.56961 L
547.95090 777.91238 532.26992 793.59335 512.92573 793.59335 C
@c
F

@rax %Note: Object
63.55871 743.02866 93.76668 773.23748 @E
/$fm 1 def
 0 O 0 @g
0.7500 0.6800 0.6700 0.9000  create_cmyk_color set_solid_fill
78.66255 748.41846 m
73.29770 748.41846 68.94765 752.76850 68.94765 758.13364 C
68.94765 763.49849 73.29770 767.84769 78.66255 767.84769 C
84.02769 767.84769 88.37660 763.49849 88.37660 758.13364 C
88.37660 752.76850 84.02769 748.41846 78.66255 748.41846 C
@c
78.66255 773.23748 m
70.32076 773.23748 63.55871 766.47572 63.55871 758.13364 C
63.55871 749.79156 70.32076 743.02866 78.66255 743.02866 C
87.00463 743.02866 93.76668 749.79156 93.76668 758.13364 C
93.76668 766.47572 87.00463 773.23748 78.66255 773.23748 C
@c
F

@rax %Note: Object
557.82028 120.15553 573.32523 768.51865 @E
/$fm 1 def
 0 O 0 @g
0.7500 0.6800 0.6700 0.9000  create_cmyk_color set_solid_fill
565.57332 444.62863 m
564.45024 444.62863 563.53918 445.57654 563.53918 446.74668 C
563.53918 447.91654 564.45024 448.86472 565.57332 448.86472 C
566.69613 448.86472 567.60633 447.91654 567.60633 446.74668 C
567.60633 445.57654 566.69613 444.62863 565.57332 444.62863 C
@c
557.82028 120.15553 m
573.32523 120.15553 L
573.32523 768.51751 L
557.82028 768.51751 L
557.82028 120.15553 L
@c
557.82028 768.51865 m
557.82028 120.15553 L
557.82028 768.51865 L
@c
F

@rax %Note: Object
17.41720 120.15609 32.92243 768.51808 @E
/$fm 1 def
 0 O 0 @g
0.7500 0.6800 0.6700 0.9000  create_cmyk_color set_solid_fill
30.13030 415.77591 m
30.13030 413.11389 27.90935 410.95587 25.17024 410.95587 C
22.43027 410.95587 20.20932 413.11389 20.20932 415.77591 C
20.20932 478.41902 L
20.20932 481.08189 22.43027 483.23906 25.17024 483.23906 C
27.90935 483.23906 30.13030 481.08189 30.13030 478.41902 C
30.13030 415.77591 L
@c
21.31739 704.13194 m
21.31739 706.14000 23.04227 707.76709 25.17024 707.76709 C
27.29735 707.76709 29.02337 706.14000 29.02337 704.13194 C
29.02337 682.71307 L
29.02337 680.70501 27.29735 679.07707 25.17024 679.07707 C
23.04227 679.07707 21.31739 680.70501 21.31739 682.71307 C
21.31739 704.13194 L
@c
21.31739 738.20891 m
21.31739 740.21811 23.04227 741.84690 25.17024 741.84690 C
27.29735 741.84690 29.02337 740.21811 29.02337 738.20891 C
29.02337 716.76113 L
29.02337 714.75307 27.29735 713.12287 25.17024 713.12287 C
23.04227 713.12287 21.31739 714.75307 21.31739 716.76113 C
21.31739 738.20891 L
@c
17.41720 120.15609 m
32.92243 120.15609 L
32.92243 768.51808 L
17.41720 768.51808 L
17.41720 120.15609 L
@c
17.41720 768.51808 m
17.41720 120.15609 L
17.41720 768.51808 L
@c
F

@rax %Note: Object
36.66614 72.63156 554.83824 88.13735 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
466.69720 78.17159 m
465.47518 78.17159 464.48532 79.16145 464.48532 80.38460 C
464.48532 81.60661 465.47518 82.59761 466.69720 82.59761 C
467.91921 82.59761 468.91020 81.60661 468.91020 80.38460 C
468.91020 79.16145 467.91921 78.17159 466.69720 78.17159 C
@c
460.68718 78.17159 m
459.46517 78.17159 458.47417 79.16145 458.47417 80.38460 C
458.47417 81.60661 459.46517 82.59761 460.68718 82.59761 C
461.90835 82.59761 462.89934 81.60661 462.89934 80.38460 C
462.89934 79.16145 461.90835 78.17159 460.68718 78.17159 C
@c
454.67631 78.17159 m
453.45430 78.17159 452.46416 79.16145 452.46416 80.38460 C
452.46416 81.60661 453.45430 82.59761 454.67631 82.59761 C
455.89833 82.59761 456.88932 81.60661 456.88932 80.38460 C
456.88932 79.16145 455.89833 78.17159 454.67631 78.17159 C
@c
448.66630 78.17159 m
447.44428 78.17159 446.45329 79.16145 446.45329 80.38460 C
446.45329 81.60661 447.44428 82.59761 448.66630 82.59761 C
449.88718 82.59761 450.87817 81.60661 450.87817 80.38460 C
450.87817 79.16145 449.88718 78.17159 448.66630 78.17159 C
@c
442.65515 78.17159 m
441.43313 78.17159 440.44214 79.16145 440.44214 80.38460 C
440.44214 81.60661 441.43313 82.59761 442.65515 82.59761 C
443.87717 82.59761 444.86816 81.60661 444.86816 80.38460 C
444.86816 79.16145 443.87717 78.17159 442.65515 78.17159 C
@c
436.64513 78.17159 m
435.42312 78.17159 434.43213 79.16145 434.43213 80.38460 C
434.43213 81.60661 435.42312 82.59761 436.64513 82.59761 C
437.86630 82.59761 438.85814 81.60661 438.85814 80.38460 C
438.85814 79.16145 437.86630 78.17159 436.64513 78.17159 C
@c
430.63427 78.17159 m
429.41225 78.17159 428.42126 79.16145 428.42126 80.38460 C
428.42126 81.60661 429.41225 82.59761 430.63427 82.59761 C
431.85628 82.59761 432.84728 81.60661 432.84728 80.38460 C
432.84728 79.16145 431.85628 78.17159 430.63427 78.17159 C
@c
424.62425 78.17159 m
423.40224 78.17159 422.41124 79.16145 422.41124 80.38460 C
422.41124 81.60661 423.40224 82.59761 424.62425 82.59761 C
425.84513 82.59761 426.83726 81.60661 426.83726 80.38460 C
426.83726 79.16145 425.84513 78.17159 424.62425 78.17159 C
@c
418.61424 78.17159 m
417.39109 78.17159 416.40123 79.16145 416.40123 80.38460 C
416.40123 81.60661 417.39109 82.59761 418.61424 82.59761 C
419.83512 82.59761 420.82611 81.60661 420.82611 80.38460 C
420.82611 79.16145 419.83512 78.17159 418.61424 78.17159 C
@c
412.60309 78.17159 m
411.38135 78.17159 410.39036 79.16145 410.39036 80.38460 C
410.39036 81.60661 411.38135 82.59761 412.60309 82.59761 C
413.82510 82.59761 414.81609 81.60661 414.81609 80.38460 C
414.81609 79.16145 413.82510 78.17159 412.60309 78.17159 C
@c
406.62425 78.17159 m
405.40224 78.17159 404.41124 79.16145 404.41124 80.38460 C
404.41124 81.60661 405.40224 82.59761 406.62425 82.59761 C
407.84627 82.59761 408.83726 81.60661 408.83726 80.38460 C
408.83726 79.16145 407.84627 78.17159 406.62425 78.17159 C
@c
400.61424 78.17159 m
399.39109 78.17159 398.40123 79.16145 398.40123 80.38460 C
398.40123 81.60661 399.39109 82.59761 400.61424 82.59761 C
401.83625 82.59761 402.82611 81.60661 402.82611 80.38460 C
402.82611 79.16145 401.83625 78.17159 400.61424 78.17159 C
@c
394.60309 78.17159 m
393.38135 78.17159 392.39036 79.16145 392.39036 80.38460 C
392.39036 81.60661 393.38135 82.59761 394.60309 82.59761 C
395.82510 82.59761 396.81609 81.60661 396.81609 80.38460 C
396.81609 79.16145 395.82510 78.17159 394.60309 78.17159 C
@c
304.16428 76.28854 m
288.19020 76.28854 L
285.92816 76.28854 284.09414 78.12255 284.09414 80.38460 C
284.09414 82.64636 285.92816 84.48038 288.19020 84.48038 C
304.16428 84.48038 L
306.42633 84.48038 308.26035 82.64636 308.26035 80.38460 C
308.26035 78.12255 306.42633 76.28854 304.16428 76.28854 C
@c
196.75928 78.17159 m
195.53726 78.17159 194.54627 79.16145 194.54627 80.38460 C
194.54627 81.60661 195.53726 82.59761 196.75928 82.59761 C
197.98129 82.59761 198.97115 81.60661 198.97115 80.38460 C
198.97115 79.16145 197.98129 78.17159 196.75928 78.17159 C
@c
190.74813 78.17159 m
189.52611 78.17159 188.53512 79.16145 188.53512 80.38460 C
188.53512 81.60661 189.52611 82.59761 190.74813 82.59761 C
191.97014 82.59761 192.96113 81.60661 192.96113 80.38460 C
192.96113 79.16145 191.97014 78.17159 190.74813 78.17159 C
@c
184.73811 78.17159 m
183.51609 78.17159 182.52510 79.16145 182.52510 80.38460 C
182.52510 81.60661 183.51609 82.59761 184.73811 82.59761 C
185.96013 82.59761 186.95027 81.60661 186.95027 80.38460 C
186.95027 79.16145 185.96013 78.17159 184.73811 78.17159 C
@c
178.72809 78.17159 m
177.50523 78.17159 176.51424 79.16145 176.51424 80.38460 C
176.51424 81.60661 177.50523 82.59761 178.72809 82.59761 C
179.94926 82.59761 180.94025 81.60661 180.94025 80.38460 C
180.94025 79.16145 179.94926 78.17159 178.72809 78.17159 C
@c
172.71723 78.17159 m
171.49521 78.17159 170.50422 79.16145 170.50422 80.38460 C
170.50422 81.60661 171.49521 82.59761 172.71723 82.59761 C
173.93924 82.59761 174.92910 81.60661 174.92910 80.38460 C
174.92910 79.16145 173.93924 78.17159 172.71723 78.17159 C
@c
166.70636 78.17159 m
165.48435 78.17159 164.49335 79.16145 164.49335 80.38460 C
164.49335 81.60661 165.48435 82.59761 166.70636 82.59761 C
167.92809 82.59761 168.91909 81.60661 168.91909 80.38460 C
168.91909 79.16145 167.92809 78.17159 166.70636 78.17159 C
@c
160.69635 78.17159 m
159.47433 78.17159 158.48334 79.16145 158.48334 80.38460 C
158.48334 81.60661 159.47433 82.59761 160.69635 82.59761 C
161.91836 82.59761 162.90822 81.60661 162.90822 80.38460 C
162.90822 79.16145 161.91836 78.17159 160.69635 78.17159 C
@c
154.67924 78.17159 m
153.45723 78.17159 152.46709 79.16145 152.46709 80.38460 C
152.46709 81.60661 153.45723 82.59761 154.67924 82.59761 C
155.90126 82.59761 156.89225 81.60661 156.89225 80.38460 C
156.89225 79.16145 155.90126 78.17159 154.67924 78.17159 C
@c
148.66923 78.17159 m
147.44721 78.17159 146.45622 79.16145 146.45622 80.38460 C
146.45622 81.60661 147.44721 82.59761 148.66923 82.59761 C
149.89124 82.59761 150.88110 81.60661 150.88110 80.38460 C
150.88110 79.16145 149.89124 78.17159 148.66923 78.17159 C
@c
142.65836 78.17159 m
141.43635 78.17159 140.44620 79.16145 140.44620 80.38460 C
140.44620 81.60661 141.43635 82.59761 142.65836 82.59761 C
143.88009 82.59761 144.87109 81.60661 144.87109 80.38460 C
144.87109 79.16145 143.88009 78.17159 142.65836 78.17159 C
@c
136.67924 78.17159 m
135.45723 78.17159 134.46709 79.16145 134.46709 80.38460 C
134.46709 81.60661 135.45723 82.59761 136.67924 82.59761 C
137.90126 82.59761 138.89225 81.60661 138.89225 80.38460 C
138.89225 79.16145 137.90126 78.17159 136.67924 78.17159 C
@c
130.66923 78.17159 m
129.44721 78.17159 128.45622 79.16145 128.45622 80.38460 C
128.45622 81.60661 129.44721 82.59761 130.66923 82.59761 C
131.89124 82.59761 132.88110 81.60661 132.88110 80.38460 C
132.88110 79.16145 131.89124 78.17159 130.66923 78.17159 C
@c
124.65836 78.17159 m
123.43635 78.17159 122.44620 79.16145 122.44620 80.38460 C
122.44620 81.60661 123.43635 82.59761 124.65836 82.59761 C
125.88009 82.59761 126.87109 81.60661 126.87109 80.38460 C
126.87109 79.16145 125.88009 78.17159 124.65836 78.17159 C
@c
36.66614 72.63156 m
554.83824 72.63156 L
554.83824 88.13735 L
36.66614 88.13735 L
36.66614 72.63156 L
@c
36.66614 88.13735 m
36.66614 72.63156 L
36.66614 88.13735 L
@c
F

@rax %Note: Object
30.99600 800.75140 560.50809 815.96948 @E
/$fm 1 def
 0 O 0 @g
0.7500 0.6800 0.6700 0.9000  create_cmyk_color set_solid_fill
466.86926 806.09244 m
465.52706 806.09244 464.43798 807.18038 464.43798 808.52343 C
464.43798 809.86450 465.52706 810.95329 466.86926 810.95329 C
468.21118 810.95329 469.30025 809.86450 469.30025 808.52343 C
469.30025 807.18038 468.21118 806.09244 466.86926 806.09244 C
@c
460.81616 806.09244 m
459.47424 806.09244 458.38602 807.18038 458.38602 808.52343 C
458.38602 809.86450 459.47424 810.95329 460.81616 810.95329 C
462.15921 810.95329 463.24715 809.86450 463.24715 808.52343 C
463.24715 807.18038 462.15921 806.09244 460.81616 806.09244 C
@c
454.81720 806.09244 m
453.47414 806.09244 452.38620 807.18038 452.38620 808.52343 C
452.38620 809.86450 453.47414 810.95329 454.81720 810.95329 C
456.15912 810.95329 457.24706 809.86450 457.24706 808.52343 C
457.24706 807.18038 456.15912 806.09244 454.81720 806.09244 C
@c
448.70202 806.09244 m
447.36009 806.09244 446.27102 807.18038 446.27102 808.52343 C
446.27102 809.86450 447.36009 810.95329 448.70202 810.95329 C
450.04507 810.95329 451.13301 809.86450 451.13301 808.52343 C
451.13301 807.18038 450.04507 806.09244 448.70202 806.09244 C
@c
442.74416 806.09244 m
441.40110 806.09244 440.31317 807.18038 440.31317 808.52343 C
440.31317 809.86450 441.40110 810.95329 442.74416 810.95329 C
444.08608 810.95329 445.17402 809.86450 445.17402 808.52343 C
445.17402 807.18038 444.08608 806.09244 442.74416 806.09244 C
@c
436.72309 806.09244 m
435.38003 806.09244 434.29209 807.18038 434.29209 808.52343 C
434.29209 809.86450 435.38003 810.95329 436.72309 810.95329 C
438.06501 810.95329 439.15323 809.86450 439.15323 808.52343 C
439.15323 807.18038 438.06501 806.09244 436.72309 806.09244 C
@c
431.01609 806.09244 m
429.67417 806.09244 428.58624 807.18038 428.58624 808.52343 C
428.58624 809.86450 429.67417 810.95329 431.01609 810.95329 C
432.35915 810.95329 433.44709 809.86450 433.44709 808.52343 C
433.44709 807.18038 432.35915 806.09244 431.01609 806.09244 C
@c
424.90602 806.09244 m
423.56324 806.09244 422.47502 807.18038 422.47502 808.52343 C
422.47502 809.86450 423.56324 810.95329 424.90602 810.95329 C
426.24822 810.95329 427.33616 809.86450 427.33616 808.52343 C
427.33616 807.18038 426.24822 806.09244 424.90602 806.09244 C
@c
418.97225 806.09244 m
417.62920 806.09244 416.54126 807.18038 416.54126 808.52343 C
416.54126 809.86450 417.62920 810.95329 418.97225 810.95329 C
420.31417 810.95329 421.40211 809.86450 421.40211 808.52343 C
421.40211 807.18038 420.31417 806.09244 418.97225 806.09244 C
@c
413.02800 806.09244 m
411.68523 806.09244 410.59814 807.18038 410.59814 808.52343 C
410.59814 809.86450 411.68523 810.95329 413.02800 810.95329 C
414.37020 810.95329 415.45814 809.86450 415.45814 808.52343 C
415.45814 807.18038 414.37020 806.09244 413.02800 806.09244 C
@c
406.90205 806.09244 m
405.56013 806.09244 404.47219 807.18038 404.47219 808.52343 C
404.47219 809.86450 405.56013 810.95329 406.90205 810.95329 C
408.24510 810.95329 409.33304 809.86450 409.33304 808.52343 C
409.33304 807.18038 408.24510 806.09244 406.90205 806.09244 C
@c
400.93625 806.09244 m
399.59405 806.09244 398.50526 807.18038 398.50526 808.52343 C
398.50526 809.86450 399.59405 810.95329 400.93625 810.95329 C
402.27817 810.95329 403.36724 809.86450 403.36724 808.52343 C
403.36724 807.18038 402.27817 806.09244 400.93625 806.09244 C
@c
394.85707 806.09244 m
393.51515 806.09244 392.42608 807.18038 392.42608 808.52343 C
392.42608 809.86450 393.51515 810.95329 394.85707 810.95329 C
396.19899 810.95329 397.28721 809.86450 397.28721 808.52343 C
397.28721 807.18038 396.19899 806.09244 394.85707 806.09244 C
@c
314.87499 806.51140 m
313.73518 806.51140 312.80825 807.43833 312.80825 808.57644 C
312.80825 809.71625 313.73518 810.64431 314.87499 810.64431 C
316.01509 810.64431 316.94202 809.71625 316.94202 808.57644 C
316.94202 807.43833 316.01509 806.51140 314.87499 806.51140 C
@c
276.75524 806.51140 m
275.61600 806.51140 274.69020 807.43833 274.69020 808.57644 C
274.69020 809.71625 275.61600 810.64431 276.75524 810.64431 C
277.89506 810.64431 278.82198 809.71625 278.82198 808.57644 C
278.82198 807.43833 277.89506 806.51140 276.75524 806.51140 C
@c
196.87408 806.14743 m
195.53216 806.14743 194.44309 807.23650 194.44309 808.57729 C
194.44309 809.92035 195.53216 811.00828 196.87408 811.00828 C
198.21600 811.00828 199.30507 809.92035 199.30507 808.57729 C
199.30507 807.23650 198.21600 806.14743 196.87408 806.14743 C
@c
190.87115 806.14743 m
189.52923 806.14743 188.44101 807.23650 188.44101 808.57729 C
188.44101 809.92035 189.52923 811.00828 190.87115 811.00828 C
192.21307 811.00828 193.30214 809.92035 193.30214 808.57729 C
193.30214 807.23650 192.21307 806.14743 190.87115 806.14743 C
@c
184.80614 806.14743 m
183.46309 806.14743 182.37515 807.23650 182.37515 808.57729 C
182.37515 809.92035 183.46309 811.00828 184.80614 811.00828 C
186.14806 811.00828 187.23713 809.92035 187.23713 808.57729 C
187.23713 807.23650 186.14806 806.14743 184.80614 806.14743 C
@c
179.03707 806.14743 m
177.69515 806.14743 176.60721 807.23650 176.60721 808.57729 C
176.60721 809.92035 177.69515 811.00828 179.03707 811.00828 C
180.38013 811.00828 181.46806 809.92035 181.46806 808.57729 C
181.46806 807.23650 180.38013 806.14743 179.03707 806.14743 C
@c
172.97915 806.14743 m
171.63723 806.14743 170.54901 807.23650 170.54901 808.57729 C
170.54901 809.92035 171.63723 811.00828 172.97915 811.00828 C
174.32220 811.00828 175.41014 809.92035 175.41014 808.57729 C
175.41014 807.23650 174.32220 806.14743 172.97915 806.14743 C
@c
166.98217 806.14743 m
165.64025 806.14743 164.55118 807.23650 164.55118 808.57729 C
164.55118 809.92035 165.64025 811.00828 166.98217 811.00828 C
168.32409 811.00828 169.41203 809.92035 169.41203 808.57729 C
169.41203 807.23650 168.32409 806.14743 166.98217 806.14743 C
@c
160.92510 806.14743 m
159.58318 806.14743 158.49524 807.23650 158.49524 808.57729 C
158.49524 809.92035 159.58318 811.00828 160.92510 811.00828 C
162.26816 811.00828 163.35609 809.92035 163.35609 808.57729 C
163.35609 807.23650 162.26816 806.14743 160.92510 806.14743 C
@c
154.99106 806.14743 m
153.64913 806.14743 152.56006 807.23650 152.56006 808.57729 C
152.56006 809.92035 153.64913 811.00828 154.99106 811.00828 C
156.33411 811.00828 157.42205 809.92035 157.42205 808.57729 C
157.42205 807.23650 156.33411 806.14743 154.99106 806.14743 C
@c
149.01024 806.14743 m
147.66803 806.14743 146.57924 807.23650 146.57924 808.57729 C
146.57924 809.92035 147.66803 811.00828 149.01024 811.00828 C
150.35301 811.00828 151.44123 809.92035 151.44123 808.57729 C
151.44123 807.23650 150.35301 806.14743 149.01024 806.14743 C
@c
142.94324 806.14743 m
141.60019 806.14743 140.51225 807.23650 140.51225 808.57729 C
140.51225 809.92035 141.60019 811.00828 142.94324 811.00828 C
144.28602 811.00828 145.37424 809.92035 145.37424 808.57729 C
145.37424 807.23650 144.28602 806.14743 142.94324 806.14743 C
@c
136.86605 806.14743 m
135.52413 806.14743 134.43619 807.23650 134.43619 808.57729 C
134.43619 809.92035 135.52413 811.00828 136.86605 811.00828 C
138.20910 811.00828 139.29704 809.92035 139.29704 808.57729 C
139.29704 807.23650 138.20910 806.14743 136.86605 806.14743 C
@c
130.92123 806.14743 m
129.57817 806.14743 128.49024 807.23650 128.49024 808.57729 C
128.49024 809.92035 129.57817 811.00828 130.92123 811.00828 C
132.26315 811.00828 133.35109 809.92035 133.35109 808.57729 C
133.35109 807.23650 132.26315 806.14743 130.92123 806.14743 C
@c
124.80406 806.14743 m
123.46214 806.14743 122.37307 807.23650 122.37307 808.57729 C
122.37307 809.92035 123.46214 811.00828 124.80406 811.00828 C
126.14598 811.00828 127.23420 809.92035 127.23420 808.57729 C
127.23420 807.23650 126.14598 806.14743 124.80406 806.14743 C
@c
110.59512 804.89934 m
83.36608 804.89934 L
81.32003 804.89934 79.65609 806.54939 79.65609 808.57729 C
79.65609 810.60746 81.32003 812.25638 83.36608 812.25638 C
110.59512 812.25638 L
112.64117 812.25638 114.30510 810.60746 114.30510 808.57729 C
114.30510 806.54939 112.64117 804.89934 110.59512 804.89934 C
@c
30.99600 800.75140 m
560.50809 800.75140 L
560.50809 815.96948 L
30.99600 815.96948 L
30.99600 800.75140 L
@c
30.99600 815.96948 m
30.99600 800.75140 L
30.99600 815.96948 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
