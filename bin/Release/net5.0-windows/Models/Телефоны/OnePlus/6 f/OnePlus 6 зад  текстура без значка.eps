%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 98 315 350 789 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: 0720-OnePlus 6 зад  текстура ...
%%CreationDate: Sun Apr 14 12:17:38 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
103.80813 336.73294 343.95506 766.89921 @E
/$fm 0 def
 0 O 0 @g
0.2314 0.2353 0.2510  create_rgb_color set_solid_fill
104.55449 741.35707 m
104.10831 646.53024 L
103.91953 630.60633 104.24069 614.91657 104.22085 598.99181 C
104.03263 583.06706 104.18173 567.13946 104.16501 551.45339 C
104.23956 543.49058 103.80784 535.53260 104.22312 527.80535 C
104.11483 504.40139 L
104.09811 488.71559 104.24466 472.54620 104.05644 456.62343 C
103.70466 441.18312 104.18882 425.01005 104.00598 409.56860 C
103.94306 404.26044 103.45833 363.24482 104.28746 362.02819 C
105.62088 360.56438 117.97739 363.55153 119.61921 359.67033 C
120.60907 357.72831 119.68838 351.22422 124.01065 345.62183 C
131.49666 336.36161 140.61543 336.73380 152.09433 336.83641 C
175.89855 337.27266 199.68803 336.50164 223.32416 336.93987 C
235.30791 337.03625 247.28995 336.89140 259.44094 336.74400 C
271.42611 336.84038 283.24318 336.93874 295.39304 336.79247 C
306.86995 336.65301 315.80816 336.06283 323.17597 345.38428 C
324.37502 346.81748 325.75408 349.21389 326.45395 351.37701 C
329.25118 359.54787 324.72000 361.77420 334.67698 361.65373 C
337.54677 361.61887 341.09263 361.81757 343.11572 361.55169 C
344.14781 363.22809 343.44482 446.48702 343.56189 456.37965 C
344.10586 487.98454 343.29969 519.84567 343.67386 551.45140 C
343.79688 561.82762 343.78781 589.57767 343.29770 605.26772 C
343.51767 623.84627 343.06186 628.19518 343.77987 646.04381 C
343.55877 670.17713 344.00863 693.81865 343.94967 717.46753 C
343.89666 741.59972 L
341.02885 741.63373 337.98784 741.42935 335.11918 741.46365 C
332.92517 741.49058 329.03405 740.81367 328.05099 743.23871 C
327.06794 745.66290 328.47392 750.47244 323.65899 757.28693 C
321.33402 760.45238 317.99310 763.38907 313.45597 765.13238 C
308.24504 766.88561 302.67014 766.46948 296.76302 766.54176 C
284.61317 766.68803 272.45792 766.59364 260.30693 766.74019 C
248.49411 766.88447 236.33717 766.54857 224.18617 766.69483 C
200.39414 767.22463 176.24976 766.55055 152.45093 766.59761 C
146.88170 766.66592 140.47200 766.98482 135.89235 765.10913 C
128.09225 762.06614 122.62592 756.58167 120.67285 748.40230 C
120.14334 746.47644 120.46961 745.50756 120.28082 743.82151 C
119.55713 739.72828 107.44583 743.25288 104.55449 741.35707 C
@c
F

@rax %Note: Object
98.67770 768.09118 349.61357 788.44876 @E
/$fm 0 def
 0 O 0 @g
0.2314 0.2353 0.2510  create_rgb_color set_solid_fill
99.00397 785.82529 m
98.47191 783.65962 98.71852 775.93465 98.85827 773.52038 C
101.21528 773.00901 124.99427 771.27392 129.04157 770.98280 C
139.50170 770.61487 150.12510 769.76220 160.58863 769.63578 C
165.31427 769.57965 170.37156 769.03512 176.10945 768.96680 C
181.50973 768.90047 187.24762 768.83159 192.64507 768.52460 C
212.55109 767.55940 236.69717 768.47443 256.95609 768.71197 C
267.41792 768.58554 277.89307 769.42403 288.18992 769.54054 C
301.86312 769.61565 319.77213 771.08825 333.79313 772.12630 C
336.32787 772.33606 339.19767 772.30176 341.56290 772.51465 C
347.13780 772.92879 L
350.00872 773.13628 349.33380 773.14309 349.25868 781.10816 C
349.33266 787.38094 353.70680 786.12208 329.58113 786.89650 C
262.75606 788.18825 L
255.66718 788.27244 235.24696 788.51934 229.33814 788.35096 C
218.86611 787.75313 207.06406 788.86120 196.25443 788.26762 C
191.01713 787.84951 185.11030 787.91953 179.87868 787.98359 C
164.18353 788.17323 146.78674 787.17742 131.08904 787.12611 C
125.85402 786.94753 120.28252 786.77405 115.04778 786.59546 C
110.99509 786.40384 102.05320 786.75392 99.00397 785.82529 C
@c
F

@rax %Note: Object
98.37354 315.06293 349.11808 335.11550 @E
/$fm 0 def
 0 O 0 @g
0.2314 0.2353 0.2510  create_rgb_color set_solid_fill
98.50167 329.52161 m
98.37354 318.66435 L
98.69074 316.97150 98.36532 317.94066 98.86535 317.45225 C
99.86967 316.71581 181.03918 315.25115 193.36195 315.34356 C
203.65710 315.21912 214.63200 315.56835 224.92205 315.20324 C
235.21493 314.83786 246.02400 315.43058 256.31518 315.06463 C
258.84709 315.03430 261.55417 315.48387 263.91515 315.45524 C
266.61317 315.18142 269.31912 315.63128 271.51313 315.60463 C
302.91109 315.94847 L
318.44693 316.48450 333.46602 316.30309 349.00583 317.32101 C
349.03786 319.97537 349.07471 323.11191 349.10872 326.00721 C
349.15890 330.10894 349.15578 329.86743 344.76973 330.16195 C
336.50362 330.50296 328.74917 331.32161 320.48192 331.66205 C
312.55313 331.99937 303.28299 333.07710 296.02715 333.16441 C
275.61118 333.89433 248.45698 335.67052 228.70091 334.94457 C
217.72715 334.59449 205.92113 335.46104 195.11178 334.86803 C
184.13093 334.03578 173.50129 334.40513 162.35433 333.81694 C
152.21991 333.21515 101.90013 331.41146 98.50167 329.52161 C
@c
F

@rax %Note: Object
106.92170 601.07414 114.23254 638.62668 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
110.25836 638.49203 m
106.36498 637.57417 107.00872 634.91244 107.12353 630.32570 C
107.03254 608.36797 L
107.00050 605.71417 105.93128 600.90066 111.16573 601.07924 C
114.87855 601.03276 114.09194 605.86923 114.13219 609.24756 C
114.22261 631.20529 L
114.07663 633.13710 115.16655 639.63865 110.25836 638.49203 C
@c
F

@rax %Note: Object
210.78028 319.41496 236.63509 330.54548 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
215.48098 330.27789 m
210.90416 328.64428 208.30706 323.12580 214.18016 320.15934 C
216.52809 318.92428 219.74315 319.60913 222.44315 319.57710 C
225.31493 319.78318 228.85200 319.25764 231.72491 319.46428 C
237.63997 320.11625 238.23808 327.83102 233.37014 330.06217 C
232.02397 330.56079 217.17298 330.74050 215.48098 330.27789 C
@c
F

@rax %Note: Object
264.34517 321.82894 300.92967 328.69701 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
264.34998 323.65446 m
267.02391 321.44995 269.22416 321.90605 273.44296 321.85531 C
295.04806 321.83546 L
296.56715 321.81676 298.42299 321.79465 299.61298 322.50416 C
300.63402 323.21509 301.32907 324.89603 300.67398 326.59370 C
299.69291 329.25912 294.79011 328.59496 291.58413 328.63323 C
284.66107 328.47647 276.73313 328.81323 270.14797 328.65194 C
266.43203 328.45493 264.23093 327.75817 264.34998 323.65446 C
@c
F

@rax %Note: Object
106.98180 671.39490 114.48057 699.28583 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
109.79291 699.06557 m
106.74113 697.89600 107.06145 696.44466 107.18759 692.82283 C
106.98180 675.45156 L
107.11928 672.79465 108.61540 670.84696 111.66180 671.53408 C
114.36775 671.98450 114.06416 674.88293 114.09846 677.77880 C
114.13304 680.67326 114.16649 683.56800 114.20135 686.46472 C
114.24983 690.56617 116.06031 700.92000 109.79291 699.06557 C
@c
F

@rax %Note: Object
166.86567 319.60120 179.44894 331.83780 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
172.45757 331.76381 m
163.99644 329.93575 165.55011 318.57591 174.34006 319.67631 C
183.29896 320.77417 179.05323 332.89058 172.45757 331.76381 C
@c
F

@rax %Note: Object
206.49798 667.68831 241.60394 736.55688 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
224.04898 736.55688 m
224.05011 736.55688 L
233.70406 736.55688 241.60394 728.56772 241.60394 718.80265 C
241.60394 685.44170 L
241.60394 675.67861 233.70406 667.68831 224.05011 667.68831 C
224.04898 667.68831 L
214.39616 667.68831 206.49798 675.67861 206.49798 685.44170 C
206.49798 718.80265 L
206.49798 728.56772 214.39616 736.55688 224.04898 736.55688 C
@c
F

@rax %Note: Object
206.49770 667.68803 241.60394 736.55490 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
[0.99999940 0.00000000 0.00000000 1.00300360 0.00000000 0.00000000] 1 0.02806 0.02835 0.00000 @w
224.04954 736.55490 m
224.05039 736.55490 L
233.70406 736.55490 241.60394 728.56602 241.60394 718.80038 C
241.60394 685.44085 L
241.60394 675.67720 233.70406 667.68803 224.05039 667.68803 C
224.04954 667.68803 L
214.39587 667.68803 206.49770 675.67720 206.49770 685.44085 C
206.49770 718.80038 L
206.49770 728.56602 214.39587 736.55490 224.04954 736.55490 C
@c
S

@rax %Note: Object
211.56009 672.80967 236.54013 731.43439 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.8000  create_cmyk_color set_solid_fill
224.05011 731.43439 m
224.05011 731.43439 L
230.92016 731.43439 236.54013 725.75036 236.54013 718.80265 C
236.54013 685.44283 L
236.54013 678.49483 230.92016 672.80967 224.05011 672.80967 C
224.05011 672.80967 L
217.18091 672.80967 211.56009 678.49483 211.56009 685.44283 C
211.56009 718.80265 L
211.56009 725.75036 217.18091 731.43439 224.05011 731.43439 C
@c
F

@rax %Note: Object
211.55953 672.80854 236.54013 731.43354 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
[0.99999940 0.00000000 0.00000000 1.00300360 0.00000000 0.00000000] 1 0.02806 0.02835 0.00000 @w
224.05039 731.43354 m
224.05039 731.43354 L
230.92072 731.43354 236.54013 725.74894 236.54013 718.80038 C
236.54013 685.44170 L
236.54013 678.49313 230.92072 672.80854 224.05039 672.80854 C
224.05039 672.80854 L
217.18120 672.80854 211.55953 678.49313 211.55953 685.44170 C
211.55953 718.80038 L
211.55953 725.74894 217.18120 731.43354 224.05039 731.43354 C
@c
S

@rax %Note: Object
215.67912 708.67729 232.37206 725.55987 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
224.02715 725.55987 m
228.63515 725.55987 232.37206 721.77959 232.37206 717.11830 C
232.37206 712.45644 228.63515 708.67729 224.02715 708.67729 C
219.41717 708.67729 215.67912 712.45644 215.67912 717.11830 C
215.67912 721.77959 219.41717 725.55987 224.02715 725.55987 C
@c
F

@rax %Note: Object
215.67940 708.67616 232.37263 725.55874 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
[0.99999940 0.00000000 0.00000000 1.00300360 0.00000000 0.00000000] 1 0.02806 0.02835 0.00000 @w
224.02658 725.55874 m
228.63515 725.55874 232.37263 721.77874 232.37263 717.11717 C
232.37263 712.45502 228.63515 708.67616 224.02658 708.67616 C
219.41688 708.67616 215.67940 712.45502 215.67940 717.11717 C
215.67940 721.77874 219.41688 725.55874 224.02658 725.55874 C
@c
S

@rax %Note: Object
215.76813 678.65726 232.45909 695.53984 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
224.11304 695.53984 m
228.72302 695.53984 232.45909 691.76069 232.45909 687.09855 C
232.45909 682.43669 228.72302 678.65726 224.11304 678.65726 C
219.50504 678.65726 215.76813 682.43669 215.76813 687.09855 C
215.76813 691.76069 219.50504 695.53984 224.11304 695.53984 C
@c
F

@rax %Note: Object
215.76813 678.65641 232.45937 695.53843 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
[0.99999940 0.00000000 0.00000000 1.00300360 0.00000000 0.00000000] 1 0.02806 0.02835 0.00000 @w
224.11304 695.53843 m
228.72387 695.53843 232.45937 691.75984 232.45937 687.09742 C
232.45937 682.43528 228.72387 678.65641 224.11304 678.65641 C
219.50447 678.65641 215.76813 682.43528 215.76813 687.09742 C
215.76813 691.75984 219.50447 695.53843 224.11304 695.53843 C
@c
S

@rax %Note: Object
204.20192 624.85739 243.85691 649.41562 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
216.34214 649.41562 m
231.71698 649.41562 L
238.39313 649.41562 243.85691 643.89033 243.85691 637.13679 C
243.85691 637.13679 L
243.85691 630.38381 238.39313 624.85739 231.71698 624.85739 C
216.34214 624.85739 L
209.66513 624.85739 204.20192 630.38381 204.20192 637.13679 C
204.20192 637.13679 L
204.20192 643.89033 209.66513 649.41562 216.34214 649.41562 C
@c
F

@rax %Note: Object
204.20135 624.85625 243.85748 649.41506 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
[0.99999940 0.00000000 0.00000000 1.00300360 0.00000000 0.00000000] 1 0.02806 0.02835 0.00000 @w
216.34157 649.41506 m
231.71726 649.41506 L
238.39342 649.41506 243.85748 643.88976 243.85748 637.13537 C
243.85748 637.13537 L
243.85748 630.38239 238.39342 624.85625 231.71726 624.85625 C
216.34157 624.85625 L
209.66457 624.85625 204.20135 630.38239 204.20135 637.13537 C
204.20135 637.13537 L
204.20135 643.88976 209.66457 649.41506 216.34157 649.41506 C
@c
S

@rax %Note: Object
215.75509 653.48986 232.23203 662.78580 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
219.46309 662.78580 m
228.52403 662.78580 L
230.56413 662.78580 232.23203 661.09776 232.23203 659.03556 C
232.23203 657.24038 L
232.23203 655.17704 230.56413 653.48986 228.52403 653.48986 C
219.46309 653.48986 L
217.42413 653.48986 215.75509 655.17704 215.75509 657.24038 C
215.75509 659.03556 L
215.75509 661.09776 217.42413 662.78580 219.46309 662.78580 C
@c
F

@rax %Note: Object
215.75509 653.48901 232.23231 662.78409 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
[0.99999940 0.00000000 0.00000000 1.00300360 0.00000000 0.00000000] 1 0.02806 0.02835 0.00000 @w
219.46252 662.78409 m
228.52460 662.78409 L
230.56413 662.78409 232.23231 661.09635 232.23231 659.03471 C
232.23231 657.23896 L
232.23231 655.17619 230.56413 653.48901 228.52460 653.48901 C
219.46252 653.48901 L
217.42413 653.48901 215.75509 655.17619 215.75509 657.23896 C
215.75509 659.03471 L
215.75509 661.09635 217.42413 662.78409 219.46252 662.78409 C
@c
S

@rax %Note: Object
174.50702 773.31883 182.57017 781.47326 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
178.53874 781.47326 m
180.76535 781.47326 182.57017 779.64690 182.57017 777.39506 C
182.57017 775.14208 180.76535 773.31883 178.53874 773.31883 C
176.31184 773.31883 174.50702 775.14208 174.50702 777.39506 C
174.50702 779.64690 176.31184 781.47326 178.53874 781.47326 C
@c
F

@rax %Note: Object
174.50702 773.31685 182.56989 781.47099 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
[0.99999940 0.00000000 0.00000000 1.00300360 0.00000000 0.00000000] 1 0.02806 0.02835 0.00000 @w
178.53874 781.47099 m
180.76535 781.47099 182.56989 779.64491 182.56989 777.39392 C
182.56989 775.14066 180.76535 773.31685 178.53874 773.31685 C
176.31184 773.31685 174.50702 775.14066 174.50702 777.39392 C
174.50702 779.64491 176.31184 781.47099 178.53874 781.47099 C
@c
S

@rax %Note: Object
186.03950 321.13077 193.44586 328.62161 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
189.74268 328.62161 m
191.78759 328.62161 193.44586 326.94491 193.44586 324.87647 C
193.44586 322.80831 191.78759 321.13077 189.74268 321.13077 C
187.69776 321.13077 186.03950 322.80831 186.03950 324.87647 C
186.03950 326.94491 187.69776 328.62161 189.74268 328.62161 C
@c
F

@rax %Note: Object
186.03950 321.13077 193.44586 328.62161 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
[0.99999940 0.00000000 0.00000000 1.00300360 0.00000000 0.00000000] 1 0.02806 0.02835 0.00000 @w
189.74268 328.62161 m
191.78759 328.62161 193.44586 326.94491 193.44586 324.87647 C
193.44586 322.80803 191.78759 321.13077 189.74268 321.13077 C
187.69776 321.13077 186.03950 322.80803 186.03950 324.87647 C
186.03950 326.94491 187.69776 328.62161 189.74268 328.62161 C
@c
S

@rax %Note: Object
166.65165 319.13972 179.66268 332.29899 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
173.15717 332.29899 m
176.75008 332.29899 179.66268 329.35351 179.66268 325.71950 C
179.66268 322.08520 176.75008 319.13972 173.15717 319.13972 C
169.56425 319.13972 166.65165 322.08520 166.65165 325.71950 C
166.65165 329.35351 169.56425 332.29899 173.15717 332.29899 C
@c
F

@rax %Note: Object
166.65165 319.13972 179.66268 332.29899 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
[0.99999940 0.00000000 0.00000000 1.00300360 0.00000000 0.00000000] 1 0.02806 0.02835 0.00000 @w
173.15717 332.29899 m
176.75008 332.29899 179.66268 329.35351 179.66268 325.71921 C
179.66268 322.08520 176.75008 319.13972 173.15717 319.13972 C
169.56425 319.13972 166.65165 322.08520 166.65165 325.71921 C
166.65165 329.35351 169.56425 332.29899 173.15717 332.29899 C
@c
S

@rax %Note: Object
333.60094 679.92208 341.38176 738.28205 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
337.49263 738.28205 m
337.49263 738.28205 L
339.63165 738.28205 341.38176 736.51039 341.38176 734.34699 C
341.38176 683.85685 L
341.38176 681.69231 339.63165 679.92208 337.49263 679.92208 C
337.49263 679.92208 L
335.35191 679.92208 333.60094 681.69231 333.60094 683.85685 C
333.60094 734.34699 L
333.60094 736.51039 335.35191 738.28205 337.49263 738.28205 C
@c
F

@rax %Note: Object
333.60151 679.92038 341.38261 738.28006 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
[0.99999940 0.00000000 0.00000000 1.00300360 0.00000000 0.00000000] 1 0.02806 0.02835 0.00000 @w
337.49291 738.28006 m
337.49291 738.28006 L
339.63194 738.28006 341.38261 736.50954 341.38261 734.34501 C
341.38261 683.85543 L
341.38261 681.69090 339.63194 679.92038 337.49291 679.92038 C
337.49291 679.92038 L
335.35219 679.92038 333.60151 681.69090 333.60151 683.85543 C
333.60151 734.34501 L
333.60151 736.50954 335.35219 738.28006 337.49291 738.28006 C
@c
S

@rax %Note: Object
333.46318 581.51254 341.24287 639.87222 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
337.35175 639.87222 m
337.35175 639.87222 L
339.49162 639.87222 341.24287 638.10113 341.24287 635.93745 C
341.24287 585.44816 L
341.24287 583.28391 339.49162 581.51254 337.35175 581.51254 C
337.35175 581.51254 L
335.21301 581.51254 333.46318 583.28391 333.46318 585.44816 C
333.46318 635.93745 L
333.46318 638.10113 335.21301 639.87222 337.35175 639.87222 C
@c
F

@rax %Note: Object
333.46290 581.51140 341.24315 639.87080 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
[0.99999940 0.00000000 0.00000000 1.00300360 0.00000000 0.00000000] 1 0.02806 0.02835 0.00000 @w
337.35260 639.87080 m
337.35260 639.87080 L
339.49247 639.87080 341.24315 638.09943 341.24315 635.93717 C
341.24315 585.44702 L
341.24315 583.28306 339.49247 581.51140 337.35260 581.51140 C
337.35260 581.51140 L
335.21357 581.51140 333.46290 583.28306 333.46290 585.44702 C
333.46290 635.93717 L
333.46290 638.09943 335.21357 639.87080 337.35260 639.87080 C
@c
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
