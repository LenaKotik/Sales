%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 251 176 505 653 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: S10 зад Vector Split Back Log...
%%CreationDate: Sat May 18 12:20:24 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
315.01332 185.04595 336.38910 192.28394 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0 0.02806 0.02806 0.00000 @w
316.57096 192.28394 m
334.83146 192.28394 l
335.68838 192.28394 336.38910 191.58321 336.38910 190.72630 c
336.38910 186.60359 l
336.38910 185.74668 335.68838 185.04595 334.83146 185.04595 c
316.57096 185.04595 l
315.71405 185.04595 315.01332 185.74668 315.01332 186.60359 c
315.01332 190.72630 l
315.01332 191.58321 315.71405 192.28394 316.57096 192.28394 c
@c
S

@rax %Note: Object
478.91452 191.35928 504.07540 636.22403 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.25002 0.25002 0.00000 @w
494.10652 463.31915 m
494.10652 462.09203 493.11156 461.09707 491.88444 461.09707 C
490.65761 461.09707 489.66350 462.09203 489.66350 463.31915 C
489.66350 488.06816 L
489.66350 489.29499 490.65761 490.28995 491.88444 490.28995 C
493.11156 490.28995 494.10652 489.29499 494.10652 488.06816 C
494.10652 463.31915 L
@c
489.63345 569.95597 m
489.63345 571.13121 490.58561 572.08309 491.76057 572.08309 C
492.93553 572.08309 493.88740 571.13121 493.88740 569.95597 C
493.88740 517.28995 L
493.88740 516.11499 492.93553 515.16312 491.76057 515.16312 C
490.58561 515.16312 489.63345 516.11499 489.63345 517.28995 C
489.63345 569.95597 L
@c
503.39537 199.67896 m
502.80038 203.43515 502.14841 207.12614 501.33458 210.83698 C
500.27556 215.66523 498.97956 220.95723 498.58838 223.29723 C
497.73458 228.41518 497.18551 233.73921 497.18551 238.92917 C
497.18551 589.60205 L
497.18551 596.83011 496.09843 599.37420 498.61843 609.48397 C
499.70750 613.85613 503.79250 623.03698 503.90561 629.91014 C
503.94444 632.27310 504.07540 632.90409 504.07540 635.70019 C
493.53761 636.19710 L
492.02362 636.26712 490.50652 636.18605 488.99254 636.11717 C
478.91452 635.40510 L
478.91452 635.23616 L
479.49647 630.34101 480.71537 625.78998 482.91562 618.84595 C
483.60557 616.66696 484.37263 614.32809 484.84148 612.10715 C
485.52463 608.87707 485.68649 607.48214 485.95153 604.13102 C
486.01049 603.38409 486.11339 602.63121 486.10743 601.88117 C
486.11055 600.29121 L
486.13861 228.98296 L
486.03061 226.27304 L
485.86961 222.73909 486.04847 219.49710 485.29049 215.90901 C
484.82050 213.68806 484.52939 212.06806 483.82951 209.35106 C
482.01137 202.29704 480.69241 195.32409 480.23745 192.04413 C
480.23745 191.87518 L
488.99254 191.41115 L
490.50737 191.34198 492.02646 191.34198 493.54243 191.41200 C
504.07540 191.87320 L
504.07540 191.87320 503.51443 198.92409 503.39537 199.67896 C
@c
S

@rax %Note: Object
251.48750 189.06775 277.27398 638.51641 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.25002 0.25002 0.00000 @w
266.96778 524.05427 m
266.96778 522.79427 265.94702 521.77238 264.68702 521.77238 C
263.42589 521.77238 262.40485 522.79427 262.40485 524.05427 C
262.40485 548.20545 L
262.40485 549.46630 263.42589 550.48847 264.68702 550.48847 C
265.94702 550.48847 266.96778 549.46630 266.96778 548.20545 C
266.96778 524.05427 L
@c
277.27398 636.96444 m
266.81783 638.40643 L
265.30299 638.47531 263.78589 638.55950 262.27276 638.49033 C
251.65276 638.36929 L
251.65276 635.74951 251.48891 633.29726 251.48778 630.69534 C
251.48494 622.64750 254.72098 617.40652 256.88494 606.91153 C
258.13899 600.82753 258.90690 594.82148 258.90690 587.59427 C
258.90690 237.66350 L
258.90690 230.43628 257.90202 222.14126 256.69984 216.07852 C
256.21597 213.63250 255.61077 210.96142 255.08098 208.30847 C
253.66989 201.22328 253.08283 197.13628 252.93175 194.78750 C
252.74693 191.91430 252.70696 192.02627 252.58479 189.29849 C
262.27276 189.12047 L
263.78589 189.05046 265.30299 189.05046 266.81783 189.11934 C
276.42302 190.15030 L
276.42302 190.31953 L
276.49077 195.17131 274.74690 199.83146 272.54693 206.77635 C
271.85783 208.95534 271.27276 211.11250 270.80277 213.33345 C
270.32485 215.59153 270.08986 217.74728 269.87102 220.03228 C
269.65077 222.34337 269.78202 224.65332 269.79902 226.97433 C
269.79902 598.28343 L
269.77975 600.99846 L
269.86479 614.36126 277.27398 624.26041 277.27398 636.79550 C
277.27398 636.96444 L
@c
S

@rax %Note: Object
298.40655 626.72967 457.40381 652.29959 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.25002 0.25002 0.00000 @w
452.60079 637.02765 m
405.68372 637.02765 L
403.62463 637.02765 401.94964 638.70265 401.94964 640.76060 C
401.94964 642.81969 403.62463 644.49468 405.68372 644.49468 C
452.60079 644.49468 L
454.65959 644.49468 456.33458 642.81969 456.33458 640.76060 C
456.33458 638.70265 454.65959 637.02765 452.60079 637.02765 C
@c
341.49657 638.51471 m
340.25783 638.51471 339.24983 639.52271 339.24983 640.76173 C
339.24983 642.00076 340.25783 643.00762 341.49657 643.00762 C
342.73672 643.00762 343.74359 642.00076 343.74359 640.76173 C
343.74359 639.52271 342.73672 638.51471 341.49657 638.51471 C
@c
457.40268 652.29959 m
298.40769 652.29959 L
298.40655 626.73959 L
300.50561 626.77559 L
453.89367 626.77559 L
457.40381 626.72967 L
457.40268 652.29959 L
@c
S

@rax %Note: Object
404.17313 639.18425 407.32696 642.33808 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.25002 0.25002 0.00000 @w
405.75005 642.33808 m
404.87896 642.33808 404.17313 641.63225 404.17313 640.76117 C
404.17313 639.89008 404.87896 639.18425 405.75005 639.18425 C
406.62000 639.18425 407.32696 639.89008 407.32696 640.76117 C
407.32696 641.63225 406.62000 642.33808 405.75005 642.33808 C
@c
S

@rax %Note: Object
299.25694 176.72967 456.55285 199.81871 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.25002 0.25002 0.00000 @w
429.29688 183.56655 m
425.86611 183.56655 423.08504 186.37058 423.08504 189.82857 C
423.08504 193.28655 425.86611 196.08973 429.29688 196.08973 C
432.72907 196.08973 435.50986 193.28655 435.50986 189.82857 C
435.50986 186.37058 432.72907 183.56655 429.29688 183.56655 C
@c
387.09099 185.50261 m
370.65203 185.50261 L
367.85594 185.50261 365.58907 187.76863 365.58907 190.56557 C
365.58907 193.36082 367.85594 195.62769 370.65203 195.62769 C
387.09099 195.62769 L
389.88709 195.62769 392.15310 193.36082 392.15310 190.56557 C
392.15310 187.76863 389.88709 185.50261 387.09099 185.50261 C
@c
347.99301 186.47461 m
346.82797 186.47461 345.88403 187.41855 345.88403 188.58359 C
345.88403 189.74863 346.82797 190.69370 347.99301 190.69370 C
349.15805 190.69370 350.10312 189.74863 350.10312 188.58359 C
350.10312 187.41855 349.15805 186.47461 347.99301 186.47461 C
@c
453.80494 199.77874 m
301.65987 199.77874 L
299.25694 199.81871 L
299.25808 176.72967 L
456.55285 176.72967 L
456.55285 199.81077 L
453.80494 199.77874 L
@c
S

@rax %Note: Object
276.99165 206.25591 478.81871 621.32769 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.25002 0.25002 0.00000 @w
440.77266 550.60469 m
440.77266 544.51786 435.83754 539.58274 429.75156 539.58274 C
325.77562 539.58274 L
319.68850 539.58274 314.75254 544.51786 314.75254 550.60469 C
314.75254 561.64989 L
314.75254 567.73672 319.68850 572.67184 325.77562 572.67184 C
429.75156 572.67184 L
435.83754 572.67184 440.77266 567.73672 440.77266 561.64989 C
440.77266 550.60469 L
@c
410.81556 470.74677 m
410.17465 470.30683 409.42460 470.20479 408.66945 470.19373 C
408.61446 470.18466 405.06066 469.93890 404.98753 472.36677 C
404.98753 477.36992 L
404.98753 477.36992 404.83162 480.18586 408.21959 480.18586 C
408.33071 480.18586 408.43049 480.18586 408.54161 480.17679 C
409.56746 480.09090 410.80054 479.84683 411.28469 478.82268 C
411.35556 478.67074 411.40460 478.50888 411.44060 478.34589 C
411.51969 477.98079 411.58346 477.57685 411.56561 477.20183 C
411.55654 477.00992 411.40970 476.85487 411.22545 476.85487 C
409.16863 476.86365 L
409.15361 477.16072 409.17061 477.47565 409.11562 477.76791 C
409.07849 477.96378 408.99146 478.14378 408.83754 478.27587 C
408.51553 478.55083 408.02060 478.52674 407.67250 478.32973 C
407.31761 478.12677 407.31052 477.73672 407.31052 477.38069 C
407.31052 476.57083 L
407.31052 474.57269 L
407.31052 473.73591 L
407.31052 473.53578 407.31052 472.88778 407.31959 472.76872 C
407.33461 472.58079 407.32866 472.40277 407.43269 472.23666 C
407.66769 471.86192 408.17452 471.79786 408.57846 471.86476 C
408.75647 471.89480 408.93959 471.95575 409.07849 472.07679 C
409.23950 472.21682 409.29846 472.42290 409.29846 472.63181 C
409.24261 474.41679 L
408.45345 474.41679 L
408.45345 475.63965 L
411.72661 475.63965 L
411.72661 475.63965 411.74561 472.61367 411.74561 472.60488 C
411.75071 471.91181 411.41254 471.15666 410.81556 470.74677 C
@c
402.36066 470.66088 m
402.36066 470.56082 402.27846 470.48769 402.18661 470.48769 C
399.38258 470.43184 L
399.30066 470.43184 399.23660 470.47691 399.08665 470.54976 C
396.91247 477.93770 L
396.71150 477.93770 L
396.84161 470.92479 L
396.84161 470.65068 396.78746 470.43184 396.51165 470.43184 C
394.93672 470.43184 L
394.66970 470.43184 394.44945 470.65068 394.44945 470.92479 C
394.45965 479.65380 L
394.45965 479.75471 394.53250 479.82784 394.63370 479.82784 C
397.90346 479.82784 L
397.97745 479.82784 398.04265 479.78192 398.06957 479.71786 C
400.14765 472.86369 L
400.25764 472.86369 L
400.25764 479.64472 L
400.25764 479.74592 400.34069 479.81792 400.44161 479.81792 C
402.19569 479.81792 L
402.29546 479.81792 402.37852 479.74592 402.37852 479.64472 C
402.36066 470.66088 L
@c
391.75058 472.85093 m
391.75058 470.28472 388.85754 470.05370 388.69654 470.05370 C
384.98372 470.05370 384.99052 472.92378 384.99052 472.92378 C
384.99052 479.91770 L
387.39572 479.92592 L
387.39572 472.91471 L
387.44561 471.68986 388.49046 471.83981 388.49046 471.83981 C
389.35871 471.91691 389.33461 472.93285 389.33461 472.93285 C
389.33461 479.92592 L
391.75058 479.92592 L
391.75058 472.85093 L
@c
382.59468 472.22079 m
382.35572 470.08375 379.52164 469.61688 377.76756 470.10983 C
376.63767 470.42872 375.87969 471.38967 375.79748 472.62189 C
375.76063 473.49269 L
378.32145 473.49269 L
378.32145 472.96176 378.19247 472.28485 378.67351 471.91181 C
379.14463 471.54784 379.87257 471.71792 380.13052 472.24573 C
380.50554 473.01392 379.85272 473.50772 379.26255 473.86290 C
378.75146 474.17074 378.26561 474.52365 377.76954 474.85871 C
376.79669 475.51578 375.75666 476.23691 375.81250 477.51591 C
375.83065 477.87165 375.86750 478.22683 376.00469 478.54687 C
376.68869 480.08183 378.76450 480.32674 380.22350 480.05490 C
381.59660 479.79780 382.32850 478.84167 382.38945 477.15874 C
380.09169 477.15874 L
380.11946 477.15874 380.07354 477.63383 380.06362 477.67975 C
379.97546 478.11685 379.54658 478.56869 379.06271 478.53978 C
378.43172 478.50180 378.19446 477.75883 378.44872 477.25370 C
378.54850 477.04365 378.69165 476.84183 378.88866 476.70576 C
379.72460 476.12891 380.69065 475.75672 381.48945 475.12290 C
381.87156 474.81987 382.21257 474.45279 382.40561 473.99981 C
382.64060 473.44592 382.64570 472.83874 382.59468 472.22079 C
@c
373.04759 470.43184 m
371.75272 470.43184 L
371.48655 470.43184 371.26545 470.65975 371.26545 470.92479 C
371.20167 478.30280 L
370.85159 478.30280 L
369.58450 470.73969 L
369.53972 470.50271 369.32854 470.32866 369.09865 470.32866 C
367.39956 470.32866 L
367.15153 470.32866 366.94970 470.50271 366.91257 470.73090 C
365.61855 478.22769 L
365.29058 478.22769 L
365.29058 470.88765 L
365.29058 470.62290 365.07855 470.39386 364.79367 470.39386 C
363.37748 470.39386 L
363.10167 470.39386 362.88170 470.62290 362.89049 470.89587 C
363.06567 479.31392 L
363.07446 479.57868 363.28564 479.78872 363.56145 479.78872 C
366.74759 479.78872 L
366.99562 479.78872 367.19745 479.61581 367.23345 479.36891 C
367.96847 473.82775 L
368.04246 473.26989 L
368.39169 473.26989 L
368.47446 473.82775 L
369.36850 479.39584 L
369.36850 479.41483 L
369.36850 479.43269 369.36850 479.45083 369.37757 479.46869 C
369.39657 479.66088 369.54369 479.81565 369.75345 479.83380 C
369.76365 479.84372 369.78151 479.84372 369.79172 479.84372 C
369.80957 479.84372 369.82772 479.84372 369.83650 479.83380 C
372.82847 479.83380 L
373.08472 479.83380 373.30554 479.63367 373.31461 479.35984 C
373.46060 473.82775 L
373.54365 470.93386 L
373.55272 470.65975 373.33361 470.43184 373.04759 470.43184 C
@c
360.38750 470.31080 m
358.71647 470.31080 L
358.49764 470.31080 358.30460 470.47493 358.28646 470.69376 C
357.31049 478.29969 L
356.85269 478.29969 L
355.78658 470.68469 L
355.75852 470.47493 355.57569 470.31080 355.35458 470.31080 C
353.75953 470.31080 L
353.48372 470.31080 353.28246 470.54778 353.32866 470.82189 C
355.16268 479.79893 L
359.08356 479.79893 L
360.81950 470.82189 L
360.86570 470.54778 360.65367 470.31080 360.38750 470.31080 C
@c
351.64857 472.23893 m
351.41046 470.10274 348.57553 469.63587 346.82145 470.12769 C
345.69269 470.44772 344.93471 471.40781 344.85165 472.64088 C
344.81452 473.51083 L
347.37562 473.51083 L
347.37562 472.98076 347.24665 472.30271 347.72769 471.92967 C
348.19767 471.56683 348.92561 471.73578 349.18469 472.26387 C
349.55972 473.03178 348.90661 473.52586 348.31672 473.88076 C
347.67950 474.26485 347.33055 474.53471 346.82372 474.87685 C
345.85058 475.53477 344.81169 476.25591 344.86668 477.53376 C
344.88454 477.88980 344.92167 478.24668 345.05858 478.56586 C
345.74258 480.10082 347.81868 480.34573 349.27767 480.07276 C
350.65049 479.81565 351.38154 478.85981 351.44447 477.17773 C
349.14557 477.17773 L
349.17250 477.17773 349.12658 477.65282 349.11751 477.69874 C
349.03049 478.13584 348.60047 478.58769 348.11660 478.55877 C
347.48646 478.51965 347.24863 477.77669 347.50148 477.27184 C
347.60268 477.06180 347.74554 476.86082 347.94255 476.72476 C
348.77849 476.14677 349.74454 475.77487 350.54362 475.14189 C
350.92460 474.83773 351.26759 474.47178 351.45950 474.01880 C
351.69449 473.46491 351.70951 472.83676 351.64857 472.23893 C
@c
478.69172 600.42586 m
478.65458 602.46992 478.50151 604.51682 478.10551 606.52290 C
477.67351 608.70869 476.99660 610.81682 475.91065 612.50769 C
474.71046 614.37685 473.18372 616.01669 471.40753 617.34586 C
468.30671 619.66772 463.91868 621.07767 460.27247 621.23074 C
455.21745 621.32769 L
300.59150 621.32769 L
295.53761 621.23074 L
291.89169 621.07767 287.50252 619.66772 284.40170 617.34586 C
282.62665 616.01669 281.09849 614.37685 279.89858 612.50769 C
278.81348 610.81682 278.13572 608.70869 277.70372 606.52290 C
277.30772 604.51682 277.15550 602.46992 277.11865 600.42586 C
276.99165 593.41691 L
276.99165 234.16668 L
277.11865 227.15887 L
277.15550 225.11367 277.30772 223.06791 277.70372 221.06069 C
279.32570 212.85666 288.20069 206.35285 295.82050 206.35285 C
301.13348 206.25591 L
455.21745 206.25591 L
460.27247 206.35285 L
467.68365 206.49572 476.49969 212.92384 478.10551 221.06069 C
478.50151 223.06791 478.65458 225.11367 478.69172 227.15887 C
478.81871 234.16668 L
478.81871 593.41691 L
478.69172 600.42586 L
@c
S

@rax %Note: Object
316.74983 541.52844 438.77679 570.72557 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.25002 0.25002 0.00000 @w
432.22280 548.42939 m
432.22280 547.02454 431.06088 545.88643 429.62683 545.88643 C
425.68781 545.88643 L
424.25376 545.88643 423.09184 547.02454 423.09184 548.42939 C
423.09184 564.37852 L
423.09184 565.78337 424.25376 566.92261 425.68781 566.92261 C
429.62683 566.92261 L
431.06088 566.92261 432.22280 565.78337 432.22280 564.37852 C
432.22280 548.42939 L
@c
420.15969 554.67836 m
420.15969 552.64450 418.47477 550.99644 416.39783 550.99644 C
413.86365 550.99644 L
411.78586 550.99644 410.10180 552.64450 410.10180 554.67836 C
410.10180 557.19354 L
410.10180 559.22655 411.78586 560.87546 413.86365 560.87546 C
416.39783 560.87546 L
418.47477 560.87546 420.15969 559.22655 420.15969 557.19354 C
420.15969 554.67836 L
@c
401.29767 551.88340 m
401.29767 550.27956 399.99288 548.97335 398.38876 548.97335 C
389.64274 548.97335 L
388.03776 548.97335 386.73383 550.27956 386.73383 551.88340 C
386.73383 560.37260 L
386.73383 561.97644 388.03776 563.28236 389.64274 563.28236 C
398.38876 563.28236 L
399.99288 563.28236 401.29767 561.97644 401.29767 560.37260 C
401.29767 551.88340 L
@c
369.18085 551.88340 m
369.18085 550.27956 367.87578 548.97335 366.27165 548.97335 C
357.52592 548.97335 L
355.92180 548.97335 354.61672 550.27956 354.61672 551.88340 C
354.61672 560.37260 L
354.61672 561.97644 355.92180 563.28236 357.52592 563.28236 C
366.27165 563.28236 L
367.87578 563.28236 369.18085 561.97644 369.18085 560.37260 C
369.18085 551.88340 L
@c
338.02583 551.88340 m
338.02583 550.27956 336.71991 548.97335 335.11691 548.97335 C
326.36976 548.97335 L
324.76592 548.97335 323.46085 550.27956 323.46085 551.88340 C
323.46085 560.37260 L
323.46085 561.97644 324.76592 563.28236 326.36976 563.28236 C
335.11691 563.28236 L
336.71991 563.28236 338.02583 561.97644 338.02583 560.37260 C
338.02583 551.88340 L
@c
429.73965 570.72557 m
325.78583 570.72557 L
320.79487 570.72557 316.74983 566.68054 316.74983 561.68957 C
316.74983 550.56444 L
316.74983 545.57461 320.79487 541.52844 325.78583 541.52844 C
429.73965 541.52844 L
434.73090 541.52844 438.77679 545.57461 438.77679 550.56444 C
438.77679 561.68957 L
438.77679 566.68054 434.73090 570.72557 429.73965 570.72557 C
@c
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
