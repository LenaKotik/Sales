%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 261 436 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: 5200-S7 зад текстура M-82f3d2...
%%CreationDate: Thu Jun 13 16:40:37 2019
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 261 434
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.33987 414.26391 257.49524 435.59603 @E
/$fm 0 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
180.32003 435.19748 m
47.96901 434.23427 L
39.35934 434.23427 31.76277 433.51342 23.82860 432.31011 C
21.97162 431.82907 20.78986 431.34690 18.76422 431.10709 C
16.73830 430.86586 14.71238 430.62576 12.68674 430.38482 C
9.98589 429.90378 1.03861 429.66369 0.70072 428.46038 C
0.36340 427.73839 0.02580 419.31666 0.86995 418.59468 C
2.05115 418.11335 10.99843 418.11335 13.19301 417.87354 C
27.37389 416.66939 31.93172 414.26391 48.64450 414.26391 C
200.57811 415.22598 L
211.04391 415.46721 219.82195 415.94825 229.61395 417.15156 C
234.17093 417.87354 238.39200 418.83562 242.95011 419.31666 C
244.97603 419.55789 256.62387 420.03893 257.13014 420.52025 C
257.63698 420.76006 257.46803 420.03893 257.46803 422.20431 C
257.29909 423.16668 257.46803 424.36970 257.46803 425.33206 C
257.46803 427.01613 257.46803 428.94170 257.29909 430.62576 C
251.89710 431.58813 246.15808 431.82907 239.23587 432.79115 C
232.99002 433.75351 227.25014 434.47550 221.17294 435.19748 C
215.93991 435.67852 205.98009 435.67852 200.74592 435.43757 C
194.33197 434.95654 187.07187 435.19748 180.32003 435.19748 C
@c
F

@rax %Note: Object
2.96617 -0.93940 260.02913 19.70702 @E
/$fm 0 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
3.69609 3.29499 m
3.86476 3.29499 16.86728 2.33263 18.72454 1.85131 C
23.11483 1.12932 28.85641 0.16696 33.41565 -0.31408 C
44.39140 -1.03578 54.86088 -1.03578 66.00586 -0.79569 C
87.95820 -0.79569 110.24787 -0.55502 132.19994 -0.31408 C
154.15200 -0.31408 176.10406 0.16696 198.05613 0.16696 C
208.69512 0.16696 220.34608 -0.31408 230.30901 1.12932 C
235.20614 1.85131 239.59587 2.81395 244.49301 3.53565 C
249.39099 4.25764 254.62488 4.49830 259.69096 4.97906 C
260.02913 15.32551 L
243.81808 16.28816 L
238.24602 16.76948 233.68592 18.21317 228.62098 18.45354 C
223.04806 18.93515 218.15093 19.41647 212.40992 19.65713 C
195.86098 19.89723 177.45506 19.17553 160.40013 19.41647 C
149.08592 19.41647 137.60391 18.93515 126.12104 18.93515 C
103.15587 19.17553 80.19071 18.21317 57.05631 18.45354 C
43.37858 18.69420 38.14384 17.49146 25.47893 15.56646 C
19.90658 14.60381 11.63254 14.12249 5.72230 13.64145 C
2.85165 13.40050 2.68243 12.91975 3.18898 4.97906 C
3.35820 3.77603 3.35820 3.77603 3.69609 3.29499 C
@c
F

@rax %Note: Object
15.91285 23.07713 242.77691 410.87537 @E
/$fm 0 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
65.06362 410.87537 m
193.62614 410.87537 L
211.41808 410.87537 225.97597 396.19361 225.97597 378.24803 C
225.97597 373.75398 L
241.15011 373.75398 L
242.04501 373.75398 242.77691 373.01669 242.77691 372.11414 C
242.77691 61.93332 L
242.77691 61.03134 242.04501 60.29320 241.15011 60.29320 C
225.97597 60.29320 L
225.97597 55.70447 L
225.97597 37.75918 211.41808 23.07713 193.62614 23.07713 C
65.06362 23.07713 L
47.27112 23.07713 32.71323 37.75918 32.71323 55.70447 C
32.71323 60.29320 L
17.53937 60.29320 L
16.64504 60.29320 15.91285 61.03134 15.91285 61.93332 C
15.91285 372.11414 L
15.91285 373.01669 16.64504 373.75398 17.53937 373.75398 C
32.71323 373.75398 L
32.71323 378.24803 L
32.71323 396.19361 47.27112 410.87537 65.06362 410.87537 C
@c
F

@rax %Note: Object
15.91285 23.07713 242.77691 410.87537 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
65.06362 410.87537 m
193.62614 410.87537 L
211.41808 410.87537 225.97597 396.19361 225.97597 378.24803 C
225.97597 373.75398 L
241.15011 373.75398 L
242.04501 373.75398 242.77691 373.01669 242.77691 372.11414 C
242.77691 61.93332 L
242.77691 61.03134 242.04501 60.29320 241.15011 60.29320 C
225.97597 60.29320 L
225.97597 55.70447 L
225.97597 37.75918 211.41808 23.07713 193.62614 23.07713 C
65.06362 23.07713 L
47.27112 23.07713 32.71323 37.75918 32.71323 55.70447 C
32.71323 60.29320 L
17.53937 60.29320 L
16.64504 60.29320 15.91285 61.03134 15.91285 61.93332 C
15.91285 372.11414 L
15.91285 373.01669 16.64504 373.75398 17.53937 373.75398 C
32.71323 373.75398 L
32.71323 378.24803 L
32.71323 396.19361 47.27112 410.87537 65.06362 410.87537 C
@c
S

@rax %Note: Object
91.90403 424.44935 97.65298 430.24762 @E
/$fm 0 def
 0 O 0 @g
0.9961  create_grayscale_color set_solid_fill
94.77836 430.24762 m
96.36605 430.24762 97.65298 428.94964 97.65298 427.34806 C
97.65298 425.74649 96.36605 424.44935 94.77836 424.44935 C
93.19096 424.44935 91.90403 425.74649 91.90403 427.34806 C
91.90403 428.94964 93.19096 430.24762 94.77836 430.24762 C
@c
F

@rax %Note: Object
91.90403 424.44935 97.65298 430.24762 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
94.77836 430.24762 m
96.36605 430.24762 97.65298 428.94964 97.65298 427.34806 C
97.65298 425.74649 96.36605 424.44935 94.77836 424.44935 C
93.19096 424.44935 91.90403 425.74649 91.90403 427.34806 C
91.90403 428.94964 93.19096 430.24762 94.77836 430.24762 C
@c
S

@rax %Note: Object
107.50309 325.90772 151.33805 369.37389 @E
/$fm 0 def
 0 O 0 @g
0.9961  create_grayscale_color set_solid_fill
121.19613 369.37389 m
137.64501 369.37389 L
145.17609 369.37389 151.33805 363.15921 151.33805 355.56265 C
151.33805 339.71924 L
151.33805 332.12268 145.17609 325.90772 137.64501 325.90772 C
121.19613 325.90772 L
113.66391 325.90772 107.50309 332.12268 107.50309 339.71924 C
107.50309 355.56265 L
107.50309 363.15921 113.66391 369.37389 121.19613 369.37389 C
@c
F

@rax %Note: Object
107.50309 325.90772 151.33805 369.37389 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
121.19613 369.37389 m
137.64501 369.37389 L
145.17609 369.37389 151.33805 363.15921 151.33805 355.56265 C
151.33805 339.71924 L
151.33805 332.12268 145.17609 325.90772 137.64501 325.90772 C
121.19613 325.90772 L
113.66391 325.90772 107.50309 332.12268 107.50309 339.71924 C
107.50309 355.56265 L
107.50309 363.15921 113.66391 369.37389 121.19613 369.37389 C
@c
S

@rax %Note: Object
172.91395 2.55260 186.54293 16.29751 @E
/$fm 0 def
 0 O 0 @g
0.9961  create_grayscale_color set_solid_fill
179.72901 16.29751 m
183.49200 16.29751 186.54293 13.22107 186.54293 9.42520 C
186.54293 5.62932 183.49200 2.55260 179.72901 2.55260 C
175.96488 2.55260 172.91395 5.62932 172.91395 9.42520 C
172.91395 13.22107 175.96488 16.29751 179.72901 16.29751 C
@c
F

@rax %Note: Object
172.91395 2.55260 186.54293 16.29751 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
179.72901 16.29751 m
183.49200 16.29751 186.54293 13.22107 186.54293 9.42520 C
186.54293 5.62932 183.49200 2.55260 179.72901 2.55260 C
175.96488 2.55260 172.91395 5.62932 172.91395 9.42520 C
172.91395 13.22107 175.96488 16.29751 179.72901 16.29751 C
@c
S

@rax %Note: Object
144.70299 421.80888 202.64088 432.11452 @E
/$fm 0 def
 0 O 0 @g
0.9961  create_grayscale_color set_solid_fill
149.81187 432.11452 m
197.53200 432.11452 L
200.34312 432.11452 202.64088 429.79663 202.64088 426.96170 C
202.64088 426.96170 L
202.64088 424.12791 200.34312 421.80888 197.53200 421.80888 C
149.81187 421.80888 L
147.00189 421.80888 144.70299 424.12791 144.70299 426.96170 C
144.70299 426.96170 L
144.70299 429.79663 147.00189 432.11452 149.81187 432.11452 C
@c
F

@rax %Note: Object
144.70299 421.80888 202.64088 432.11452 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
149.81187 432.11452 m
197.53200 432.11452 L
200.34312 432.11452 202.64088 429.79663 202.64088 426.96170 C
202.64088 426.96170 L
202.64088 424.12791 200.34312 421.80888 197.53200 421.80888 C
149.81187 421.80888 L
147.00189 421.80888 144.70299 424.12791 144.70299 426.96170 C
144.70299 426.96170 L
144.70299 429.79663 147.00189 432.11452 149.81187 432.11452 C
@c
S

@rax %Note: Object
113.53408 331.59997 145.30791 363.68135 @E
/$fm 0 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
124.19603 363.68135 m
134.64510 363.68135 L
140.50913 363.68135 145.30791 358.84233 145.30791 352.92728 C
145.30791 342.35433 L
145.30791 336.44013 140.50913 331.59997 134.64510 331.59997 C
124.19603 331.59997 L
118.33200 331.59997 113.53408 336.44013 113.53408 342.35433 C
113.53408 352.92728 L
113.53408 358.84233 118.33200 363.68135 124.19603 363.68135 C
@c
F

@rax %Note: Object
113.53408 331.59997 145.30791 363.68135 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
124.19603 363.68135 m
134.64510 363.68135 L
140.50913 363.68135 145.30791 358.84233 145.30791 352.92728 C
145.30791 342.35433 L
145.30791 336.44013 140.50913 331.59997 134.64510 331.59997 C
124.19603 331.59997 L
118.33200 331.59997 113.53408 336.44013 113.53408 342.35433 C
113.53408 352.92728 L
113.53408 358.84233 118.33200 363.68135 124.19603 363.68135 C
@c
S

@rax %Note: Object
122.49609 340.65808 136.34504 354.62466 @E
/$fm 0 def
 0 O 0 @g
0.9961  create_grayscale_color set_solid_fill
129.42113 354.62466 m
133.24507 354.62466 136.34504 351.49805 136.34504 347.64123 C
136.34504 343.78441 133.24507 340.65808 129.42113 340.65808 C
125.59691 340.65808 122.49609 343.78441 122.49609 347.64123 C
122.49609 351.49805 125.59691 354.62466 129.42113 354.62466 C
@c
F

@rax %Note: Object
122.49609 340.65808 136.34504 354.62466 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
129.42113 354.62466 m
133.24507 354.62466 136.34504 351.49805 136.34504 347.64123 C
136.34504 343.78441 133.24507 340.65808 129.42113 340.65808 C
125.59691 340.65808 122.49609 343.78441 122.49609 347.64123 C
122.49609 351.49805 125.59691 354.62466 129.42113 354.62466 C
@c
S

@rax %Note: Object
158.58907 327.82592 178.76494 367.82249 @E
/$fm 0 def
 0 O 0 @g
0.9961  create_grayscale_color set_solid_fill
165.35906 367.82249 m
171.99411 367.82249 L
175.71798 367.82249 178.76494 364.74945 178.76494 360.99468 C
178.76494 334.65515 L
178.76494 330.89896 175.71798 327.82592 171.99411 327.82592 C
165.35906 327.82592 L
161.63490 327.82592 158.58907 330.89896 158.58907 334.65515 C
158.58907 360.99468 L
158.58907 364.74945 161.63490 367.82249 165.35906 367.82249 C
@c
F

@rax %Note: Object
158.58907 327.82592 178.76494 367.82249 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
165.35906 367.82249 m
171.99411 367.82249 L
175.71798 367.82249 178.76494 364.74945 178.76494 360.99468 C
178.76494 334.65515 L
178.76494 330.89896 175.71798 327.82592 171.99411 327.82592 C
165.35906 327.82592 L
161.63490 327.82592 158.58907 330.89896 158.58907 334.65515 C
158.58907 360.99468 L
158.58907 364.74945 161.63490 367.82249 165.35906 367.82249 C
@c
S

@rax %Note: Object
232.10702 327.64762 239.60693 359.53115 @E
/$fm 0 def
 0 O 0 @g
0.9961  create_grayscale_color set_solid_fill
235.85698 359.53115 m
235.85698 359.53115 L
237.92003 359.53115 239.60693 357.82980 239.60693 355.74917 C
239.60693 331.43074 L
239.60693 329.35011 237.92003 327.64762 235.85698 327.64762 C
235.85698 327.64762 L
233.79506 327.64762 232.10702 329.35011 232.10702 331.43074 C
232.10702 355.74917 L
232.10702 357.82980 233.79506 359.53115 235.85698 359.53115 C
@c
F

@rax %Note: Object
232.10702 327.64762 239.60693 359.53115 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
235.85698 359.53115 m
235.85698 359.53115 L
237.92003 359.53115 239.60693 357.82980 239.60693 355.74917 C
239.60693 331.43074 L
239.60693 329.35011 237.92003 327.64762 235.85698 327.64762 C
235.85698 327.64762 L
233.79506 327.64762 232.10702 329.35011 232.10702 331.43074 C
232.10702 355.74917 L
232.10702 357.82980 233.79506 359.53115 235.85698 359.53115 C
@c
S

@rax %Note: Object
232.10702 285.33628 239.60693 317.21924 @E
/$fm 0 def
 0 O 0 @g
0.9961  create_grayscale_color set_solid_fill
235.85698 317.21924 m
235.85698 317.21924 L
237.92003 317.21924 239.60693 315.51761 239.60693 313.43669 C
239.60693 289.11855 L
239.60693 287.03792 237.92003 285.33628 235.85698 285.33628 C
235.85698 285.33628 L
233.79506 285.33628 232.10702 287.03792 232.10702 289.11855 C
232.10702 313.43669 L
232.10702 315.51761 233.79506 317.21924 235.85698 317.21924 C
@c
F

@rax %Note: Object
232.10702 285.33628 239.60693 317.21924 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
235.85698 317.21924 m
235.85698 317.21924 L
237.92003 317.21924 239.60693 315.51761 239.60693 313.43669 C
239.60693 289.11855 L
239.60693 287.03792 237.92003 285.33628 235.85698 285.33628 C
235.85698 285.33628 L
233.79506 285.33628 232.10702 287.03792 232.10702 289.11855 C
232.10702 313.43669 L
232.10702 315.51761 233.79506 317.21924 235.85698 317.21924 C
@c
S

@rax %Note: Object
20.14328 252.34526 28.37509 285.04176 @E
/$fm 0 def
 0 O 0 @g
0.9961  create_grayscale_color set_solid_fill
24.25890 285.04176 m
24.25946 285.04176 L
26.52293 285.04176 28.37509 283.17487 28.37509 280.89184 C
28.37509 256.49546 L
28.37509 254.21329 26.52293 252.34526 24.25946 252.34526 C
24.25890 252.34526 L
21.99543 252.34526 20.14328 254.21329 20.14328 256.49546 C
20.14328 280.89184 L
20.14328 283.17487 21.99543 285.04176 24.25890 285.04176 C
@c
F

@rax %Note: Object
20.14328 252.34526 28.37509 285.04176 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
24.25890 285.04176 m
24.25946 285.04176 L
26.52293 285.04176 28.37509 283.17487 28.37509 280.89184 C
28.37509 256.49546 L
28.37509 254.21329 26.52293 252.34526 24.25946 252.34526 C
24.25890 252.34526 L
21.99543 252.34526 20.14328 254.21329 20.14328 256.49546 C
20.14328 280.89184 L
20.14328 283.17487 21.99543 285.04176 24.25890 285.04176 C
@c
S

@rax %Note: Object
68.38214 3.10394 88.33124 12.76554 @E
/$fm 0 def
 0 O 0 @g
0.9961  create_grayscale_color set_solid_fill
71.02687 12.76554 m
85.68680 12.76554 L
87.14098 12.76554 88.33124 11.56507 88.33124 10.09871 C
88.33124 5.77106 L
88.33124 4.30441 87.14098 3.10394 85.68680 3.10394 C
71.02687 3.10394 L
69.57241 3.10394 68.38214 4.30441 68.38214 5.77106 C
68.38214 10.09871 L
68.38214 11.56507 69.57241 12.76554 71.02687 12.76554 C
@c
F

@rax %Note: Object
68.38214 3.10394 88.33124 12.76554 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
71.02687 12.76554 m
85.68680 12.76554 L
87.14098 12.76554 88.33124 11.56507 88.33124 10.09871 C
88.33124 5.77106 L
88.33124 4.30441 87.14098 3.10394 85.68680 3.10394 C
71.02687 3.10394 L
69.57241 3.10394 68.38214 4.30441 68.38214 5.77106 C
68.38214 10.09871 L
68.38214 11.56507 69.57241 12.76554 71.02687 12.76554 C
@c
S

@rax %Note: Object
96.62655 2.59937 102.02797 8.04699 @E
/$fm 0 def
 0 O 0 @g
0.9961  create_grayscale_color set_solid_fill
99.32740 8.04699 m
100.81899 8.04699 102.02797 6.82753 102.02797 5.32346 C
102.02797 3.81855 100.81899 2.59937 99.32740 2.59937 C
97.83553 2.59937 96.62655 3.81855 96.62655 5.32346 C
96.62655 6.82753 97.83553 8.04699 99.32740 8.04699 C
@c
F

@rax %Note: Object
96.62655 2.59937 102.02797 8.04699 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
99.32740 8.04699 m
100.81899 8.04699 102.02797 6.82753 102.02797 5.32346 C
102.02797 3.81855 100.81899 2.59937 99.32740 2.59937 C
97.83553 2.59937 96.62655 3.81855 96.62655 5.32346 C
96.62655 6.82753 97.83553 8.04699 99.32740 8.04699 C
@c
S

@rax %Note: Object
119.18608 3.21874 144.75713 15.18435 @E
/$fm 0 def
 0 O 0 @g
0.9961  create_grayscale_color set_solid_fill
122.46094 15.18435 m
141.48198 15.18435 L
143.28397 15.18435 144.75713 13.69814 144.75713 11.88170 C
144.75713 9.20126 L
144.75713 5.91024 142.08803 3.21874 138.82507 3.21874 C
125.11814 3.21874 L
121.85490 3.21874 119.18608 5.91024 119.18608 9.20126 C
119.18608 11.88170 L
119.18608 13.69814 120.65896 15.18435 122.46094 15.18435 C
@c
F

@rax %Note: Object
119.18608 3.21874 144.75713 15.18435 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[1.00000000 0.00000000 0.00000000 1.00856233 0.00000000 0.00000000] 1 0.02806 0.02806 0.00000 @w
122.46094 15.18435 m
141.48198 15.18435 L
143.28397 15.18435 144.75713 13.69814 144.75713 11.88170 C
144.75713 9.20126 L
144.75713 5.91024 142.08803 3.21874 138.82507 3.21874 C
125.11814 3.21874 L
121.85490 3.21874 119.18608 5.91024 119.18608 9.20126 C
119.18608 11.88170 L
119.18608 13.69814 120.65896 15.18435 122.46094 15.18435 C
@c
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
