%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 238 216 505 683 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: Samsung S9 зад Vector Split B...
%%CreationDate: Sat May 18 12:02:07 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
473.96608 286.27767 483.73313 614.69745 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
481.75909 539.36249 m
481.75909 537.86863 480.54302 536.65370 479.04917 536.65370 C
477.55616 536.65370 476.34094 537.86863 476.34094 539.36249 C
476.34094 595.14151 L
476.34094 596.63565 477.55616 597.85058 479.04917 597.85058 C
480.54302 597.85058 481.75909 596.63565 481.75909 595.14151 C
481.75909 539.36249 L
@c
481.75909 484.24450 m
481.75909 482.81669 480.64507 481.81946 479.04917 481.81946 C
477.55616 481.81946 476.34094 483.03468 476.34094 484.52854 C
476.34094 513.69250 L
476.34094 515.18665 477.55616 516.40157 479.04917 516.40157 C
480.54302 516.40157 481.75909 515.18665 481.75909 513.69250 C
481.75909 484.24450 L
@c
473.96608 286.27767 m
483.73313 286.27767 L
483.73313 614.69745 L
473.96608 614.69745 L
473.96608 286.27767 L
@c
473.96608 614.69745 m
473.96608 286.27767 L
473.96608 614.69745 L
@c
F

@rax %Note: Object
241.16315 658.78753 500.16302 682.05146 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
435.84094 667.11855 m
391.80217 667.11855 L
388.94712 667.11855 386.62413 669.44154 386.62413 672.29660 C
386.62413 675.15052 388.94712 677.47351 391.80217 677.47351 C
435.84094 677.47351 L
438.69515 677.47351 441.01899 675.15052 441.01899 672.29660 C
441.01899 669.44154 438.69515 667.11855 435.84094 667.11855 C
@c
302.73704 671.62847 m
301.45408 671.62847 300.41291 672.66935 300.41291 673.95260 C
300.41291 675.23641 301.45408 676.27757 302.73704 676.27757 C
304.02198 676.27757 305.06315 675.23641 305.06315 673.95260 C
305.06315 672.66935 304.02198 671.62847 302.73704 671.62847 C
@c
481.52693 674.44044 m
470.56706 676.39039 460.75691 682.05146 442.77704 682.05146 C
299.95710 682.05146 L
281.97694 682.05146 272.16709 676.39039 261.20693 674.44044 C
253.13698 673.01150 241.16315 673.81455 241.16315 673.81455 C
241.16315 663.58743 L
261.66898 663.58743 278.39991 660.33553 293.48192 659.10643 C
294.90009 658.99049 296.31997 658.80255 297.74296 658.80057 C
441.09496 658.78753 L
458.26894 659.16737 475.89194 663.87061 500.16302 663.87061 C
500.16302 673.53137 L
500.16302 673.53137 489.59717 673.01150 481.52693 674.44044 C
@c
F

@rax %Note: Object
389.47323 670.31150 393.44145 674.28057 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.28290 0.28290 0.00000 @w
391.45748 674.28057 m
390.36132 674.28057 389.47323 673.39247 389.47323 672.29660 C
389.47323 671.20044 390.36132 670.31150 391.45748 670.31150 C
392.55335 670.31150 393.44145 671.20044 393.44145 672.29660 C
393.44145 673.39247 392.55335 674.28057 391.45748 674.28057 C
@c
S

@rax %Note: Object
238.13802 216.94025 504.22507 241.19405 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
419.21802 223.41940 m
415.81616 223.41940 413.05805 226.17836 413.05805 229.57937 C
413.05805 232.98236 415.81616 235.73934 419.21802 235.73934 C
422.62016 235.73934 425.37798 232.98236 425.37798 229.57937 C
425.37798 226.17836 422.62016 223.41940 419.21802 223.41940 C
@c
384.00605 230.24438 m
384.00605 227.21924 381.55408 224.76728 378.52894 224.76728 C
362.92309 224.76728 L
359.89795 224.76728 357.44598 227.21924 357.44598 230.24438 C
357.44598 233.26923 359.89795 235.72233 362.92309 235.72233 C
378.52894 235.72233 L
381.55408 235.72233 384.00605 233.26923 384.00605 230.24438 C
@c
340.25811 224.76728 m
339.03014 224.76728 338.03291 225.76337 338.03291 226.99020 C
338.03291 228.22016 339.03014 229.21540 340.25811 229.21540 C
341.48693 229.21540 342.48302 228.22016 342.48302 226.99020 C
342.48302 225.76337 341.48693 224.76728 340.25811 224.76728 C
@c
327.09798 224.48324 m
309.40809 224.48324 L
307.60696 224.48324 306.13294 225.95726 306.13294 227.75839 C
306.13294 229.55924 307.60696 231.03241 309.40809 231.03241 C
327.09798 231.03241 L
328.89912 231.03241 330.37200 229.55924 330.37200 227.75839 C
330.37200 225.95726 328.89912 224.48324 327.09798 224.48324 C
@c
440.18702 241.19036 m
440.27405 241.19518 302.07912 241.19518 302.16614 241.19036 C
284.75603 240.94035 262.74699 235.68917 238.13802 235.68917 C
238.13802 225.74438 L
238.13802 225.74438 252.94592 225.98135 261.01701 224.55128 C
271.97717 222.60132 281.78617 216.94025 299.76718 216.94025 C
442.58598 216.94025 L
460.56699 216.94025 470.37600 222.60132 481.33616 224.55128 C
489.40611 225.98135 504.22507 225.74438 504.22507 225.74438 C
504.22507 235.40428 L
479.61496 235.40428 457.59713 240.94035 440.18702 241.19036 C
@c
F

@rax %Note: Object
259.08180 286.26718 269.25874 614.68724 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
266.35266 507.67313 m
266.35266 506.17928 265.13773 504.96406 263.64387 504.96406 C
262.14973 504.96406 260.93480 506.17928 260.93480 507.67313 C
260.93480 536.86120 L
260.93480 538.35619 262.14973 539.57027 263.64387 539.57027 C
265.13773 539.57027 266.35266 538.35619 266.35266 536.86120 C
266.35266 507.67313 L
@c
259.08180 286.26718 m
269.25874 286.26718 L
269.25874 614.68724 L
259.08180 614.68724 L
259.08180 286.26718 L
@c
259.08180 614.68724 m
259.08180 286.26718 L
259.08180 614.68724 L
@c
F

@rax %Note: Object
272.57187 244.16079 469.50775 653.49213 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
414.02381 557.85770 m
414.02381 555.23367 411.88564 553.09975 409.25877 553.09975 C
405.97880 553.09975 L
403.35165 553.09975 401.21376 555.23367 401.21376 557.85770 C
401.21376 585.17858 L
401.21376 587.80970 403.35165 589.94957 405.97880 589.94957 C
409.25877 589.94957 L
411.88564 589.94957 414.02381 587.80970 414.02381 585.17858 C
414.02381 557.85770 L
@c
400.15672 499.40277 m
400.05865 499.49972 399.90472 499.54762 399.68476 499.55357 C
399.68079 499.55357 L
399.40980 499.55357 399.21676 499.50255 399.06567 499.40079 C
398.97184 499.33757 398.89871 499.25877 398.85761 499.17572 C
398.80970 499.07877 398.80488 498.96170 398.80488 498.85965 C
398.80687 495.26277 L
398.80687 495.00369 398.80573 494.53880 398.81480 494.43364 C
398.81764 494.32677 L
398.81764 494.28057 398.81764 494.23465 398.82472 494.18872 C
398.83380 494.11672 398.85761 494.04161 398.89786 493.96167 C
398.93584 493.88060 398.97780 493.81880 399.02570 493.76778 C
399.04980 493.74170 399.12463 493.68274 399.13569 493.67679 C
399.22668 493.61556 399.32872 493.58580 399.42567 493.55575 C
399.50872 493.53080 399.59178 493.51663 399.67285 493.51663 C
399.91663 493.54356 400.19272 493.61357 400.29279 493.71874 C
400.42970 493.86472 400.50879 494.07676 400.50879 494.30154 C
400.50879 495.71178 L
399.73068 495.72567 L
399.74570 496.93975 L
402.64072 496.92472 L
402.62683 494.25562 L
402.62683 494.24967 402.59679 493.49480 402.48567 493.25981 C
402.48369 493.25357 402.37767 492.84680 401.98961 492.55682 C
401.98365 492.54973 401.53975 492.10072 400.13065 491.94369 C
400.10570 491.94255 400.00082 491.93575 399.83783 491.93575 C
398.88170 491.93575 396.65282 492.14154 396.59669 494.04756 C
396.59669 498.61474 L
396.59584 498.62466 396.54680 499.54479 397.22088 500.26082 C
397.75465 500.82973 398.58661 501.11773 399.69383 501.11773 C
399.79871 501.11773 399.90274 501.11660 400.00677 501.11178 C
400.26274 501.09676 400.51871 501.06274 400.76787 501.00775 C
401.10973 500.93263 401.39773 500.82775 401.64973 500.68460 C
401.82180 500.58680 401.97061 500.47058 402.09165 500.34274 C
402.15572 500.27556 402.21269 500.20271 402.26287 500.12561 C
402.35471 499.98274 402.42472 499.87672 402.47972 499.75455 C
402.66085 499.35770 402.68069 498.94554 402.67786 498.63061 C
402.67672 498.45175 402.53868 498.31172 402.36463 498.31172 C
400.42375 498.31172 L
400.43877 498.89367 L
400.41581 499.13376 400.21682 499.34268 400.15672 499.40277 C
@c
394.00072 492.49757 m
394.00072 492.40970 393.93071 492.33969 393.84283 492.33969 C
391.26869 492.33969 L
391.19981 492.33969 391.13972 492.38277 391.11987 492.44882 C
388.94769 499.18762 L
388.67471 499.19868 L
388.69370 492.73455 L
388.69483 492.53981 388.66280 492.41480 388.58967 492.34280 C
388.54261 492.29461 388.47572 492.27080 388.38869 492.27080 C
387.11565 492.27080 L
386.86167 492.27080 386.65587 492.47773 386.65587 492.73257 C
386.66466 500.69962 L
386.66466 500.78665 386.73468 500.85666 386.82085 500.85666 C
389.46076 500.85666 L
389.52567 500.85666 389.58576 500.81556 389.60674 500.75376 C
391.87984 494.62980 L
391.99663 494.62072 L
392.01562 500.69962 L
392.01562 500.78665 392.08677 500.85666 392.17181 500.85666 C
393.86863 500.85666 L
393.91087 500.85666 393.95083 500.84079 393.97975 500.81074 C
394.00980 500.78069 394.02567 500.74157 394.02482 500.69962 C
394.00072 492.49757 L
@c
378.04479 530.32280 m
377.30976 530.26554 L
363.89169 530.26554 L
363.27288 530.33272 L
356.78183 530.33272 351.53065 535.52778 351.53065 542.01855 C
351.53065 589.37868 L
351.53065 595.87058 356.79288 601.07556 363.28365 601.07556 C
363.89083 601.13169 L
377.33471 601.13169 L
378.04479 601.07556 L
384.53584 601.07556 389.79780 595.87058 389.79780 589.37868 C
389.79780 542.01855 L
389.79780 535.52778 384.53584 530.32280 378.04479 530.32280 C
@c
383.90570 494.21282 m
383.90570 491.80961 380.98488 491.78154 380.86072 491.78154 C
380.85279 491.78268 L
379.65883 491.78268 378.77669 492.08457 378.23386 492.68069 C
377.58671 493.39077 377.66183 494.27773 377.66183 494.28680 C
377.66268 501.05764 L
379.96469 501.08655 L
379.95761 494.27575 L
379.95761 493.57162 380.65776 493.53562 380.79780 493.53562 C
381.47981 493.53562 381.59263 494.28567 381.59376 494.29361 C
381.59461 501.10072 L
383.91987 501.08655 L
383.90570 494.21282 L
@c
375.30085 493.36668 m
374.99187 492.47575 374.10066 491.94369 373.21172 491.77559 C
372.89169 491.71578 372.56287 491.69877 372.23887 491.73080 C
369.20976 492.03071 369.25370 493.77458 369.25370 493.79272 C
369.24661 494.83559 L
371.57386 494.82057 L
371.55883 494.04557 L
371.55883 493.40154 372.32277 493.38255 372.41178 493.38255 C
373.16183 493.38255 373.36167 494.21962 372.93477 494.73071 C
372.63685 495.08674 372.21364 495.31068 371.81565 495.53575 C
371.38762 495.77669 370.98879 496.05676 370.58882 496.34362 C
370.04287 496.73877 369.53972 497.20762 369.30274 497.85562 C
369.13465 498.31569 369.07767 498.84180 369.12076 499.32879 C
369.26362 500.96863 371.21669 501.56079 372.61077 501.48964 C
373.39965 501.44882 374.29172 501.28356 374.83965 500.66164 C
375.31162 500.12872 375.26088 499.52580 375.26088 499.51871 C
375.26372 498.55578 L
375.26372 498.55578 373.04164 498.57080 373.03880 498.57080 C
373.04476 498.57080 373.06063 499.00365 373.05978 499.04872 C
373.05269 499.22079 373.02378 499.38973 372.89962 499.51672 C
372.75676 499.66356 372.49767 499.75370 372.29272 499.75370 C
371.80885 499.75455 371.49987 499.33757 371.59880 498.86674 C
371.74280 498.18756 372.62381 497.72976 373.16580 497.40463 C
373.75965 497.04775 374.40964 496.74076 374.83483 496.16957 C
375.41480 495.38976 375.62372 494.29276 375.30085 493.36668 C
@c
366.62769 492.28781 m
366.53981 492.19682 366.42161 492.14665 366.29688 492.14665 C
364.99465 492.14665 L
364.74576 492.14665 364.54365 492.35357 364.54365 492.60869 C
364.54365 495.43257 L
364.53487 499.74661 L
364.36479 499.76079 L
363.61786 495.43455 L
363.12661 492.53272 L
363.08580 492.30879 362.89474 492.14665 362.67364 492.14665 C
361.06072 492.14665 L
360.83367 492.14665 360.64261 492.30482 360.60888 492.52365 C
359.35767 499.65477 L
359.16378 499.66668 L
359.14876 492.60869 L
359.14876 492.35357 358.94268 492.14665 358.68869 492.14665 C
357.43776 492.14665 L
357.31077 492.14665 357.19285 492.19569 357.10583 492.28668 C
357.01965 492.37569 356.97373 492.49276 356.97883 492.61776 C
357.15061 500.64775 L
357.15883 500.89266 357.36576 501.09165 357.61068 501.09165 C
360.50882 501.09165 L
360.73361 501.09165 360.92778 500.92271 360.96066 500.69764 C
361.73764 494.89370 L
361.93181 494.88066 L
362.02365 495.43058 L
362.75669 500.72372 L
362.78277 500.97855 362.92564 501.11972 363.11471 501.13559 C
366.08173 501.13474 L
366.32665 501.13474 366.52479 500.93972 366.53272 500.69055 C
366.75666 492.61776 L
366.76063 492.49474 366.71471 492.37767 366.62769 492.28781 C
@c
354.66775 492.42161 m
354.58980 492.32976 354.47669 492.27761 354.35679 492.27761 C
352.70277 492.27761 L
352.49783 492.27761 352.32378 492.43181 352.29685 492.63676 C
351.43483 499.53061 L
351.21288 499.54365 L
350.30381 492.63477 L
350.27773 492.43068 350.10283 492.27761 349.89874 492.27761 C
348.24274 492.27761 L
348.12283 492.27761 348.00888 492.33061 347.93065 492.42161 C
347.85269 492.51458 347.81981 492.63676 347.83880 492.75666 C
349.31764 501.29461 L
353.29465 501.28271 L
354.75874 492.75666 L
354.77972 492.63676 354.74570 492.51458 354.66775 492.42161 C
@c
345.90586 493.91263 m
345.72869 492.32466 344.13874 491.73761 342.72482 491.80564 C
342.52469 491.81556 342.32769 491.83767 342.13861 491.87367 C
341.15669 492.05480 339.84680 492.60869 339.74561 493.76778 C
339.74277 493.79556 339.74164 493.82476 339.74079 493.85282 C
339.73172 494.89569 L
342.05868 494.88066 L
342.04479 494.10765 L
342.04479 493.46164 342.80787 493.44378 342.89575 493.44378 C
343.59080 493.44378 343.65373 494.10765 343.65373 494.11474 C
343.73679 494.70576 343.14378 495.07767 342.70781 495.33676 C
342.04479 495.72964 341.40869 496.14576 340.79981 496.62057 C
340.37178 496.95562 339.96784 497.35757 339.76488 497.87263 C
339.54463 498.43162 339.57978 499.09975 339.69373 499.67858 C
339.75468 499.99068 339.89783 500.16557 340.05288 500.41474 C
340.49565 501.12057 341.33868 501.42274 342.12784 501.51969 C
342.93487 501.61975 343.86775 501.57269 344.61780 501.23169 C
344.88369 501.10980 345.13087 500.94255 345.32561 500.72173 C
345.79672 500.18882 345.74683 499.58674 345.74683 499.57965 C
345.74967 498.61672 L
343.52362 498.63061 L
343.53865 499.20576 L
343.53865 499.77071 342.78576 499.81465 342.77783 499.81465 C
342.27184 499.81578 342.14882 499.45578 342.14769 499.45181 C
341.94161 499.04957 342.15080 498.63260 342.44362 498.33581 C
342.90765 497.86469 343.55565 497.55260 344.12372 497.22775 C
344.72580 496.88079 345.25474 496.36857 345.58384 495.74381 C
345.74173 495.44164 345.89480 495.07058 345.91663 494.72476 C
345.93165 494.46057 345.90671 494.18079 345.90586 493.91263 C
@c
469.49981 626.01959 m
469.38274 636.11178 465.79465 646.76381 457.23770 651.09175 C
453.74769 652.86170 440.51187 653.48561 440.75169 653.49071 C
440.75169 653.49071 299.79468 653.50063 302.01279 653.46775 C
296.50280 653.12872 288.02580 652.86170 284.52586 651.09175 C
276.17783 646.86954 272.82983 636.62655 272.57187 626.75773 C
272.57187 270.77556 L
272.83068 260.90759 276.69487 251.35767 285.09279 247.11080 C
288.09865 245.58973 294.35783 244.71071 299.55487 244.30677 C
300.88261 244.20472 302.21178 244.16079 303.54463 244.16079 C
438.50466 244.16079 L
439.83581 244.16079 441.16271 244.20359 442.48876 244.30677 C
447.69373 244.70957 453.95575 245.58860 456.95480 247.11080 C
465.62683 251.49657 469.48365 261.53773 469.50775 271.74472 C
469.49981 626.01959 L
@c
F

@rax %Note: Object
402.69175 554.61543 412.54554 574.91433 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 1.00006 1.00006 0.00000 @w
408.94157 574.91433 m
406.29572 574.91433 L
404.30863 574.91433 402.69175 573.29745 402.69175 571.30951 C
402.69175 558.22139 L
402.69175 556.23231 404.30863 554.61543 406.29572 554.61543 C
408.94157 554.61543 L
410.92866 554.61543 412.54554 556.23231 412.54554 558.22139 C
412.54554 571.30951 L
412.54554 573.29745 410.92866 574.91433 408.94157 574.91433 C
@c
S

@rax %Note: Object
402.40828 577.78016 412.82929 587.91827 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 1.00006 1.00006 0.00000 @w
409.41326 587.91827 m
405.82431 587.91827 L
403.94041 587.91827 402.40828 586.38614 402.40828 584.50224 C
402.40828 581.19619 L
402.40828 579.31342 403.94041 577.78016 405.82431 577.78016 C
409.41326 577.78016 L
411.29745 577.78016 412.82929 579.31342 412.82929 581.19619 C
412.82929 584.50224 L
412.82929 586.38614 411.29745 587.91827 409.41326 587.91827 C
@c
S

@rax %Note: Object
352.38161 531.11622 388.94740 600.28101 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
386.40557 569.55118 m
386.40557 565.58098 383.17550 562.35203 379.20557 562.35203 C
362.08063 562.35203 L
358.11043 562.35203 354.59745 565.58098 354.59745 569.55118 C
354.59745 589.87899 L
354.59745 593.86620 358.94353 597.92995 362.93046 597.92995 C
378.35546 597.92995 L
382.34353 597.92995 386.40557 593.86620 386.40557 589.87899 C
386.40557 569.55118 L
@c
385.62463 541.46608 m
385.62463 537.48000 382.39257 534.24907 378.40762 534.24907 C
362.40860 534.24907 L
358.42365 534.24907 355.19159 537.48000 355.19159 541.46608 C
355.19159 545.81499 L
355.19159 549.80022 358.42365 553.03115 362.40860 553.03115 C
378.40762 553.03115 L
382.39257 553.03115 385.62463 549.80022 385.62463 545.81499 C
385.62463 541.46608 L
@c
378.19843 600.28101 m
363.13058 600.28101 L
357.60444 600.28101 352.38161 594.91417 352.38161 589.23808 C
352.38161 541.87710 L
352.38161 536.20016 357.60444 531.11622 363.13058 531.11622 C
378.19843 531.11622 L
383.72343 531.11622 388.94740 536.48504 388.94740 542.16113 C
388.94740 589.52098 L
388.94740 595.19707 383.72343 600.28101 378.19843 600.28101 C
@c
F

@rax %Note: Object
362.75584 572.67921 378.24576 588.16942 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 1.00006 1.00006 0.00000 @w
374.09981 588.16942 m
366.90378 588.16942 L
364.61395 588.16942 362.75584 586.31329 362.75584 584.02318 C
362.75584 576.82630 L
362.75584 574.53534 364.61395 572.67921 366.90378 572.67921 C
374.09981 572.67921 L
376.38992 572.67921 378.24576 574.53534 378.24576 576.82630 C
378.24576 584.02318 L
378.24576 586.31329 376.38992 588.16942 374.09981 588.16942 C
@c
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
