%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 249 136 515 626 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2017
%%Title: Samsung S9+ зад Vector Full B...
%%CreationDate: Sat May 18 11:44:22 2019
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2017 Версия 19.1.0.419
/EpsFile true def
%%BeginResource: procset wCorel19Dict 19.0 0
/wCorel19Dict 300 dict def wCorel19Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel19Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
249.97380 136.30706 514.63956 625.45975 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
451.86973 609.28696 m
406.97972 609.28696 L
404.04274 609.28696 401.66164 611.66806 401.66164 614.60617 C
401.66164 617.54315 404.04274 619.64107 406.97972 619.64107 C
451.86973 619.64107 L
454.80756 619.64107 457.18866 617.54315 457.18866 614.60617 C
457.18866 611.66806 454.80756 609.28696 451.86973 609.28696 C
@c
431.08271 144.27298 m
427.84271 144.27298 425.20677 146.91005 425.20677 150.15005 C
425.20677 153.39118 427.84271 156.02712 431.08271 156.02712 C
434.32356 156.02712 436.95978 153.39118 436.95978 150.15005 C
436.95978 146.91005 434.32356 144.27298 431.08271 144.27298 C
@c
424.03380 530.65502 m
424.03380 528.77197 422.50082 527.24013 420.61663 527.24013 C
417.59376 527.24013 L
415.70957 527.24013 414.17858 528.77197 414.17858 530.65502 C
414.17858 533.67817 L
414.17858 535.56208 415.70957 537.09420 417.59376 537.09420 C
420.61663 537.09420 L
422.50082 537.09420 424.03380 535.56208 424.03380 533.67817 C
424.03380 530.65502 L
@c
424.03380 507.47698 m
424.03380 505.48904 422.41663 503.87216 420.42869 503.87216 C
417.78283 503.87216 L
415.79575 503.87216 414.17858 505.48904 414.17858 507.47698 C
414.17858 520.56510 L
414.17858 522.55304 415.79575 524.17020 417.78283 524.17020 C
420.42869 524.17020 L
422.41663 524.17020 424.03380 522.55304 424.03380 520.56510 C
424.03380 507.47698 L
@c
414.21175 424.74019 m
414.19361 424.92019 414.03458 425.13307 413.90872 425.26205 C
413.77975 425.39499 413.57367 425.42617 413.39877 425.43099 C
413.16378 425.43694 412.92170 425.39499 412.72271 425.25694 C
412.63257 425.19402 412.54668 425.10813 412.49764 425.00494 C
412.44661 424.89694 412.43981 424.76712 412.44066 424.64806 C
412.44378 424.39096 412.44378 424.13499 412.44378 423.87704 C
412.44378 421.44803 L
412.44378 420.64809 L
412.44378 420.42501 412.44066 419.70104 412.45172 419.55902 C
412.45880 419.46605 412.45058 419.37109 412.46164 419.27811 C
412.47269 419.18797 412.50359 419.10208 412.54157 419.02101 C
412.57871 418.94220 412.62265 418.86709 412.68076 418.80302 C
412.70683 418.77411 412.78762 418.70806 412.79981 418.70098 C
412.89761 418.63294 413.00561 418.59921 413.11672 418.56321 C
413.23578 418.52608 413.36164 418.51020 413.48580 418.52608 C
413.64283 418.54819 413.94983 418.62699 414.05783 418.74718 C
414.21883 418.92321 414.29367 419.16614 414.29367 419.40595 C
414.29367 421.02709 L
413.44866 421.02709 L
413.44866 422.44016 L
416.66683 422.44016 L
416.66683 419.35408 L
416.66683 419.35408 416.63565 418.47619 416.50980 418.20094 C
416.50980 418.20094 416.39556 417.72699 415.95562 417.38598 C
415.95562 417.38598 415.47770 416.86101 413.89370 416.67817 C
413.83361 416.67420 410.04482 416.39896 409.96772 419.11512 C
409.96772 424.36715 L
409.96772 424.36715 409.79480 427.26302 413.40869 427.26302 C
413.52463 427.26302 413.64057 427.26217 413.75565 427.25395 C
414.03883 427.23694 414.32173 427.19896 414.59981 427.13518 C
414.93883 427.05808 415.27474 426.94101 415.57776 426.76214 C
415.75861 426.65499 415.92869 426.52318 416.07156 426.36501 C
416.14157 426.28819 416.20677 426.20400 416.26261 426.11414 C
416.34879 425.97298 416.43581 425.83918 416.50271 425.68498 C
416.68583 425.26800 416.72778 424.83118 416.72381 424.38614 C
416.72183 424.17496 416.56280 424.00205 416.36069 424.00205 C
414.21572 424.00205 L
414.21572 424.68803 L
414.21458 424.70504 414.21373 424.72318 414.21175 424.74019 C
@c
407.12882 417.33014 m
407.12769 417.22101 407.04378 417.13313 406.93861 417.13313 C
404.09178 417.13313 L
404.00957 417.13313 403.93672 417.18813 403.91178 417.26920 C
401.50970 425.02195 L
401.22369 425.02195 L
401.26082 417.60312 L
401.26167 417.30009 401.19874 417.05320 400.90762 417.05320 C
399.49965 417.05320 L
399.20967 417.05320 398.97468 417.29811 398.97468 417.60113 C
398.98375 426.76498 L
398.98375 426.87298 399.06879 426.96198 399.17367 426.96198 C
402.09279 426.96198 L
402.17159 426.96198 402.24161 426.91096 402.26967 426.83301 C
404.78372 419.78920 L
404.89682 419.78920 L
404.90164 426.76498 L
404.90164 426.87411 404.98668 426.96198 405.09156 426.96198 C
406.96668 426.96198 L
407.07156 426.96198 407.15660 426.87298 407.15575 426.76413 C
407.12882 417.33014 L
@c
389.95370 453.27713 m
374.39773 453.27713 L
368.43279 453.27713 363.59773 458.11219 363.59773 464.07713 C
363.59773 541.58003 L
363.59773 547.70117 368.55978 552.66321 374.68063 552.66321 C
389.95370 552.66321 L
396.07483 552.66321 401.03660 547.70117 401.03660 541.58003 C
401.03660 464.36117 L
401.03660 458.23918 396.07483 453.27713 389.95370 453.27713 C
@c
395.96570 419.30419 m
395.96570 416.44913 392.57461 416.49109 392.57461 416.49109 C
388.77080 416.49109 389.02961 419.38894 389.02961 419.38894 C
389.02961 427.17713 L
391.59269 427.22702 L
391.60063 419.37619 L
391.60063 418.49717 392.53663 418.54110 392.53663 418.54110 C
393.26258 418.54110 393.37965 419.39802 393.37965 419.39802 C
393.37965 427.22617 L
395.96570 427.22617 L
395.96570 419.30419 L
@c
386.41068 424.29912 m
383.93263 424.29912 L
383.93263 424.97603 L
383.93263 425.61921 383.10775 425.66202 383.10775 425.66202 C
382.55471 425.66202 382.42658 425.25411 382.42658 425.25411 C
382.11959 424.63417 382.64372 424.09814 382.64372 424.09814 C
382.90961 423.77499 383.89975 423.10006 383.89975 423.10006 C
384.33458 422.91694 385.03559 422.44611 385.03559 422.44611 C
386.34860 421.58806 386.58359 419.95899 386.58359 419.95899 C
386.58359 418.88806 L
386.29077 416.17502 383.04765 416.43298 383.04765 416.43298 C
379.64381 416.78306 379.73367 418.82202 379.73367 418.82202 C
379.72375 420.01909 L
382.31263 420.01909 L
382.31263 419.11200 L
382.31263 418.34098 383.24778 418.36620 383.24778 418.36620 C
383.99783 418.33502 384.06161 419.12220 384.06161 419.12220 C
384.16365 419.88898 383.16671 420.43096 383.16671 420.43096 C
382.39569 420.86013 381.22781 421.74000 381.22781 421.74000 C
381.11669 421.81909 381.01380 421.89307 380.91883 421.96110 C
380.24674 422.44413 379.77562 423.18198 379.63361 424.02019 C
379.62964 424.04202 379.62879 424.05420 379.62879 424.05420 C
379.62879 424.89099 L
379.62879 426.04894 380.08658 426.38003 380.08658 426.38003 C
380.09083 426.38910 380.09679 426.39506 380.09962 426.40299 C
380.80063 427.57200 382.76277 427.68595 382.76277 427.68595 C
383.12079 427.70494 383.36457 427.68822 383.36457 427.68822 C
386.60258 427.59298 386.40557 425.40605 386.40557 425.40605 C
386.41068 424.29912 L
@c
390.10961 146.82813 m
374.50063 146.82813 L
371.79666 146.82813 369.59669 148.88721 369.59669 151.41713 C
369.59669 152.63405 370.10183 153.78520 371.02082 154.65912 C
371.94576 155.52822 373.18167 156.00699 374.50063 156.00699 C
390.10961 156.00699 L
392.81981 156.00699 395.02375 153.94819 395.02375 151.41713 C
395.02375 148.88721 392.81981 146.82813 390.10961 146.82813 C
@c
368.59068 425.55912 m
368.59068 417.45798 L
368.59068 417.15921 368.36164 416.91005 368.06570 416.91005 C
366.68268 416.91005 L
366.38759 416.91005 366.14863 417.15921 366.15883 417.46819 C
366.22460 420.70620 L
366.34876 426.70517 L
366.35868 426.99402 366.58772 427.23298 366.87373 427.23298 C
370.07858 427.23298 L
370.33682 427.23298 370.55565 427.03398 370.59364 426.76498 C
371.37572 420.70620 L
371.45282 420.08910 L
371.65266 420.08910 L
371.73883 420.70620 L
372.54983 426.79417 L
372.54983 426.81402 L
372.54983 426.83414 372.54983 426.85398 372.55861 426.87411 C
372.57761 427.09408 372.73975 427.26302 372.95858 427.28315 C
372.96879 427.29307 372.98778 427.29307 373.00677 427.29307 C
373.02576 427.29307 373.04476 427.29307 373.05468 427.28315 C
376.24082 427.28315 L
376.51663 427.28315 376.74567 427.05411 376.75559 426.75506 C
376.91773 420.70620 L
377.00362 417.46819 L
377.01383 417.16913 376.77458 416.91005 376.47865 416.91005 C
375.03865 416.91005 L
374.75263 416.91005 374.52359 417.15921 374.52359 417.45798 C
374.52359 420.70620 L
374.51367 425.66910 L
374.34274 425.66910 L
373.53175 420.70620 L
372.98778 417.36898 L
372.94072 417.09997 372.72076 416.91005 372.47272 416.91005 C
370.68860 416.91005 L
370.43178 416.91005 370.21266 417.09997 370.17468 417.35820 C
369.61172 420.70620 L
368.79080 425.55912 L
368.59068 425.55912 L
@c
363.27572 417.06113 m
361.44680 417.06113 L
361.21068 417.06113 361.01282 417.24510 360.98277 417.48917 C
360.02976 425.41795 L
359.79959 425.41795 L
358.80860 417.48718 L
358.77969 417.24397 358.58069 417.06113 358.34570 417.06113 C
356.51480 417.06113 L
356.22482 417.06113 356.00457 417.33298 356.05474 417.63203 C
357.68863 427.45294 L
362.10161 427.45294 L
363.73578 417.63203 L
363.78482 417.33298 363.56457 417.06113 363.27572 417.06113 C
@c
353.94775 418.95808 m
353.65465 416.24504 350.41181 416.50299 350.41181 416.50299 C
347.00769 416.85222 347.09783 418.89118 347.09783 418.89118 C
347.08762 420.08910 L
349.67679 420.08910 L
349.67679 419.18202 L
349.67679 418.41099 350.61165 418.43622 350.61165 418.43622 C
351.36283 418.40504 351.42576 419.19109 351.42576 419.19109 C
351.52866 419.95899 350.53058 420.50098 350.53058 420.50098 C
349.75956 420.93014 348.64866 421.77997 348.64866 421.77997 C
348.51657 421.87294 348.39468 421.96110 348.28271 422.04019 C
347.61061 422.52009 347.13978 423.25313 346.99663 424.09020 C
346.99380 424.11203 346.99181 424.12422 346.99181 424.12422 C
346.99181 424.96016 L
346.99181 426.11896 347.45074 426.45005 347.45074 426.45005 C
347.45357 426.45798 347.45981 426.46507 347.46378 426.47301 C
348.16479 427.64202 350.12665 427.75597 350.12665 427.75597 C
350.48466 427.77496 350.72759 427.75795 350.72759 427.75795 C
353.96674 427.66299 353.76973 425.47606 353.76973 425.47606 C
353.77483 424.36913 L
351.29679 424.36913 L
351.29679 425.04605 L
351.29679 425.68894 350.47162 425.73203 350.47162 425.73203 C
349.91773 425.73203 349.79074 425.32413 349.79074 425.32413 C
349.48375 424.70419 350.00759 424.16702 350.00759 424.16702 C
350.27376 423.84501 351.26362 423.16894 351.26362 423.16894 C
351.69874 422.98696 352.39861 422.51613 352.39861 422.51613 C
353.71276 421.65808 353.94775 420.02901 353.94775 420.02901 C
353.94775 418.95808 L
@c
348.86183 146.05313 m
347.64378 146.05313 346.65477 147.04214 346.65477 148.26019 C
346.65477 149.48901 347.64378 150.47717 348.86183 150.47717 C
350.09178 150.47717 351.07880 149.48901 351.07880 148.26019 C
351.07880 147.04214 350.09178 146.05313 348.86183 146.05313 C
@c
335.29776 145.69398 m
318.21279 145.69398 L
316.44369 145.69398 314.98866 146.90494 314.98866 148.39597 C
314.98866 149.87906 316.44369 151.09002 318.21279 151.09002 C
335.29776 151.09002 L
337.06658 151.09002 338.51169 149.87906 338.51169 148.39597 C
338.51169 146.90494 337.06658 145.69398 335.29776 145.69398 C
@c
308.14157 614.11918 m
306.83679 614.11918 305.77776 615.17707 305.77776 616.48214 C
305.77776 617.78806 306.83679 618.84709 308.14157 618.84709 C
309.44778 618.84709 310.50567 617.78806 310.50567 616.48214 C
310.50567 615.17707 309.44778 614.11918 308.14157 614.11918 C
@c
456.28356 162.06009 m
462.10479 161.57906 471.38372 163.42696 475.49367 165.51694 C
484.74369 170.18702 487.99672 180.57402 487.99672 191.69405 C
487.99672 196.90101 L
498.04356 196.90101 L
498.04356 418.38208 L
492.26542 418.38208 l
490.89883 418.38208 489.78085 419.50006 489.78085 420.86665 c
489.78085 451.14775 l
489.78085 452.51433 490.89883 453.63231 492.26542 453.63231 c
498.04356 453.63231 L
498.04356 473.13326 L
492.53187 473.13326 l
491.01846 473.13326 489.78085 474.37087 489.78085 475.88400 c
489.78085 531.79058 l
489.78085 533.30372 491.01846 534.54132 492.53187 534.54132 c
498.04356 534.54132 L
498.04356 567.27298 L
487.71383 567.27298 L
487.71383 571.92406 L
487.71383 583.04296 484.74369 593.43109 475.49367 598.10003 C
471.60369 600.07011 462.95376 601.74907 457.24365 600.97096 C
478.11260 603.81609 492.51458 607.73811 512.58359 606.06822 C
512.86762 616.37017 L
512.86762 616.37017 501.95764 617.86403 493.37263 619.83213 C
482.52274 622.32009 485.71965 625.45918 454.62274 625.45805 C
311.80365 625.45805 L
280.99162 625.53912 281.21981 622.12819 273.05376 620.11616 C
264.63061 618.04006 251.31260 616.36819 251.31260 616.36819 C
251.87981 606.85398 L
273.06283 607.38321 279.51364 603.10006 305.33272 601.66715 C
305.81376 601.64107 305.98271 601.62718 306.03458 601.62406 C
300.27458 601.42422 292.43282 600.06019 288.55276 598.10003 C
279.30274 593.43109 275.76567 583.04296 275.76567 571.92406 C
275.76567 567.31408 L
265.96857 567.31408 L
265.94050 486.40762 L
271.29543 486.40762 l
272.66202 486.40762 273.78000 485.28964 273.78000 483.92306 c
273.78000 453.64195 l
273.78000 452.27537 272.66202 451.15739 271.29543 451.15739 c
265.92803 451.15739 L
265.83959 196.65808 L
275.76567 196.65808 L
275.76567 191.69405 L
275.76567 180.57402 279.30274 170.18702 288.55276 165.51694 C
292.69276 163.41704 302.04283 162.19020 307.88277 162.06009 C
275.46378 158.88699 271.71468 153.40706 249.97380 155.95200 C
249.97380 146.01713 L
256.70665 144.62306 263.44857 143.25222 270.21373 142.02113 C
275.74157 141.01597 281.06561 138.86107 286.67169 137.90806 C
294.65972 136.54998 302.68063 136.60809 310.75257 136.64013 C
330.62967 136.64013 L
375.48964 136.64013 L
423.28573 136.64013 L
429.31672 136.64013 435.36274 136.51795 441.39260 136.64013 C
447.00973 136.75294 452.65663 136.18913 458.30976 136.33002 C
464.84561 136.49301 471.36983 137.15206 477.80674 138.30094 C
485.53370 139.68000 492.98967 142.03502 500.70671 143.44413 C
505.35269 144.29310 509.99669 145.15115 514.63956 146.01713 C
514.63956 156.02712 L
494.33868 153.35320 483.16167 159.83717 456.28356 162.06009 C
@c
F

@rax %Note: Object
365.92526 483.31928 399.00643 549.32825 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
391.67830 498.49427 m
391.67830 494.65106 388.56331 491.53606 384.72038 491.53606 C
380.21131 491.53606 L
376.36838 491.53606 373.25339 494.65106 373.25339 498.49427 C
373.25339 503.00419 L
373.25339 506.84712 376.36838 509.96126 380.21131 509.96126 C
384.72038 509.96126 L
388.56331 509.96126 391.67830 506.84712 391.67830 503.00419 C
391.67830 498.49427 L
@c
373.53628 533.87008 m
373.53628 537.71216 376.65241 540.82715 380.49420 540.82715 C
384.43720 540.82715 L
388.28041 540.82715 391.39540 537.71216 391.39540 533.87008 C
391.39540 529.92709 L
391.39540 526.08416 388.28041 522.96917 384.43720 522.96917 C
380.49420 522.96917 L
376.65241 522.96917 373.53628 526.08416 373.53628 529.92709 C
373.53628 533.87008 L
@c
389.81339 549.32825 m
375.11830 549.32825 L
370.04117 549.32825 365.92526 545.21320 365.92526 540.13606 C
365.92526 492.51231 L
365.92526 487.43405 370.04117 483.31928 375.11830 483.31928 C
389.81339 483.31928 L
394.89024 483.31928 399.00643 487.43405 399.00643 492.51231 C
399.00643 540.13606 L
399.00643 545.21320 394.89024 549.32825 389.81339 549.32825 C
@c
F

@rax %Note: Object
368.21622 457.71024 396.56523 473.86715 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 1.00006 1.00006 0.00000 @w
391.05326 473.86715 m
373.72819 473.86715 L
370.68435 473.86715 368.21622 471.39931 368.21622 468.35518 C
368.21622 463.22220 L
368.21622 460.17808 370.68435 457.71024 373.72819 457.71024 C
391.05326 457.71024 L
394.09739 457.71024 396.56523 460.17808 396.56523 463.22220 C
396.56523 468.35518 L
396.56523 471.39931 394.09739 473.86715 391.05326 473.86715 C
@c
S

@rax %Note: Object
404.51074 612.47594 408.47868 616.44501 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.28290 0.28290 0.00000 @w
406.49471 616.44501 m
405.39883 616.44501 404.51074 615.55578 404.51074 614.46076 C
404.51074 613.36488 405.39883 612.47594 406.49471 612.47594 C
407.59058 612.47594 408.47868 613.36488 408.47868 614.46076 C
408.47868 615.55578 407.59058 616.44501 406.49471 616.44501 C
@c
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel19Dict 19.0 0
%%EOF
